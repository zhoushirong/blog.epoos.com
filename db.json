{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1}],"Cache":[{"_id":"themes/maupassant/README.md","hash":"75d8c42569809961953d1934de445418c00ab94c","modified":1481096206000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1481096206000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1481096206000},{"_id":"themes/maupassant/_config.yml","hash":"6c7bfbef4219126074c599db5414f5d9ce5040f1","modified":1481116231000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1481096206000},{"_id":"source/_posts/about.md","hash":"650459b119c51091b99e0a6d49564c4b23d7ba55","modified":1482732645000},{"_id":"source/_posts/hello-world.md","hash":"b3b6a144c648bd8ad00d71455cbc016ec7facb84","modified":1481115946000},{"_id":"source/_posts/ajax-learn.mdown","hash":"02d91516f92de06ad12456c169b45fbcbb97d797","modified":1481266613000},{"_id":"source/_posts/git-cmd-learn.md","hash":"683ab854fccdc4d1aaaef01164d97ae7bd3ef8f8","modified":1481266026000},{"_id":"source/_posts/mac-terminal.md","hash":"24cdc78f189ff94e424658d5736bbfcd75962096","modified":1481266016000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1481096206000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1481096206000},{"_id":"source/_posts/nginx-learn.md","hash":"42c98d124f45a26458b1aac329c9809a33e33c6c","modified":1481266075000},{"_id":"source/_posts/mysql-learn.md","hash":"6c8b079c6f8a96954bb52811a31b19e947c16993","modified":1481266049000},{"_id":"themes/maupassant/.git/COMMIT_EDITMSG","hash":"080f8db82964fa4383e6e26de468afc21fcc5fef","modified":1481162427000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1481096206000},{"_id":"themes/maupassant/.git/index","hash":"5f0f29ab55fae24fa4f0994d8c0bbb22da5ade3f","modified":1482287089000},{"_id":"themes/maupassant/.git/packed-refs","hash":"3086568adc08b69b83524cd126c30e1dff93827c","modified":1481096206000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1481096206000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1481096206000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1481096206000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1481096206000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1481096206000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1481100529000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1481096206000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1481096206000},{"_id":"themes/maupassant/layout/base.jade","hash":"e648d878786ca17cd2d073ebd3db50f86d85d471","modified":1481096206000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"1ad721de96784bf4253316b796db6200148d4152","modified":1481096206000},{"_id":"themes/maupassant/layout/index.jade","hash":"f842164f6cba007c1dfcd7fe7bba24736bc886a9","modified":1481096206000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1481096206000},{"_id":"themes/maupassant/layout/post.jade","hash":"9cf29fb0daed95935154ce0fa2b154df5a9b11b1","modified":1481096206000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1481096206000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1481096206000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"39355a075977d05708ef74e1b66d09a36e486df1","modified":1481096206000},{"_id":"themes/maupassant/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1481096206000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"14ec42acc38dbbb9bbc1780e2ad5dce90b41848e","modified":1481162427000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1481098803000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"aa020b794e697e8e9612530c97c6295efde469fe","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1481096206000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1481096206000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1481096206000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1481096206000},{"_id":"themes/maupassant/source/css/style.scss","hash":"158f1ebecf7b994ffae5332a627465f6bf38113b","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1481096206000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1481096206000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1481096206000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1481096206000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1481096206000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1481096206000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1481096206000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1481096206000},{"_id":"themes/maupassant/.git/objects/e5/83ee4dab4805927797d2e0fadaa5420cdefeb4","hash":"65aeff5debc149888cab6695b005f4a03e0a631e","modified":1481162427000},{"_id":"themes/maupassant/.git/objects/85/f37c2457e359b71e9813de668ad50f201f4743","hash":"ddecb6b7b4dbfd038f0e141a10fdcea77cc3995a","modified":1481103841000},{"_id":"themes/maupassant/.git/objects/fa/b76a82883dd0866235cc15a32d8b346d6758a2","hash":"db7a5907d36aa69fae87d01b5ee8a1a5480ae9be","modified":1481162427000},{"_id":"themes/maupassant/.git/objects/ef/96e466aabdf9268969512f66ad1aa6a9e51974","hash":"1fa4b9da32f02bfa1a7ffa2da271f77db2b08fd9","modified":1481103841000},{"_id":"themes/maupassant/.git/objects/44/db7266927e9623de1e58be710d63c504868425","hash":"ec20b433634e4c6c5cbe40241af106d813cb823d","modified":1481162427000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"4b31ed62a9072461ac60b52a4cf1ce8329af8dca","modified":1481162427000},{"_id":"themes/maupassant/.git/objects/f0/7f3496604f576dd4da1b1eb0cc1f7e43c49d27","hash":"dfaf977f80fe7172e6f98ee2ac8401da18e2c907","modified":1481103841000},{"_id":"themes/maupassant/.git/objects/pack/pack-401efe933f7a88e64b130bd3cb37a9d92e5f19ad.idx","hash":"9f52e8d2a3024ecff0e77f6c587f430fceaa7b2a","modified":1481096206000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"14ec42acc38dbbb9bbc1780e2ad5dce90b41848e","modified":1481162427000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1481096206000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"02923f292daaea6eeaa14dbf0220f59e1874476c","modified":1481096206000},{"_id":"themes/maupassant/.git/objects/pack/pack-401efe933f7a88e64b130bd3cb37a9d92e5f19ad.pack","hash":"51c57684975f19d5010507d1ad9bbfcd511d6063","modified":1481096206000},{"_id":"source/_posts/ajax.md","hash":"02d91516f92de06ad12456c169b45fbcbb97d797","modified":1481266613000},{"_id":"source/_posts/cors.md","hash":"e58cfec46ab98ed2ed7527f05c3b802088fd9e94","modified":1481272301000},{"_id":"source/_posts/createjs.md","hash":"2ba813f1e041339fed82beb2854f58a502ae6050","modified":1483076284000},{"_id":"source/_posts/css-display.md","hash":"66d58c397313a46d52b42900cd136da81a31a3a7","modified":1482285321000},{"_id":"source/_posts/css3-transition.md","hash":"4a2a68f3825dd717a44601785e38af384b406111","modified":1482285324000},{"_id":"source/_posts/css3.md","hash":"36654c741d6257b21acbcbd56005d1c3b8b3954f","modified":1482285481000},{"_id":"source/_posts/dns.md","hash":"3bd63c6976a9c584ca4bea31483ba3c0fa57db94","modified":1483076051000},{"_id":"source/_posts/es6.md","hash":"669ff20c18bac04831844e635c4642d99b29aff7","modified":1482285359000},{"_id":"source/_posts/fast-click.md","hash":"ac9f7b5e5a2b0abd4673dd7a1ef604b8585e1db6","modified":1482285542000},{"_id":"source/_posts/git.md","hash":"683ab854fccdc4d1aaaef01164d97ae7bd3ef8f8","modified":1481266026000},{"_id":"source/_posts/http2.md","hash":"3e75d29d7c8c8c120601236fa07d9143f0d3ec1d","modified":1483075984000},{"_id":"source/_posts/intro.md","hash":"b3b6a144c648bd8ad00d71455cbc016ec7facb84","modified":1482307435000},{"_id":"source/_posts/gulp.md","hash":"9aa1d37a53b5ddc6d26f8cfc1a6814f9d1a3f92d","modified":1483076200000},{"_id":"source/_posts/mac-linux.md","hash":"cf3b575acc11d557d9b2a2de191b7e884a44eeae","modified":1483075851000},{"_id":"source/_posts/linux.md","hash":"e6594e37a9b73987f888ddd12b6f98cc8c98d8d5","modified":1483075822000},{"_id":"source/_posts/mongodb.md","hash":"5c7ebcaf9fbf89a5ccecadb33991f7cbd52d97ad","modified":1482285279000},{"_id":"source/_posts/mysql.md","hash":"90602e026432f472778dd527be481904f5743aa1","modified":1483076135000},{"_id":"source/_posts/nginx.md","hash":"8ae5f3e552d2f2062dbd6e5eeef986b33dbacb4b","modified":1483175760000},{"_id":"source/_posts/nodejs.md","hash":"b18076904cd6abdc37dfadf3b0019f02f9455784","modified":1482285452000},{"_id":"source/_posts/object.md","hash":"c5b47352284fdff46b998c8baab5e181d0aa0786","modified":1482285436000},{"_id":"source/_posts/pm2.md","hash":"dede2fc666eabeb2f6f250617727ff94c7ca32ac","modified":1482285293000},{"_id":"source/_posts/sublime-text.md","hash":"cf259fc775e59843e6c62199840d93ea24c415cf","modified":1482285287000},{"_id":"source/_posts/react.md","hash":"4ff342299a0eed30e88d3068eafff5087559c146","modified":1482285399000},{"_id":"source/_posts/video-audio.md","hash":"f52cc3ae6e9271278b0410bc6d0d0c133cc991aa","modified":1482307213000},{"_id":"source/_posts/webpack.md","hash":"da86f16ccf9cb4f3a2480ee915c476dc2d254018","modified":1482932234000},{"_id":"source/_posts/websafe.md","hash":"055f519679c944a1ef406c6e7de1b7ae8cf3fa4b","modified":1481346032000},{"_id":"source/_posts/vim.md","hash":"b37f6af2894f641b73528a1422610ab30e1641d6","modified":1483168502000}],"Category":[{"name":"其他","_id":"ciwhfxa5w0002l9qt7c2qaylh"},{"name":"工具","_id":"ciwhfxa6b000cl9qta1n44pdq"},{"name":"前端","_id":"ciwhfzr1x000vl9qtjevblq78"},{"name":"linux","_id":"cixbc0caf000y81qtci14lnjo"},{"name":"服务器","_id":"cixbc0jp8001281qtqamuf2mt"},{"name":"网络","_id":"cixbd3gsr0002b9qt7bc6v2rr"},{"name":"服务端","_id":"cixd0jf4g0000wwqtu1k6ev0d"}],"Data":[],"Page":[],"Post":[{"layout":"default","title":"关于本站","date":"1989-12-31T16:00:00.000Z","_content":"\n这是一个神奇的站点，站长是一个很帅很帅的帅哥。\n\n此博客是<a href=\"http://www.epoos.com/\" target=\"_blank\">邑抔司</a>站点系列下面的博客站点，欢迎访问邑抔司，这里有你想要的、或者能找到你需要的东西，就酱！\n\n\n\n","source":"_posts/about.md","raw":"---\nlayout: default\ntitle: 关于本站\ndate: 1990/1/1 00:00:00\ncategory: 其他\ntag: 其他\n---\n\n这是一个神奇的站点，站长是一个很帅很帅的帅哥。\n\n此博客是<a href=\"http://www.epoos.com/\" target=\"_blank\">邑抔司</a>站点系列下面的博客站点，欢迎访问邑抔司，这里有你想要的、或者能找到你需要的东西，就酱！\n\n\n\n","slug":"about","published":1,"updated":"2016-12-26T06:10:45.000Z","_id":"ciwhfxa5o0000l9qt4z0ls976","comments":1,"photos":[],"link":"","content":"<p>这是一个神奇的站点，站长是一个很帅很帅的帅哥。</p>\n<p>此博客是<a href=\"http://www.epoos.com/\" target=\"_blank\">邑抔司</a>站点系列下面的博客站点，欢迎访问邑抔司，这里有你想要的、或者能找到你需要的东西，就酱！</p>\n","excerpt":"","more":"<p>这是一个神奇的站点，站长是一个很帅很帅的帅哥。</p>\n<p>此博客是<a href=\"http://www.epoos.com/\" target=\"_blank\">邑抔司</a>站点系列下面的博客站点，欢迎访问邑抔司，这里有你想要的、或者能找到你需要的东西，就酱！</p>\n"},{"layout":"default","title":"常用mac终端命令","_content":"\nmac搭配的系统是基于linux内核开发的，因此大部分linux的命令都适用于mac上，因此对于mac用户来说，使用命令行操作变得非常的时髦，非常的高大上。\n下面介绍一下基本的mac命令操作。\n\n\n```\ncd —— 进入目录\n\nsudo —— 获取临时root权限\n\nfind ~iname xxx  —— 查找文件夹\n\nsudo shutdown -h now | sudo halt —— 关机\n\nsudo reboot | sudo shutdown -r now —— 重启\n\npasswd  —— 修改用户密码\n\nhistory —— 最近执行的命令以及编号\n\nenv —— 显示当前所有设置过的环境变量\n\nwho —— 当前登陆的所有用户\n\nwhoami —— 当前正在操作的用户名\n\n```\n\n### 登录远程机器：\n\n```\n\nssh xxx@ip -p 端口\n\n```\n\n### 操作文件\n\n```\n\nmkdir 文件名 —— 建立新目录\n\nrm -rf —— 删除文件夹\n\nrm —— 删除文件\n\npwd —— 显示当前文件夹路径\n\n```\n\n### vim命令：\n\n```\n\ni —— 插入模式\n\nesc —— 退出\n\n:wq —— 保存并退出\n\n:q! —— 不保存退出\n\nu —— 撤销上一次操作\n\nctl+r 和u相反\n\n```\n\n### 一些快捷键\n\n```\n\ncommand + t —— 在终端新打开一个终端\n\ncommand + c —— 复制\n\ncommand + v —— 粘贴\n\ncommand + z —— 撤销\n\ncommand + 左（右） —— 移到行头（尾）\n\ncommand + shift + 左（右） —— 移到行头（尾）并选中\n\ncommand + r —— 刷新网页\n\nfn + 上（下） —— pageup(pagedown)\n\nfn + delete —— 向后删除\n\n```\n\n### 解压.gz文件\n\n```\ngunzip filename.gz\n\ngunzip -g filename.gz\n\n```\n\nor\n\n### 将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\n\n```\n\n[root@linux ~]# cd /usr/local/src\n\n[root@linux src]# tar -zxvf /tmp/etc.tar.gz\n\n```\n\n\n\n\n### 安装redis教程传送门\n<a href=\"http://www.mamicode.com/info-detail-526405.html\" target=\"_blank\">http://www.mamicode.com/info-detail-526405.html</a>\n\n\n\n\n\n","source":"_posts/mac-terminal.md","raw":"---\nlayout: default\ntitle: 常用mac终端命令\ncategory: 工具\ntag: macTerminal\n---\n\nmac搭配的系统是基于linux内核开发的，因此大部分linux的命令都适用于mac上，因此对于mac用户来说，使用命令行操作变得非常的时髦，非常的高大上。\n下面介绍一下基本的mac命令操作。\n\n\n```\ncd —— 进入目录\n\nsudo —— 获取临时root权限\n\nfind ~iname xxx  —— 查找文件夹\n\nsudo shutdown -h now | sudo halt —— 关机\n\nsudo reboot | sudo shutdown -r now —— 重启\n\npasswd  —— 修改用户密码\n\nhistory —— 最近执行的命令以及编号\n\nenv —— 显示当前所有设置过的环境变量\n\nwho —— 当前登陆的所有用户\n\nwhoami —— 当前正在操作的用户名\n\n```\n\n### 登录远程机器：\n\n```\n\nssh xxx@ip -p 端口\n\n```\n\n### 操作文件\n\n```\n\nmkdir 文件名 —— 建立新目录\n\nrm -rf —— 删除文件夹\n\nrm —— 删除文件\n\npwd —— 显示当前文件夹路径\n\n```\n\n### vim命令：\n\n```\n\ni —— 插入模式\n\nesc —— 退出\n\n:wq —— 保存并退出\n\n:q! —— 不保存退出\n\nu —— 撤销上一次操作\n\nctl+r 和u相反\n\n```\n\n### 一些快捷键\n\n```\n\ncommand + t —— 在终端新打开一个终端\n\ncommand + c —— 复制\n\ncommand + v —— 粘贴\n\ncommand + z —— 撤销\n\ncommand + 左（右） —— 移到行头（尾）\n\ncommand + shift + 左（右） —— 移到行头（尾）并选中\n\ncommand + r —— 刷新网页\n\nfn + 上（下） —— pageup(pagedown)\n\nfn + delete —— 向后删除\n\n```\n\n### 解压.gz文件\n\n```\ngunzip filename.gz\n\ngunzip -g filename.gz\n\n```\n\nor\n\n### 将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\n\n```\n\n[root@linux ~]# cd /usr/local/src\n\n[root@linux src]# tar -zxvf /tmp/etc.tar.gz\n\n```\n\n\n\n\n### 安装redis教程传送门\n<a href=\"http://www.mamicode.com/info-detail-526405.html\" target=\"_blank\">http://www.mamicode.com/info-detail-526405.html</a>\n\n\n\n\n\n","slug":"mac-terminal","published":1,"date":"2016-12-05T12:30:54.000Z","updated":"2016-12-09T06:46:56.000Z","comments":1,"photos":[],"link":"","_id":"ciwhfxa630005l9qtf1wm06ts","content":"<p>mac搭配的系统是基于linux内核开发的，因此大部分linux的命令都适用于mac上，因此对于mac用户来说，使用命令行操作变得非常的时髦，非常的高大上。<br>下面介绍一下基本的mac命令操作。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd —— 进入目录</div><div class=\"line\"></div><div class=\"line\">sudo —— 获取临时root权限</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">find</span> ~iname xxx  —— 查找文件夹</div><div class=\"line\"></div><div class=\"line\">sudo <span class=\"built_in\">shutdown</span> -h now | sudo halt —— 关机</div><div class=\"line\"></div><div class=\"line\">sudo reboot | sudo <span class=\"built_in\">shutdown</span> -r now —— 重启</div><div class=\"line\"></div><div class=\"line\">passwd  —— 修改用户密码</div><div class=\"line\"></div><div class=\"line\">history —— 最近执行的命令以及编号</div><div class=\"line\"></div><div class=\"line\">env —— 显示当前所有设置过的环境变量</div><div class=\"line\"></div><div class=\"line\">who —— 当前登陆的所有用户</div><div class=\"line\"></div><div class=\"line\">whoami —— 当前正在操作的用户名</div></pre></td></tr></table></figure>\n<h3 id=\"登录远程机器：\"><a href=\"#登录远程机器：\" class=\"headerlink\" title=\"登录远程机器：\"></a>登录远程机器：</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">ssh</span> xxx<span class=\"variable\">@ip</span> -p 端口</div></pre></td></tr></table></figure>\n<h3 id=\"操作文件\"><a href=\"#操作文件\" class=\"headerlink\" title=\"操作文件\"></a>操作文件</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">mkdir</span> 文件名 —— 建立新目录</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> -rf —— 删除文件夹</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> —— 删除文件</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">pwd</span> —— 显示当前文件夹路径</div></pre></td></tr></table></figure>\n<h3 id=\"vim命令：\"><a href=\"#vim命令：\" class=\"headerlink\" title=\"vim命令：\"></a>vim命令：</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">i</span> —— 插入模式</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">esc</span> —— 退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:wq</span> —— 保存并退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:q</span>! —— 不保存退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">u</span> —— 撤销上一次操作</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">ctl</span>+<span class=\"selector-tag\">r</span> 和<span class=\"selector-tag\">u</span>相反</div></pre></td></tr></table></figure>\n<h3 id=\"一些快捷键\"><a href=\"#一些快捷键\" class=\"headerlink\" title=\"一些快捷键\"></a>一些快捷键</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">t</span> —— 在终端新打开一个终端</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">c</span> —— 复制</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">v</span> —— 粘贴</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">z</span> —— 撤销</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + 左（右） —— 移到行头（尾）</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">shift</span> + 左（右） —— 移到行头（尾）并选中</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">r</span> —— 刷新网页</div><div class=\"line\"></div><div class=\"line\">fn + 上（下） —— pageup(pagedown)</div><div class=\"line\"></div><div class=\"line\">fn + <span class=\"built_in\">delete</span> —— 向后删除</div></pre></td></tr></table></figure>\n<h3 id=\"解压-gz文件\"><a href=\"#解压-gz文件\" class=\"headerlink\" title=\"解压.gz文件\"></a>解压.gz文件</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">gunzip</span> <span class=\"selector-tag\">filename</span><span class=\"selector-class\">.gz</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">gunzip</span> <span class=\"selector-tag\">-g</span> <span class=\"selector-tag\">filename</span><span class=\"selector-class\">.gz</span></div></pre></td></tr></table></figure>\n<p>or</p>\n<h3 id=\"将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\"><a href=\"#将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\" class=\"headerlink\" title=\"将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\"></a>将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[root<span class=\"symbol\">@linux</span> ~]<span class=\"meta\"># cd /usr/local/src</span></div><div class=\"line\"></div><div class=\"line\">[root<span class=\"symbol\">@linux</span> src]<span class=\"meta\"># tar -zxvf /tmp/etc.tar.gz</span></div></pre></td></tr></table></figure>\n<h3 id=\"安装redis教程传送门\"><a href=\"#安装redis教程传送门\" class=\"headerlink\" title=\"安装redis教程传送门\"></a>安装redis教程传送门</h3><p><a href=\"http://www.mamicode.com/info-detail-526405.html\" target=\"_blank\">http://www.mamicode.com/info-detail-526405.html</a></p>\n","excerpt":"","more":"<p>mac搭配的系统是基于linux内核开发的，因此大部分linux的命令都适用于mac上，因此对于mac用户来说，使用命令行操作变得非常的时髦，非常的高大上。<br>下面介绍一下基本的mac命令操作。</p>\n<figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd —— 进入目录</div><div class=\"line\"></div><div class=\"line\">sudo —— 获取临时root权限</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">find</span> ~iname xxx  —— 查找文件夹</div><div class=\"line\"></div><div class=\"line\">sudo <span class=\"built_in\">shutdown</span> -h now | sudo halt —— 关机</div><div class=\"line\"></div><div class=\"line\">sudo reboot | sudo <span class=\"built_in\">shutdown</span> -r now —— 重启</div><div class=\"line\"></div><div class=\"line\">passwd  —— 修改用户密码</div><div class=\"line\"></div><div class=\"line\">history —— 最近执行的命令以及编号</div><div class=\"line\"></div><div class=\"line\">env —— 显示当前所有设置过的环境变量</div><div class=\"line\"></div><div class=\"line\">who —— 当前登陆的所有用户</div><div class=\"line\"></div><div class=\"line\">whoami —— 当前正在操作的用户名</div></pre></td></tr></table></figure>\n<h3 id=\"登录远程机器：\"><a href=\"#登录远程机器：\" class=\"headerlink\" title=\"登录远程机器：\"></a>登录远程机器：</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">ssh</span> xxx<span class=\"variable\">@ip</span> -p 端口</div></pre></td></tr></table></figure>\n<h3 id=\"操作文件\"><a href=\"#操作文件\" class=\"headerlink\" title=\"操作文件\"></a>操作文件</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">mkdir</span> 文件名 —— 建立新目录</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> -rf —— 删除文件夹</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> —— 删除文件</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">pwd</span> —— 显示当前文件夹路径</div></pre></td></tr></table></figure>\n<h3 id=\"vim命令：\"><a href=\"#vim命令：\" class=\"headerlink\" title=\"vim命令：\"></a>vim命令：</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">i</span> —— 插入模式</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">esc</span> —— 退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:wq</span> —— 保存并退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:q</span>! —— 不保存退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">u</span> —— 撤销上一次操作</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">ctl</span>+<span class=\"selector-tag\">r</span> 和<span class=\"selector-tag\">u</span>相反</div></pre></td></tr></table></figure>\n<h3 id=\"一些快捷键\"><a href=\"#一些快捷键\" class=\"headerlink\" title=\"一些快捷键\"></a>一些快捷键</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">t</span> —— 在终端新打开一个终端</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">c</span> —— 复制</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">v</span> —— 粘贴</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">z</span> —— 撤销</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + 左（右） —— 移到行头（尾）</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">shift</span> + 左（右） —— 移到行头（尾）并选中</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span> + <span class=\"title\">r</span> —— 刷新网页</div><div class=\"line\"></div><div class=\"line\">fn + 上（下） —— pageup(pagedown)</div><div class=\"line\"></div><div class=\"line\">fn + <span class=\"built_in\">delete</span> —— 向后删除</div></pre></td></tr></table></figure>\n<h3 id=\"解压-gz文件\"><a href=\"#解压-gz文件\" class=\"headerlink\" title=\"解压.gz文件\"></a>解压.gz文件</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">gunzip</span> <span class=\"selector-tag\">filename</span><span class=\"selector-class\">.gz</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">gunzip</span> <span class=\"selector-tag\">-g</span> <span class=\"selector-tag\">filename</span><span class=\"selector-class\">.gz</span></div></pre></td></tr></table></figure>\n<p>or</p>\n<h3 id=\"将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\"><a href=\"#将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\" class=\"headerlink\" title=\"将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\"></a>将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下</h3><figure class=\"highlight autoit\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">[root<span class=\"symbol\">@linux</span> ~]<span class=\"meta\"># cd /usr/local/src</span></div><div class=\"line\"></div><div class=\"line\">[root<span class=\"symbol\">@linux</span> src]<span class=\"meta\"># tar -zxvf /tmp/etc.tar.gz</span></div></pre></td></tr></table></figure>\n<h3 id=\"安装redis教程传送门\"><a href=\"#安装redis教程传送门\" class=\"headerlink\" title=\"安装redis教程传送门\"></a>安装redis教程传送门</h3><p><a href=\"http://www.mamicode.com/info-detail-526405.html\" target=\"_blank\">http://www.mamicode.com/info-detail-526405.html</a></p>\n"},{"layout":"default","title":"Ajax","_content":"\nAjax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。\nAJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n\n","source":"_posts/ajax-learn.md","raw":"---\nlayout: default\ntitle: Ajax\ncategory: 前端\ntag: js ajax\n---\n\nAjax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。\nAJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n\n","slug":"ajax-learn","published":1,"date":"2016-12-09T06:42:22.000Z","updated":"2016-12-09T06:56:53.000Z","comments":1,"photos":[],"link":"","_id":"ciwhfzr1v000ul9qt9p609xlh","content":"<p>Ajax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。<br>AJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3>","excerpt":"","more":"<p>Ajax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。<br>AJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3>"},{"layout":"default","title":"跨域资源共享 CORS","_content":"\nCORS是一个W3C标准，全称是\"跨域资源共享\"（Cross-origin resource sharing）。\n它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。\n\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n1.设置 document.domain\n原理：相同主域名不同子域名下的页面，可以设置document.domain让它们同域\n限制：同域document提供的是页面间的互操作，需要载入iframe页面\n\n2.有src的标签\n原理：所有具有src属性的HTML标签都是可以跨域的，包括 <img>, <script>\n限制：需要创建一个DOM对象，只能用于GET方法\n\n其实样式表的<link>标签也是可以跨域的，只要是有src或href的HTML标签都有跨域的能力。\n不同的HTML标签发送HTTP请求的时机不同，\n<img>在更改src属性时就会发送请求，而script, iframe, link[rel=stylesheet]只有在添加到DOM树之后才会发送HTTP请求：\n\n3.JSONP\n原理：<script>是可以跨域的，而且在跨域脚本中可以直接回调当前脚本的函数。\n限制：需要创建一个DOM对象并且添加到DOM树，只能用于GET方法\n\n4.navigation 对象(window.name)\n原理：iframe之间是共享navigator对象的，用它来传递信息\n要求：IE6/7\n\n有些人注意到了IE6/7的一个漏洞：iframe之间的window.navigator对象是共享的。 我们可以把它作为一个Messenger，通过它来传递信息。\n\n5.跨域资源共享（CORS）\n原理：服务器设置Access-Control-Allow-OriginHTTP响应头之后，浏览器将会允许跨域请求\n限制：浏览器需要支持HTML5，可以支持POST，PUT等方法\n\n6.window.postMessage\n原理：HTML5允许窗口之间发送消息\n限制：浏览器需要支持HTML5，获取窗口句柄后才能相互通信\n\n7.flash\n利用flash的URLLoader，也可以轻松实现跨域数据交互。\n只要站点B的跨域策略文件(crossdomain.xml)中包含了站点A，A站就可以获取B站的数据提交数据给B站.\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/cors.md","raw":"---\nlayout: default\ntitle: 跨域资源共享 CORS\ncategory: 前端\ntag: js ajax cors 跨域请求\n---\n\nCORS是一个W3C标准，全称是\"跨域资源共享\"（Cross-origin resource sharing）。\n它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。\n\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n1.设置 document.domain\n原理：相同主域名不同子域名下的页面，可以设置document.domain让它们同域\n限制：同域document提供的是页面间的互操作，需要载入iframe页面\n\n2.有src的标签\n原理：所有具有src属性的HTML标签都是可以跨域的，包括 <img>, <script>\n限制：需要创建一个DOM对象，只能用于GET方法\n\n其实样式表的<link>标签也是可以跨域的，只要是有src或href的HTML标签都有跨域的能力。\n不同的HTML标签发送HTTP请求的时机不同，\n<img>在更改src属性时就会发送请求，而script, iframe, link[rel=stylesheet]只有在添加到DOM树之后才会发送HTTP请求：\n\n3.JSONP\n原理：<script>是可以跨域的，而且在跨域脚本中可以直接回调当前脚本的函数。\n限制：需要创建一个DOM对象并且添加到DOM树，只能用于GET方法\n\n4.navigation 对象(window.name)\n原理：iframe之间是共享navigator对象的，用它来传递信息\n要求：IE6/7\n\n有些人注意到了IE6/7的一个漏洞：iframe之间的window.navigator对象是共享的。 我们可以把它作为一个Messenger，通过它来传递信息。\n\n5.跨域资源共享（CORS）\n原理：服务器设置Access-Control-Allow-OriginHTTP响应头之后，浏览器将会允许跨域请求\n限制：浏览器需要支持HTML5，可以支持POST，PUT等方法\n\n6.window.postMessage\n原理：HTML5允许窗口之间发送消息\n限制：浏览器需要支持HTML5，获取窗口句柄后才能相互通信\n\n7.flash\n利用flash的URLLoader，也可以轻松实现跨域数据交互。\n只要站点B的跨域策略文件(crossdomain.xml)中包含了站点A，A站就可以获取B站的数据提交数据给B站.\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"cors","published":1,"date":"2016-12-09T07:04:20.000Z","updated":"2016-12-09T08:31:41.000Z","_id":"ciwhg5uik000zl9qtbzburyd1","comments":1,"photos":[],"link":"","content":"<p>CORS是一个W3C标准，全称是”跨域资源共享”（Cross-origin resource sharing）。<br>它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3><p>1.设置 document.domain<br>原理：相同主域名不同子域名下的页面，可以设置document.domain让它们同域<br>限制：同域document提供的是页面间的互操作，需要载入iframe页面</p>\n<p>2.有src的标签<br>原理：所有具有src属性的HTML标签都是可以跨域的，包括 <img>, <script><br>限制：需要创建一个DOM对象，只能用于GET方法</p>\n<p>其实样式表的<link>标签也是可以跨域的，只要是有src或href的HTML标签都有跨域的能力。<br>不同的HTML标签发送HTTP请求的时机不同，<br><img>在更改src属性时就会发送请求，而script, iframe, link[rel=stylesheet]只有在添加到DOM树之后才会发送HTTP请求：</p>\n<p>3.JSONP<br>原理：<script>是可以跨域的，而且在跨域脚本中可以直接回调当前脚本的函数。<br>限制：需要创建一个DOM对象并且添加到DOM树，只能用于GET方法</p>\n<p>4.navigation 对象(window.name)<br>原理：iframe之间是共享navigator对象的，用它来传递信息<br>要求：IE6/7</p>\n<p>有些人注意到了IE6/7的一个漏洞：iframe之间的window.navigator对象是共享的。 我们可以把它作为一个Messenger，通过它来传递信息。</p>\n<p>5.跨域资源共享（CORS）<br>原理：服务器设置Access-Control-Allow-OriginHTTP响应头之后，浏览器将会允许跨域请求<br>限制：浏览器需要支持HTML5，可以支持POST，PUT等方法</p>\n<p>6.window.postMessage<br>原理：HTML5允许窗口之间发送消息<br>限制：浏览器需要支持HTML5，获取窗口句柄后才能相互通信</p>\n<p>7.flash<br>利用flash的URLLoader，也可以轻松实现跨域数据交互。<br>只要站点B的跨域策略文件(crossdomain.xml)中包含了站点A，A站就可以获取B站的数据提交数据给B站.</p>\n</script></p>","excerpt":"","more":"<p>CORS是一个W3C标准，全称是”跨域资源共享”（Cross-origin resource sharing）。<br>它允许浏览器向跨源服务器，发出XMLHttpRequest请求，从而克服了AJAX只能同源使用的限制。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3><p>1.设置 document.domain<br>原理：相同主域名不同子域名下的页面，可以设置document.domain让它们同域<br>限制：同域document提供的是页面间的互操作，需要载入iframe页面</p>\n<p>2.有src的标签<br>原理：所有具有src属性的HTML标签都是可以跨域的，包括 <img>, <script><br>限制：需要创建一个DOM对象，只能用于GET方法</p>\n<p>其实样式表的<link>标签也是可以跨域的，只要是有src或href的HTML标签都有跨域的能力。<br>不同的HTML标签发送HTTP请求的时机不同，<br><img>在更改src属性时就会发送请求，而script, iframe, link[rel=stylesheet]只有在添加到DOM树之后才会发送HTTP请求：</p>\n<p>3.JSONP<br>原理：<script>是可以跨域的，而且在跨域脚本中可以直接回调当前脚本的函数。<br>限制：需要创建一个DOM对象并且添加到DOM树，只能用于GET方法</p>\n<p>4.navigation 对象(window.name)<br>原理：iframe之间是共享navigator对象的，用它来传递信息<br>要求：IE6/7</p>\n<p>有些人注意到了IE6/7的一个漏洞：iframe之间的window.navigator对象是共享的。 我们可以把它作为一个Messenger，通过它来传递信息。</p>\n<p>5.跨域资源共享（CORS）<br>原理：服务器设置Access-Control-Allow-OriginHTTP响应头之后，浏览器将会允许跨域请求<br>限制：浏览器需要支持HTML5，可以支持POST，PUT等方法</p>\n<p>6.window.postMessage<br>原理：HTML5允许窗口之间发送消息<br>限制：浏览器需要支持HTML5，获取窗口句柄后才能相互通信</p>\n<p>7.flash<br>利用flash的URLLoader，也可以轻松实现跨域数据交互。<br>只要站点B的跨域策略文件(crossdomain.xml)中包含了站点A，A站就可以获取B站的数据提交数据给B站.</p>\n"},{"layout":"default","title":"web安全问题","_content":"\nWeb安全是一个如何强调都不为过的事情，没有发生就什么事都没有，一旦发生了将可能导致不可估量的损失。\n本人对web安全也了解不多，趁此摸鱼的时间，查一查相关资料，在此记录一下。\n\n\n### 攻击方式\n\n1.资源枚举\n枚举url获取网站文件、枚举错误信息获取网站信息\n\n2.参数操纵\n包括了SQL注入、XPath注入、cgi命令执行，还有XXS和会话劫持等，前三个的攻击主要是在服务端触发的，后二者的攻击则是侧重于客户端。\n\n3.会话劫持\n\n4.XSS 全称(Cross Site Scripting) 跨站脚本攻击， 是Web程序中最常见的漏洞\nXSS指攻击者在网页中嵌入客户端脚本（js/css），\n当用户浏览此网页时，脚本就会在用户客户端上执行，从而达到攻击目的，比如获取用户cookie,导航到恶意网站，携带木马等。\n1)反射型XSS，又称非持久型XSS\n\t攻击者通过电子邮件等方式将包含注入脚本的恶意链接发送给受害者，当受害者点击该链接时，注 入脚本被传输到目标服务器上，然后服务器将注入脚本“反射”到受害者的浏览器上，从而在该浏览器上执行了这段脚本。\n2)存储型XSS\n3)DOM XSS\t\n4)XSS payload\n\n\n\n5.CSRF（cross-site request forgery），翻译为跨站请求伪造\n与XSS非常相似，但XSS是利用用户对当前网站的信任来发起攻击，而CSRF是利用网站对用户的信任来发起攻击。\n\n对于CSRF攻击，我们所能做的可以有：\n1). 检查报头中的Referer参数确保请求发自正确的网站（但XHR请求可调用setRequestHeader方法来修改Referer报头）；\n2). 对于任何重要的请求都需要重新验证用户的身份；\n3). 创建一个唯一的令牌（Token），将其存在服务端的session中及客户端的cookie中，对任何请求，都检查二者是否一致。\n\n\n\n6.钓鱼攻击 指的是网站的伪造，比如ta0bao.com，然后在其中应用XSS等方式发起攻击。\n\n7.拒绝服务（DoS）指的是向网站发起洪水一样的请求（Traffic Floor），导致服务器超负荷并关闭.\n处理方法常规是采用QoS（Quality of Service）的软硬件解决方案。\n\n### 攻击层面\n\n攻击层面指的是有恶意的人可能会从哪些地方来入手制造麻烦，常见的攻击层面有三种：\n一. 传统WEB应用程序\n1. 表单输入（甚至包括hidden控件的内容）；\n2. cookie（通过修改cookie内容也可以达到SQL注入攻击的目的）；\n3. 报头（有时候为了方便统计来源数据，服务器会把客户端发来报头的Referer、User-Agent信息存到数据库中，那么通过修改报头信息也可以起到SQL注入工具目的）\n4. 请求参数\n5. 上传文件（在文件内携带恶意代码）\n\n二. Web服务\n1. 上述“传统WEB服务”的全部方法；\n2. WSDL文档（暴露了服务端的每个方法及其使用方式）\n\n三. AJAX应用程序\n即上述的“一”和“二”的合集\n\n### 解决方案\n综上所述，我们可以这样审视我们的WEB站点：\n\n1. 永远不要相信客户端传来的任何信息，对这些信息都应先进行编码或过滤处理；\n2. 谨慎返回用户输入的信息；\n3. 使用黑名单和白名单处理（即“不允许哪些敏感信息”或“只允许哪些信息”，白名单的效果更好但局限性高）；\n4. 检查、验证请求来源，对每一个重要的操作都进行重新验证；\n5. 使用SSL防止第三方监听通信（但无法阻止XSS、CSRF、SQL注入攻击）；\n6. 不要将重要文件、备份文件存放在公众可访问到的地方；\n7. 会话ID无序化；\n8. 对用户上传的文件进行验证（不单单是格式验证，比方一张gif图片还应将其转为二进制并验证其每帧颜色值<无符号8位>和宽高值<无符号16位>）；\n9. WSDL文档应当要求用户注册后才能获取；\n10. 在报头定义CSP（Content Security Policy）；\n11. 。。。\n\n虽然我们有一些必要的手段来防止WEB攻击，但永远不会有一枚silver bullet来彻底解决问题，先不谈那些数不胜数的已知的、可被攻击的漏洞，对于谜一样的0-day漏洞，我们所能做的只是提前发现并及时修补它们。\n\n\n### 参考链接\n\nhttp://www.cnblogs.com/vajoy/p/4176908.html\nhttp://imweb.io/topic/568958714c44bcc56092e409\n","source":"_posts/websafe.md","raw":"---\nlayout: default\ntitle: web安全问题\ncategory: 前端\ntag: js ajax cors web安全 跨域请求\n---\n\nWeb安全是一个如何强调都不为过的事情，没有发生就什么事都没有，一旦发生了将可能导致不可估量的损失。\n本人对web安全也了解不多，趁此摸鱼的时间，查一查相关资料，在此记录一下。\n\n\n### 攻击方式\n\n1.资源枚举\n枚举url获取网站文件、枚举错误信息获取网站信息\n\n2.参数操纵\n包括了SQL注入、XPath注入、cgi命令执行，还有XXS和会话劫持等，前三个的攻击主要是在服务端触发的，后二者的攻击则是侧重于客户端。\n\n3.会话劫持\n\n4.XSS 全称(Cross Site Scripting) 跨站脚本攻击， 是Web程序中最常见的漏洞\nXSS指攻击者在网页中嵌入客户端脚本（js/css），\n当用户浏览此网页时，脚本就会在用户客户端上执行，从而达到攻击目的，比如获取用户cookie,导航到恶意网站，携带木马等。\n1)反射型XSS，又称非持久型XSS\n\t攻击者通过电子邮件等方式将包含注入脚本的恶意链接发送给受害者，当受害者点击该链接时，注 入脚本被传输到目标服务器上，然后服务器将注入脚本“反射”到受害者的浏览器上，从而在该浏览器上执行了这段脚本。\n2)存储型XSS\n3)DOM XSS\t\n4)XSS payload\n\n\n\n5.CSRF（cross-site request forgery），翻译为跨站请求伪造\n与XSS非常相似，但XSS是利用用户对当前网站的信任来发起攻击，而CSRF是利用网站对用户的信任来发起攻击。\n\n对于CSRF攻击，我们所能做的可以有：\n1). 检查报头中的Referer参数确保请求发自正确的网站（但XHR请求可调用setRequestHeader方法来修改Referer报头）；\n2). 对于任何重要的请求都需要重新验证用户的身份；\n3). 创建一个唯一的令牌（Token），将其存在服务端的session中及客户端的cookie中，对任何请求，都检查二者是否一致。\n\n\n\n6.钓鱼攻击 指的是网站的伪造，比如ta0bao.com，然后在其中应用XSS等方式发起攻击。\n\n7.拒绝服务（DoS）指的是向网站发起洪水一样的请求（Traffic Floor），导致服务器超负荷并关闭.\n处理方法常规是采用QoS（Quality of Service）的软硬件解决方案。\n\n### 攻击层面\n\n攻击层面指的是有恶意的人可能会从哪些地方来入手制造麻烦，常见的攻击层面有三种：\n一. 传统WEB应用程序\n1. 表单输入（甚至包括hidden控件的内容）；\n2. cookie（通过修改cookie内容也可以达到SQL注入攻击的目的）；\n3. 报头（有时候为了方便统计来源数据，服务器会把客户端发来报头的Referer、User-Agent信息存到数据库中，那么通过修改报头信息也可以起到SQL注入工具目的）\n4. 请求参数\n5. 上传文件（在文件内携带恶意代码）\n\n二. Web服务\n1. 上述“传统WEB服务”的全部方法；\n2. WSDL文档（暴露了服务端的每个方法及其使用方式）\n\n三. AJAX应用程序\n即上述的“一”和“二”的合集\n\n### 解决方案\n综上所述，我们可以这样审视我们的WEB站点：\n\n1. 永远不要相信客户端传来的任何信息，对这些信息都应先进行编码或过滤处理；\n2. 谨慎返回用户输入的信息；\n3. 使用黑名单和白名单处理（即“不允许哪些敏感信息”或“只允许哪些信息”，白名单的效果更好但局限性高）；\n4. 检查、验证请求来源，对每一个重要的操作都进行重新验证；\n5. 使用SSL防止第三方监听通信（但无法阻止XSS、CSRF、SQL注入攻击）；\n6. 不要将重要文件、备份文件存放在公众可访问到的地方；\n7. 会话ID无序化；\n8. 对用户上传的文件进行验证（不单单是格式验证，比方一张gif图片还应将其转为二进制并验证其每帧颜色值<无符号8位>和宽高值<无符号16位>）；\n9. WSDL文档应当要求用户注册后才能获取；\n10. 在报头定义CSP（Content Security Policy）；\n11. 。。。\n\n虽然我们有一些必要的手段来防止WEB攻击，但永远不会有一枚silver bullet来彻底解决问题，先不谈那些数不胜数的已知的、可被攻击的漏洞，对于谜一样的0-day漏洞，我们所能做的只是提前发现并及时修补它们。\n\n\n### 参考链接\n\nhttp://www.cnblogs.com/vajoy/p/4176908.html\nhttp://imweb.io/topic/568958714c44bcc56092e409\n","slug":"websafe","published":1,"date":"2016-12-09T07:58:08.000Z","updated":"2016-12-10T05:00:32.000Z","_id":"ciwhi31ji0016l9qthsibee0u","comments":1,"photos":[],"link":"","content":"<p>Web安全是一个如何强调都不为过的事情，没有发生就什么事都没有，一旦发生了将可能导致不可估量的损失。<br>本人对web安全也了解不多，趁此摸鱼的时间，查一查相关资料，在此记录一下。</p>\n<h3 id=\"攻击方式\"><a href=\"#攻击方式\" class=\"headerlink\" title=\"攻击方式\"></a>攻击方式</h3><p>1.资源枚举<br>枚举url获取网站文件、枚举错误信息获取网站信息</p>\n<p>2.参数操纵<br>包括了SQL注入、XPath注入、cgi命令执行，还有XXS和会话劫持等，前三个的攻击主要是在服务端触发的，后二者的攻击则是侧重于客户端。</p>\n<p>3.会话劫持</p>\n<p>4.XSS 全称(Cross Site Scripting) 跨站脚本攻击， 是Web程序中最常见的漏洞<br>XSS指攻击者在网页中嵌入客户端脚本（js/css），<br>当用户浏览此网页时，脚本就会在用户客户端上执行，从而达到攻击目的，比如获取用户cookie,导航到恶意网站，携带木马等。<br>1)反射型XSS，又称非持久型XSS<br>    攻击者通过电子邮件等方式将包含注入脚本的恶意链接发送给受害者，当受害者点击该链接时，注 入脚本被传输到目标服务器上，然后服务器将注入脚本“反射”到受害者的浏览器上，从而在该浏览器上执行了这段脚本。<br>2)存储型XSS<br>3)DOM XSS<br>4)XSS payload</p>\n<p>5.CSRF（cross-site request forgery），翻译为跨站请求伪造<br>与XSS非常相似，但XSS是利用用户对当前网站的信任来发起攻击，而CSRF是利用网站对用户的信任来发起攻击。</p>\n<p>对于CSRF攻击，我们所能做的可以有：<br>1). 检查报头中的Referer参数确保请求发自正确的网站（但XHR请求可调用setRequestHeader方法来修改Referer报头）；<br>2). 对于任何重要的请求都需要重新验证用户的身份；<br>3). 创建一个唯一的令牌（Token），将其存在服务端的session中及客户端的cookie中，对任何请求，都检查二者是否一致。</p>\n<p>6.钓鱼攻击 指的是网站的伪造，比如ta0bao.com，然后在其中应用XSS等方式发起攻击。</p>\n<p>7.拒绝服务（DoS）指的是向网站发起洪水一样的请求（Traffic Floor），导致服务器超负荷并关闭.<br>处理方法常规是采用QoS（Quality of Service）的软硬件解决方案。</p>\n<h3 id=\"攻击层面\"><a href=\"#攻击层面\" class=\"headerlink\" title=\"攻击层面\"></a>攻击层面</h3><p>攻击层面指的是有恶意的人可能会从哪些地方来入手制造麻烦，常见的攻击层面有三种：<br>一. 传统WEB应用程序</p>\n<ol>\n<li>表单输入（甚至包括hidden控件的内容）；</li>\n<li>cookie（通过修改cookie内容也可以达到SQL注入攻击的目的）；</li>\n<li>报头（有时候为了方便统计来源数据，服务器会把客户端发来报头的Referer、User-Agent信息存到数据库中，那么通过修改报头信息也可以起到SQL注入工具目的）</li>\n<li>请求参数</li>\n<li>上传文件（在文件内携带恶意代码）</li>\n</ol>\n<p>二. Web服务</p>\n<ol>\n<li>上述“传统WEB服务”的全部方法；</li>\n<li>WSDL文档（暴露了服务端的每个方法及其使用方式）</li>\n</ol>\n<p>三. AJAX应用程序<br>即上述的“一”和“二”的合集</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>综上所述，我们可以这样审视我们的WEB站点：</p>\n<ol>\n<li>永远不要相信客户端传来的任何信息，对这些信息都应先进行编码或过滤处理；</li>\n<li>谨慎返回用户输入的信息；</li>\n<li>使用黑名单和白名单处理（即“不允许哪些敏感信息”或“只允许哪些信息”，白名单的效果更好但局限性高）；</li>\n<li>检查、验证请求来源，对每一个重要的操作都进行重新验证；</li>\n<li>使用SSL防止第三方监听通信（但无法阻止XSS、CSRF、SQL注入攻击）；</li>\n<li>不要将重要文件、备份文件存放在公众可访问到的地方；</li>\n<li>会话ID无序化；</li>\n<li>对用户上传的文件进行验证（不单单是格式验证，比方一张gif图片还应将其转为二进制并验证其每帧颜色值&lt;无符号8位&gt;和宽高值&lt;无符号16位&gt;）；</li>\n<li>WSDL文档应当要求用户注册后才能获取；</li>\n<li>在报头定义CSP（Content Security Policy）；</li>\n<li>。。。</li>\n</ol>\n<p>虽然我们有一些必要的手段来防止WEB攻击，但永远不会有一枚silver bullet来彻底解决问题，先不谈那些数不胜数的已知的、可被攻击的漏洞，对于谜一样的0-day漏洞，我们所能做的只是提前发现并及时修补它们。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"http://www.cnblogs.com/vajoy/p/4176908.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/vajoy/p/4176908.html</a><br><a href=\"http://imweb.io/topic/568958714c44bcc56092e409\" target=\"_blank\" rel=\"external\">http://imweb.io/topic/568958714c44bcc56092e409</a></p>\n","excerpt":"","more":"<p>Web安全是一个如何强调都不为过的事情，没有发生就什么事都没有，一旦发生了将可能导致不可估量的损失。<br>本人对web安全也了解不多，趁此摸鱼的时间，查一查相关资料，在此记录一下。</p>\n<h3 id=\"攻击方式\"><a href=\"#攻击方式\" class=\"headerlink\" title=\"攻击方式\"></a>攻击方式</h3><p>1.资源枚举<br>枚举url获取网站文件、枚举错误信息获取网站信息</p>\n<p>2.参数操纵<br>包括了SQL注入、XPath注入、cgi命令执行，还有XXS和会话劫持等，前三个的攻击主要是在服务端触发的，后二者的攻击则是侧重于客户端。</p>\n<p>3.会话劫持</p>\n<p>4.XSS 全称(Cross Site Scripting) 跨站脚本攻击， 是Web程序中最常见的漏洞<br>XSS指攻击者在网页中嵌入客户端脚本（js/css），<br>当用户浏览此网页时，脚本就会在用户客户端上执行，从而达到攻击目的，比如获取用户cookie,导航到恶意网站，携带木马等。<br>1)反射型XSS，又称非持久型XSS<br>    攻击者通过电子邮件等方式将包含注入脚本的恶意链接发送给受害者，当受害者点击该链接时，注 入脚本被传输到目标服务器上，然后服务器将注入脚本“反射”到受害者的浏览器上，从而在该浏览器上执行了这段脚本。<br>2)存储型XSS<br>3)DOM XSS<br>4)XSS payload</p>\n<p>5.CSRF（cross-site request forgery），翻译为跨站请求伪造<br>与XSS非常相似，但XSS是利用用户对当前网站的信任来发起攻击，而CSRF是利用网站对用户的信任来发起攻击。</p>\n<p>对于CSRF攻击，我们所能做的可以有：<br>1). 检查报头中的Referer参数确保请求发自正确的网站（但XHR请求可调用setRequestHeader方法来修改Referer报头）；<br>2). 对于任何重要的请求都需要重新验证用户的身份；<br>3). 创建一个唯一的令牌（Token），将其存在服务端的session中及客户端的cookie中，对任何请求，都检查二者是否一致。</p>\n<p>6.钓鱼攻击 指的是网站的伪造，比如ta0bao.com，然后在其中应用XSS等方式发起攻击。</p>\n<p>7.拒绝服务（DoS）指的是向网站发起洪水一样的请求（Traffic Floor），导致服务器超负荷并关闭.<br>处理方法常规是采用QoS（Quality of Service）的软硬件解决方案。</p>\n<h3 id=\"攻击层面\"><a href=\"#攻击层面\" class=\"headerlink\" title=\"攻击层面\"></a>攻击层面</h3><p>攻击层面指的是有恶意的人可能会从哪些地方来入手制造麻烦，常见的攻击层面有三种：<br>一. 传统WEB应用程序</p>\n<ol>\n<li>表单输入（甚至包括hidden控件的内容）；</li>\n<li>cookie（通过修改cookie内容也可以达到SQL注入攻击的目的）；</li>\n<li>报头（有时候为了方便统计来源数据，服务器会把客户端发来报头的Referer、User-Agent信息存到数据库中，那么通过修改报头信息也可以起到SQL注入工具目的）</li>\n<li>请求参数</li>\n<li>上传文件（在文件内携带恶意代码）</li>\n</ol>\n<p>二. Web服务</p>\n<ol>\n<li>上述“传统WEB服务”的全部方法；</li>\n<li>WSDL文档（暴露了服务端的每个方法及其使用方式）</li>\n</ol>\n<p>三. AJAX应用程序<br>即上述的“一”和“二”的合集</p>\n<h3 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h3><p>综上所述，我们可以这样审视我们的WEB站点：</p>\n<ol>\n<li>永远不要相信客户端传来的任何信息，对这些信息都应先进行编码或过滤处理；</li>\n<li>谨慎返回用户输入的信息；</li>\n<li>使用黑名单和白名单处理（即“不允许哪些敏感信息”或“只允许哪些信息”，白名单的效果更好但局限性高）；</li>\n<li>检查、验证请求来源，对每一个重要的操作都进行重新验证；</li>\n<li>使用SSL防止第三方监听通信（但无法阻止XSS、CSRF、SQL注入攻击）；</li>\n<li>不要将重要文件、备份文件存放在公众可访问到的地方；</li>\n<li>会话ID无序化；</li>\n<li>对用户上传的文件进行验证（不单单是格式验证，比方一张gif图片还应将其转为二进制并验证其每帧颜色值&lt;无符号8位&gt;和宽高值&lt;无符号16位&gt;）；</li>\n<li>WSDL文档应当要求用户注册后才能获取；</li>\n<li>在报头定义CSP（Content Security Policy）；</li>\n<li>。。。</li>\n</ol>\n<p>虽然我们有一些必要的手段来防止WEB攻击，但永远不会有一枚silver bullet来彻底解决问题，先不谈那些数不胜数的已知的、可被攻击的漏洞，对于谜一样的0-day漏洞，我们所能做的只是提前发现并及时修补它们。</p>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><p><a href=\"http://www.cnblogs.com/vajoy/p/4176908.html\">http://www.cnblogs.com/vajoy/p/4176908.html</a><br><a href=\"http://imweb.io/topic/568958714c44bcc56092e409\">http://imweb.io/topic/568958714c44bcc56092e409</a></p>\n"},{"layout":"default","title":"Ajax","_content":"\nAjax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。\nAJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n\n","source":"_posts/ajax.md","raw":"---\nlayout: default\ntitle: Ajax\ncategory: 前端\ntag: js ajax\n---\n\nAjax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。\nAJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。\n\n\n### Ajax的实现原理\n\n\n### jQuery中Ajax的实现原理\n\n\n### Ajax的跨域\n\n\n","slug":"ajax","published":1,"date":"2016-12-09T06:42:22.000Z","updated":"2016-12-09T06:56:53.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw2o000081qt27jiksx4","content":"<p>Ajax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。<br>AJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3>","excerpt":"","more":"<p>Ajax:Asynchronous Javascript And XML(异步JavaScript和XML),国内读作阿贾克斯。<br>AJAX 的核心是 JavaScript 对象 XMLHttpRequest，它是一种支持异步请求的技术。简而言之，XMLHttpRequest使您可以使用 JavaScript 向服务器提出请求并处理响应，而不阻塞用户。不用刷新页面。</p>\n<h3 id=\"Ajax的实现原理\"><a href=\"#Ajax的实现原理\" class=\"headerlink\" title=\"Ajax的实现原理\"></a>Ajax的实现原理</h3><h3 id=\"jQuery中Ajax的实现原理\"><a href=\"#jQuery中Ajax的实现原理\" class=\"headerlink\" title=\"jQuery中Ajax的实现原理\"></a>jQuery中Ajax的实现原理</h3><h3 id=\"Ajax的跨域\"><a href=\"#Ajax的跨域\" class=\"headerlink\" title=\"Ajax的跨域\"></a>Ajax的跨域</h3>"},{"layout":"default","title":"CreateJS学习","date":"2016-12-19T16:00:00.000Z","_content":"\n\n最近准备入手小游戏，队友们的技术栈用到了createjs，这里学习一下createjs。\nCreateJS是基于HTML5开发的一套模块化的库和工具。基于这些库，可以非常快捷地开发出基于HTML5的游戏、动画和交互应用。\n常用的类库包含下面几部分：\n\nEaselJS：提供了一套完整的，层次化的显示列表的互动方式 来更简单的处理HTML5画布。\n\nTweenJS：类库主要用来调整和动画HTML5和Javascript属性。提供了简单并且强大的tweening接口。\n\nSoundJS：提供了简单而强大的API来处理音频。通过插件来执行实际的音频实现，无需学习平台相关的知识，简单直接的处理声音。\n\nPreloadJS：是一个用来管理和协调相关资源加载的类库，它可以方便的帮助你预先加载相关资源，例如：图片、文件、音频、数据等等。\n\n\n\n``` html\n\n```\n\n\n\n\n#### 相关链接：\n\n中文网官网：\n\nhttp://createjs.cc/\n\n英文网\n\nhttp://createjs.com/\n\n\n\n\n","source":"_posts/createjs.md","raw":"---\nlayout: default\ntitle: CreateJS学习\ndate: 2016/12/20\ncategory: 前端\ntag: js\n---\n\n\n最近准备入手小游戏，队友们的技术栈用到了createjs，这里学习一下createjs。\nCreateJS是基于HTML5开发的一套模块化的库和工具。基于这些库，可以非常快捷地开发出基于HTML5的游戏、动画和交互应用。\n常用的类库包含下面几部分：\n\nEaselJS：提供了一套完整的，层次化的显示列表的互动方式 来更简单的处理HTML5画布。\n\nTweenJS：类库主要用来调整和动画HTML5和Javascript属性。提供了简单并且强大的tweening接口。\n\nSoundJS：提供了简单而强大的API来处理音频。通过插件来执行实际的音频实现，无需学习平台相关的知识，简单直接的处理声音。\n\nPreloadJS：是一个用来管理和协调相关资源加载的类库，它可以方便的帮助你预先加载相关资源，例如：图片、文件、音频、数据等等。\n\n\n\n``` html\n\n```\n\n\n\n\n#### 相关链接：\n\n中文网官网：\n\nhttp://createjs.cc/\n\n英文网\n\nhttp://createjs.com/\n\n\n\n\n","slug":"createjs","published":1,"updated":"2016-12-30T05:38:04.000Z","_id":"cixbbxw2y000281qt0g7tmpin","comments":1,"photos":[],"link":"","content":"<p>最近准备入手小游戏，队友们的技术栈用到了createjs，这里学习一下createjs。<br>CreateJS是基于HTML5开发的一套模块化的库和工具。基于这些库，可以非常快捷地开发出基于HTML5的游戏、动画和交互应用。<br>常用的类库包含下面几部分：</p>\n<p>EaselJS：提供了一套完整的，层次化的显示列表的互动方式 来更简单的处理HTML5画布。</p>\n<p>TweenJS：类库主要用来调整和动画HTML5和Javascript属性。提供了简单并且强大的tweening接口。</p>\n<p>SoundJS：提供了简单而强大的API来处理音频。通过插件来执行实际的音频实现，无需学习平台相关的知识，简单直接的处理声音。</p>\n<p>PreloadJS：是一个用来管理和协调相关资源加载的类库，它可以方便的帮助你预先加载相关资源，例如：图片、文件、音频、数据等等。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h4 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h4><p>中文网官网：</p>\n<p><a href=\"http://createjs.cc/\" target=\"_blank\" rel=\"external\">http://createjs.cc/</a></p>\n<p>英文网</p>\n<p><a href=\"http://createjs.com/\" target=\"_blank\" rel=\"external\">http://createjs.com/</a></p>\n","excerpt":"","more":"<p>最近准备入手小游戏，队友们的技术栈用到了createjs，这里学习一下createjs。<br>CreateJS是基于HTML5开发的一套模块化的库和工具。基于这些库，可以非常快捷地开发出基于HTML5的游戏、动画和交互应用。<br>常用的类库包含下面几部分：</p>\n<p>EaselJS：提供了一套完整的，层次化的显示列表的互动方式 来更简单的处理HTML5画布。</p>\n<p>TweenJS：类库主要用来调整和动画HTML5和Javascript属性。提供了简单并且强大的tweening接口。</p>\n<p>SoundJS：提供了简单而强大的API来处理音频。通过插件来执行实际的音频实现，无需学习平台相关的知识，简单直接的处理声音。</p>\n<p>PreloadJS：是一个用来管理和协调相关资源加载的类库，它可以方便的帮助你预先加载相关资源，例如：图片、文件、音频、数据等等。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n<h4 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h4><p>中文网官网：</p>\n<p><a href=\"http://createjs.cc/\">http://createjs.cc/</a></p>\n<p>英文网</p>\n<p><a href=\"http://createjs.com/\">http://createjs.com/</a></p>\n"},{"layout":"default","title":"cssDisplay","date":"2016-04-06T16:00:00.000Z","_content":"\n## {{page.title}}\n\n### display:inline-block\n\nie6，7对于display:inline-block的兼容性\n\n兼容写法：\n\n```css\n.elms {\n    display: inline-block; /*现代浏览器+ie6，7inline元素*/\n    *display: display:inline; /*ie6,7 block元素*/\n    *zoom: 1;\n}\n```\n\n### 解释\n\n在ie6，7中，display:inline-block是可以出发hasLayout的，触发了hasLayout的元素的表现出来的特征就是一个独立的矩形容器\n\n#### 对于inline元素：\n\n比如：对于a标签、span标签等直接display:inline-block就可以了\n\n#### 对于block元素：\n\n在ie6，7中block元素即使触发了hasLayout也不能具有inline-block元素不换行的特性。想要block元素支持inline-block元素的特性，我们可以这样做：\n\n```css\n.elms {\n    display:inine;\n    zoom:1;\n}\n```\n\n首先让block元素转化为inline元素，强制其不换行；然后通过zoom:1触发hasLayout，使其可以设置宽高。\n\n### 什么是inline-block元素\n\ninline-block后的元素就是一个格式化为行内元素的块容器\n\n\n### inline-block元素空隙去除\n\n```css\n.dib-wrap {\n    font-size:0;/* 所有浏览器 */\n    *word-spacing:-1px;/* IE6、7 */\n}\n.dib-wrap .dib{\n    font-size: 12px;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align:top;\n}\n@media screen and (-webkit-min-device-pixel-ratio:0){\n    /* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */\n    .dib-wrap{\n        letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/\n    }\n}\n.dib {\n    display: inline-block;\n    *display:inline;\n    *zoom:1;\n}\n```\n\n\n参考原文：\n\n[http://ued.taobao.org/blog/2012/08/inline-block//](http://ued.taobao.org/blog/2012/08/inline-block//){:target=\"_blank\"}  \n\n\n\n\n\n\n\n\n\n\n","source":"_posts/css-display.md","raw":"---\nlayout: default\ntitle: cssDisplay\ndate: 2016-04-07\n---\n\n## {{page.title}}\n\n### display:inline-block\n\nie6，7对于display:inline-block的兼容性\n\n兼容写法：\n\n```css\n.elms {\n    display: inline-block; /*现代浏览器+ie6，7inline元素*/\n    *display: display:inline; /*ie6,7 block元素*/\n    *zoom: 1;\n}\n```\n\n### 解释\n\n在ie6，7中，display:inline-block是可以出发hasLayout的，触发了hasLayout的元素的表现出来的特征就是一个独立的矩形容器\n\n#### 对于inline元素：\n\n比如：对于a标签、span标签等直接display:inline-block就可以了\n\n#### 对于block元素：\n\n在ie6，7中block元素即使触发了hasLayout也不能具有inline-block元素不换行的特性。想要block元素支持inline-block元素的特性，我们可以这样做：\n\n```css\n.elms {\n    display:inine;\n    zoom:1;\n}\n```\n\n首先让block元素转化为inline元素，强制其不换行；然后通过zoom:1触发hasLayout，使其可以设置宽高。\n\n### 什么是inline-block元素\n\ninline-block后的元素就是一个格式化为行内元素的块容器\n\n\n### inline-block元素空隙去除\n\n```css\n.dib-wrap {\n    font-size:0;/* 所有浏览器 */\n    *word-spacing:-1px;/* IE6、7 */\n}\n.dib-wrap .dib{\n    font-size: 12px;\n    letter-spacing: normal;\n    word-spacing: normal;\n    vertical-align:top;\n}\n@media screen and (-webkit-min-device-pixel-ratio:0){\n    /* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */\n    .dib-wrap{\n        letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/\n    }\n}\n.dib {\n    display: inline-block;\n    *display:inline;\n    *zoom:1;\n}\n```\n\n\n参考原文：\n\n[http://ued.taobao.org/blog/2012/08/inline-block//](http://ued.taobao.org/blog/2012/08/inline-block//){:target=\"_blank\"}  \n\n\n\n\n\n\n\n\n\n\n","slug":"css-display","published":1,"updated":"2016-12-21T01:55:21.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw31000481qt9l9to4ei","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"display-inline-block\"><a href=\"#display-inline-block\" class=\"headerlink\" title=\"display:inline-block\"></a>display:inline-block</h3><p>ie6，7对于display:inline-block的兼容性</p>\n<p>兼容写法：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.elms &#123;</div><div class=\"line\">    display: inline-block; /*现代浏览器+ie6，7inline元素*/</div><div class=\"line\">    *display: display:inline; /*ie6,7 block元素*/</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>在ie6，7中，display:inline-block是可以出发hasLayout的，触发了hasLayout的元素的表现出来的特征就是一个独立的矩形容器</p>\n<h4 id=\"对于inline元素：\"><a href=\"#对于inline元素：\" class=\"headerlink\" title=\"对于inline元素：\"></a>对于inline元素：</h4><p>比如：对于a标签、span标签等直接display:inline-block就可以了</p>\n<h4 id=\"对于block元素：\"><a href=\"#对于block元素：\" class=\"headerlink\" title=\"对于block元素：\"></a>对于block元素：</h4><p>在ie6，7中block元素即使触发了hasLayout也不能具有inline-block元素不换行的特性。想要block元素支持inline-block元素的特性，我们可以这样做：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.elms</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>:inine;</div><div class=\"line\">    <span class=\"attribute\">zoom</span>:<span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>首先让block元素转化为inline元素，强制其不换行；然后通过zoom:1触发hasLayout，使其可以设置宽高。</p>\n<h3 id=\"什么是inline-block元素\"><a href=\"#什么是inline-block元素\" class=\"headerlink\" title=\"什么是inline-block元素\"></a>什么是inline-block元素</h3><p>inline-block后的元素就是一个格式化为行内元素的块容器</p>\n<h3 id=\"inline-block元素空隙去除\"><a href=\"#inline-block元素空隙去除\" class=\"headerlink\" title=\"inline-block元素空隙去除\"></a>inline-block元素空隙去除</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">.dib-wrap &#123;</div><div class=\"line\">    font-size:0;/* 所有浏览器 */</div><div class=\"line\">    *word-spacing:-1px;/* IE6、7 */</div><div class=\"line\">&#125;</div><div class=\"line\">.dib-wrap .dib&#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">    letter-spacing: normal;</div><div class=\"line\">    word-spacing: normal;</div><div class=\"line\">    vertical-align:top;</div><div class=\"line\">&#125;</div><div class=\"line\">@media screen and (-webkit-min-device-pixel-ratio:0)&#123;</div><div class=\"line\">    /* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */</div><div class=\"line\">    .dib-wrap&#123;</div><div class=\"line\">        letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.dib &#123;</div><div class=\"line\">    display: inline-block;</div><div class=\"line\">    *display:inline;</div><div class=\"line\">    *zoom:1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>参考原文：</p>\n<p><a href=\"http://ued.taobao.org/blog/2012/08/inline-block//\" target=\"_blank\" rel=\"external\">http://ued.taobao.org/blog/2012/08/inline-block//</a>{:target=”_blank”}  </p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"display-inline-block\"><a href=\"#display-inline-block\" class=\"headerlink\" title=\"display:inline-block\"></a>display:inline-block</h3><p>ie6，7对于display:inline-block的兼容性</p>\n<p>兼容写法：</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.elms &#123;</div><div class=\"line\">    display: inline-block; /*现代浏览器+ie6，7inline元素*/</div><div class=\"line\">    *display: display:inline; /*ie6,7 block元素*/</div><div class=\"line\">    *zoom: 1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h3 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h3><p>在ie6，7中，display:inline-block是可以出发hasLayout的，触发了hasLayout的元素的表现出来的特征就是一个独立的矩形容器</p>\n<h4 id=\"对于inline元素：\"><a href=\"#对于inline元素：\" class=\"headerlink\" title=\"对于inline元素：\"></a>对于inline元素：</h4><p>比如：对于a标签、span标签等直接display:inline-block就可以了</p>\n<h4 id=\"对于block元素：\"><a href=\"#对于block元素：\" class=\"headerlink\" title=\"对于block元素：\"></a>对于block元素：</h4><p>在ie6，7中block元素即使触发了hasLayout也不能具有inline-block元素不换行的特性。想要block元素支持inline-block元素的特性，我们可以这样做：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.elms</span> &#123;</div><div class=\"line\">    <span class=\"attribute\">display</span>:inine;</div><div class=\"line\">    <span class=\"attribute\">zoom</span>:<span class=\"number\">1</span>;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>首先让block元素转化为inline元素，强制其不换行；然后通过zoom:1触发hasLayout，使其可以设置宽高。</p>\n<h3 id=\"什么是inline-block元素\"><a href=\"#什么是inline-block元素\" class=\"headerlink\" title=\"什么是inline-block元素\"></a>什么是inline-block元素</h3><p>inline-block后的元素就是一个格式化为行内元素的块容器</p>\n<h3 id=\"inline-block元素空隙去除\"><a href=\"#inline-block元素空隙去除\" class=\"headerlink\" title=\"inline-block元素空隙去除\"></a>inline-block元素空隙去除</h3><figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">.dib-wrap &#123;</div><div class=\"line\">    font-size:0;/* 所有浏览器 */</div><div class=\"line\">    *word-spacing:-1px;/* IE6、7 */</div><div class=\"line\">&#125;</div><div class=\"line\">.dib-wrap .dib&#123;</div><div class=\"line\">    font-size: 12px;</div><div class=\"line\">    letter-spacing: normal;</div><div class=\"line\">    word-spacing: normal;</div><div class=\"line\">    vertical-align:top;</div><div class=\"line\">&#125;</div><div class=\"line\">@media screen and (-webkit-min-device-pixel-ratio:0)&#123;</div><div class=\"line\">    /* firefox 中 letter-spacing 会导致脱离普通流的元素水平位移 */</div><div class=\"line\">    .dib-wrap&#123;</div><div class=\"line\">        letter-spacing:-5px;/* Safari 等不支持字体大小为 0 的浏览器, N 根据父级字体调节*/</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\">.dib &#123;</div><div class=\"line\">    display: inline-block;</div><div class=\"line\">    *display:inline;</div><div class=\"line\">    *zoom:1;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>参考原文：</p>\n<p><a href=\"http://ued.taobao.org/blog/2012/08/inline-block//\">http://ued.taobao.org/blog/2012/08/inline-block//</a>{:target=”_blank”}  </p>\n"},{"layout":"default","title":"css3Transition","date":"2016-04-06T16:00:00.000Z","_content":"\n## {{page.title}}\n\n\n### 一、Chrome渲染Transition时页面闪动Bug\n\n#### 对于chrome执行动画的时候回出现闪动，重现代码如下：\n\n```css\n.className{\n    -webkit-transition: -webkit-transform .2s ease-in;\n}\n \n or \n\n.className{\n   -webkit-transition: all .2s ease-in-out;\t\n}\n```\n\n\n#### 解决办法：\n\n```css\n.className{\n    -webkit-backface-visibility: hidden; /* （设置进行转换的元素的背面在面对用户时是否可见：隐藏） */\n    -webkit-transform-style: preserve-3d; /*（设置内嵌的元素在 3D 空间如何呈现：保留 3D ）*/\n}\n```\n\n\n参考原文：\n\n[http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/](http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/){:target=\"_blank\"}  \n\n\n\n\n\n\n\n\n\n\n","source":"_posts/css3-transition.md","raw":"---\nlayout: default\ntitle: css3Transition\ndate: 2016-04-07\n---\n\n## {{page.title}}\n\n\n### 一、Chrome渲染Transition时页面闪动Bug\n\n#### 对于chrome执行动画的时候回出现闪动，重现代码如下：\n\n```css\n.className{\n    -webkit-transition: -webkit-transform .2s ease-in;\n}\n \n or \n\n.className{\n   -webkit-transition: all .2s ease-in-out;\t\n}\n```\n\n\n#### 解决办法：\n\n```css\n.className{\n    -webkit-backface-visibility: hidden; /* （设置进行转换的元素的背面在面对用户时是否可见：隐藏） */\n    -webkit-transform-style: preserve-3d; /*（设置内嵌的元素在 3D 空间如何呈现：保留 3D ）*/\n}\n```\n\n\n参考原文：\n\n[http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/](http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/){:target=\"_blank\"}  \n\n\n\n\n\n\n\n\n\n\n","slug":"css3-transition","published":1,"updated":"2016-12-21T01:55:24.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw34000581qtpk5xnfxp","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"一、Chrome渲染Transition时页面闪动Bug\"><a href=\"#一、Chrome渲染Transition时页面闪动Bug\" class=\"headerlink\" title=\"一、Chrome渲染Transition时页面闪动Bug\"></a>一、Chrome渲染Transition时页面闪动Bug</h3><h4 id=\"对于chrome执行动画的时候回出现闪动，重现代码如下：\"><a href=\"#对于chrome执行动画的时候回出现闪动，重现代码如下：\" class=\"headerlink\" title=\"对于chrome执行动画的时候回出现闪动，重现代码如下：\"></a>对于chrome执行动画的时候回出现闪动，重现代码如下：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-transition</span>: -webkit-transform .<span class=\"number\">2s</span> ease-in;</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"selector-tag\">or</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">   <span class=\"attribute\">-webkit-transition</span>: all .<span class=\"number\">2s</span> ease-in-out;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-backface-visibility</span>: hidden; <span class=\"comment\">/* （设置进行转换的元素的背面在面对用户时是否可见：隐藏） */</span></div><div class=\"line\">    <span class=\"attribute\">-webkit-transform-style</span>: preserve-<span class=\"number\">3</span>d; <span class=\"comment\">/*（设置内嵌的元素在 3D 空间如何呈现：保留 3D ）*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>参考原文：</p>\n<p><a href=\"http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/\" target=\"_blank\" rel=\"external\">http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/</a>{:target=”_blank”}  </p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"一、Chrome渲染Transition时页面闪动Bug\"><a href=\"#一、Chrome渲染Transition时页面闪动Bug\" class=\"headerlink\" title=\"一、Chrome渲染Transition时页面闪动Bug\"></a>一、Chrome渲染Transition时页面闪动Bug</h3><h4 id=\"对于chrome执行动画的时候回出现闪动，重现代码如下：\"><a href=\"#对于chrome执行动画的时候回出现闪动，重现代码如下：\" class=\"headerlink\" title=\"对于chrome执行动画的时候回出现闪动，重现代码如下：\"></a>对于chrome执行动画的时候回出现闪动，重现代码如下：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-transition</span>: -webkit-transform .<span class=\"number\">2s</span> ease-in;</div><div class=\"line\">&#125;</div><div class=\"line\"> </div><div class=\"line\"> <span class=\"selector-tag\">or</span> </div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">   <span class=\"attribute\">-webkit-transition</span>: all .<span class=\"number\">2s</span> ease-in-out;\t</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"解决办法：\"><a href=\"#解决办法：\" class=\"headerlink\" title=\"解决办法：\"></a>解决办法：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-class\">.className</span>&#123;</div><div class=\"line\">    <span class=\"attribute\">-webkit-backface-visibility</span>: hidden; <span class=\"comment\">/* （设置进行转换的元素的背面在面对用户时是否可见：隐藏） */</span></div><div class=\"line\">    <span class=\"attribute\">-webkit-transform-style</span>: preserve-<span class=\"number\">3</span>d; <span class=\"comment\">/*（设置内嵌的元素在 3D 空间如何呈现：保留 3D ）*/</span></div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>参考原文：</p>\n<p><a href=\"http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/\">http://ued.taobao.org/blog/2012/01/chrome渲染transition时页面闪动bug/</a>{:target=”_blank”}  </p>\n"},{"layout":"default","title":"css3Transition","date":"2016-11-16T16:00:00.000Z","_content":"\n## {{page.title}}\n\n边框\n\nborder-radius\n\nbox-shadow 阴影\n\n\nborder-image:\nborder-image-source\nborder-image-slice\nborder-image-width\nborder-image-outset\nborder-image-repeat\n\n\n栅格：\n\ncolumn-count\t规定元素应该被分隔的列数。\t3\ncolumn-fill\t规定如何填充列。\t3\ncolumn-gap\t规定列之间的间隔。\t3\ncolumn-rule\t设置所有 column-rule-* 属性的简写属性。\t3\ncolumn-rule-color\t规定列之间规则的颜色。\t3\ncolumn-rule-style\t规定列之间规则的样式。\t3\ncolumn-rule-width\t规定列之间规则的宽度。\t3\ncolumn-span\t规定元素应该横跨的列数。\t3\ncolumn-width\t规定列的宽度。\t3\ncolumns\t规定设置 column-width 和 column-count 的简写属性。\n\n\n\n背景 background\n\n规定背景的绘制区域。\nbackground-clip:\n    border-box\t背景被裁剪到边框盒。\n    padding-box\t背景被裁剪到内边距框。\n    content-box\t背景被裁剪到内容框\n\nbackground-origin\t规定背景图片的定位区域。\nbackground-size\t规定背景图片的尺寸。\n\n\n渐变\n\nlinear-gradient\neg：\nbackground: linear-gradient(70deg, black, white);\n\n\n2d && 3d转换\n\ntranslate()\nrotate()\nscale()\nskew()\nmatrix()\n\n\ntransform方法：\n\n描述\nmatrix(n,n,n,n,n,n)\t定义 2D 转换，使用六个值的矩阵。\ntranslate(x,y)\t定义 2D 转换，沿着 X 和 Y 轴移动元素。\ntranslateX(n)\t定义 2D 转换，沿着 X 轴移动元素。\ntranslateY(n)\t定义 2D 转换，沿着 Y 轴移动元素。\nscale(x,y)\t定义 2D 缩放转换，改变元素的宽度和高度。\nscaleX(n)\t定义 2D 缩放转换，改变元素的宽度。\nscaleY(n)\t定义 2D 缩放转换，改变元素的高度。\nrotate(angle)\t定义 2D 旋转，在参数中规定角度。\nskew(x-angle,y-angle)\t定义 2D 倾斜转换，沿着 X 和 Y 轴。\nskewX(angle)\t定义 2D 倾斜转换，沿着 X 轴。\nskewY(angle)\t定义 2D 倾斜转换，沿着 Y 轴。\n\n\n\nmatrix3d(n,n,n,n,n,n,\nn,n,n,n,n,n,n,n,n,n)\t定义 3D 转换，使用 16 个值的 4x4 矩阵。\ntranslate3d(x,y,z)\t定义 3D 转化。\ntranslateX(x)\t定义 3D 转化，仅使用用于 X 轴的值。\ntranslateY(y)\t定义 3D 转化，仅使用用于 Y 轴的值。\ntranslateZ(z)\t定义 3D 转化，仅使用用于 Z 轴的值。\nscale3d(x,y,z)\t定义 3D 缩放转换。\nscaleX(x)\t定义 3D 缩放转换，通过给定一个 X 轴的值。\nscaleY(y)\t定义 3D 缩放转换，通过给定一个 Y 轴的值。\nscaleZ(z)\t定义 3D 缩放转换，通过给定一个 Z 轴的值。\nrotate3d(x,y,z,angle)\t定义 3D 旋转。\nrotateX(angle)\t定义沿 X 轴的 3D 旋转。\nrotateY(angle)\t定义沿 Y 轴的 3D 旋转。\nrotateZ(angle)\t定义沿 Z 轴的 3D 旋转。\nperspective(n)\t定义 3D 转换元素的透视视图。\n\n\n动画\n\ntransition 过渡\n\n属性\t描述\tCSS\ntransition\t简写属性，用于在一个属性中设置四个过渡属性。\t3\ntransition-property\t规定应用过渡的 CSS 属性的名称。\t3\ntransition-duration\t定义过渡效果花费的时间。默认是 0。\t3\ntransition-timing-function\t规定过渡效果的时间曲线。默认是 \"ease\"。\t3\ntransition-delay\t规定过渡效果何时开始。默认是 0。\n\n\n@keyframes\t规定动画。\t3\nanimation\t所有动画属性的简写属性，除了 animation-play-state 属性。\t3\nanimation-name\t规定 @keyframes 动画的名称。\t3\nanimation-duration\t规定动画完成一个周期所花费的秒或毫秒。默认是 0。\t3\nanimation-timing-function\t规定动画的速度曲线。默认是 \"ease\"。\t3\nanimation-delay\t规定动画何时开始。默认是 0。\t3\nanimation-iteration-count\t规定动画被播放的次数。默认是 1。\t3\nanimation-direction\t规定动画是否在下一周期逆向地播放。默认是 \"normal\"。\t3\nanimation-play-state\t规定动画是否正在运行或暂停。默认是 \"running\"。\t3\nanimation-fill-mode\t规定对象动画时间之外的状态。\t3\n\n用户界面：\n\n属性\t描述\tCSS\nappearance\t允许您将元素设置为标准用户界面元素的外观\t3\nbox-sizing\t允许您以确切的方式定义适应某个区域的具体内容。\t3\nicon\t为创作者提供使用图标化等价物来设置元素样式的能力。\t3\nnav-down\t规定在使用 arrow-down 导航键时向何处导航。\t3\nnav-index\t设置元素的 tab 键控制次序。\t3\nnav-left\t规定在使用 arrow-left 导航键时向何处导航。\t3\nnav-right\t规定在使用 arrow-right 导航键时向何处导航。\t3\nnav-up\t规定在使用 arrow-up 导航键时向何处导航。\t3\noutline-offset\t对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。\t3\nresize\t规定是否可由用户对元素的尺寸进行调整。\n","source":"_posts/css3.md","raw":"---\nlayout: default\ntitle: css3Transition\ndate: 2016-11-17\n---\n\n## {{page.title}}\n\n边框\n\nborder-radius\n\nbox-shadow 阴影\n\n\nborder-image:\nborder-image-source\nborder-image-slice\nborder-image-width\nborder-image-outset\nborder-image-repeat\n\n\n栅格：\n\ncolumn-count\t规定元素应该被分隔的列数。\t3\ncolumn-fill\t规定如何填充列。\t3\ncolumn-gap\t规定列之间的间隔。\t3\ncolumn-rule\t设置所有 column-rule-* 属性的简写属性。\t3\ncolumn-rule-color\t规定列之间规则的颜色。\t3\ncolumn-rule-style\t规定列之间规则的样式。\t3\ncolumn-rule-width\t规定列之间规则的宽度。\t3\ncolumn-span\t规定元素应该横跨的列数。\t3\ncolumn-width\t规定列的宽度。\t3\ncolumns\t规定设置 column-width 和 column-count 的简写属性。\n\n\n\n背景 background\n\n规定背景的绘制区域。\nbackground-clip:\n    border-box\t背景被裁剪到边框盒。\n    padding-box\t背景被裁剪到内边距框。\n    content-box\t背景被裁剪到内容框\n\nbackground-origin\t规定背景图片的定位区域。\nbackground-size\t规定背景图片的尺寸。\n\n\n渐变\n\nlinear-gradient\neg：\nbackground: linear-gradient(70deg, black, white);\n\n\n2d && 3d转换\n\ntranslate()\nrotate()\nscale()\nskew()\nmatrix()\n\n\ntransform方法：\n\n描述\nmatrix(n,n,n,n,n,n)\t定义 2D 转换，使用六个值的矩阵。\ntranslate(x,y)\t定义 2D 转换，沿着 X 和 Y 轴移动元素。\ntranslateX(n)\t定义 2D 转换，沿着 X 轴移动元素。\ntranslateY(n)\t定义 2D 转换，沿着 Y 轴移动元素。\nscale(x,y)\t定义 2D 缩放转换，改变元素的宽度和高度。\nscaleX(n)\t定义 2D 缩放转换，改变元素的宽度。\nscaleY(n)\t定义 2D 缩放转换，改变元素的高度。\nrotate(angle)\t定义 2D 旋转，在参数中规定角度。\nskew(x-angle,y-angle)\t定义 2D 倾斜转换，沿着 X 和 Y 轴。\nskewX(angle)\t定义 2D 倾斜转换，沿着 X 轴。\nskewY(angle)\t定义 2D 倾斜转换，沿着 Y 轴。\n\n\n\nmatrix3d(n,n,n,n,n,n,\nn,n,n,n,n,n,n,n,n,n)\t定义 3D 转换，使用 16 个值的 4x4 矩阵。\ntranslate3d(x,y,z)\t定义 3D 转化。\ntranslateX(x)\t定义 3D 转化，仅使用用于 X 轴的值。\ntranslateY(y)\t定义 3D 转化，仅使用用于 Y 轴的值。\ntranslateZ(z)\t定义 3D 转化，仅使用用于 Z 轴的值。\nscale3d(x,y,z)\t定义 3D 缩放转换。\nscaleX(x)\t定义 3D 缩放转换，通过给定一个 X 轴的值。\nscaleY(y)\t定义 3D 缩放转换，通过给定一个 Y 轴的值。\nscaleZ(z)\t定义 3D 缩放转换，通过给定一个 Z 轴的值。\nrotate3d(x,y,z,angle)\t定义 3D 旋转。\nrotateX(angle)\t定义沿 X 轴的 3D 旋转。\nrotateY(angle)\t定义沿 Y 轴的 3D 旋转。\nrotateZ(angle)\t定义沿 Z 轴的 3D 旋转。\nperspective(n)\t定义 3D 转换元素的透视视图。\n\n\n动画\n\ntransition 过渡\n\n属性\t描述\tCSS\ntransition\t简写属性，用于在一个属性中设置四个过渡属性。\t3\ntransition-property\t规定应用过渡的 CSS 属性的名称。\t3\ntransition-duration\t定义过渡效果花费的时间。默认是 0。\t3\ntransition-timing-function\t规定过渡效果的时间曲线。默认是 \"ease\"。\t3\ntransition-delay\t规定过渡效果何时开始。默认是 0。\n\n\n@keyframes\t规定动画。\t3\nanimation\t所有动画属性的简写属性，除了 animation-play-state 属性。\t3\nanimation-name\t规定 @keyframes 动画的名称。\t3\nanimation-duration\t规定动画完成一个周期所花费的秒或毫秒。默认是 0。\t3\nanimation-timing-function\t规定动画的速度曲线。默认是 \"ease\"。\t3\nanimation-delay\t规定动画何时开始。默认是 0。\t3\nanimation-iteration-count\t规定动画被播放的次数。默认是 1。\t3\nanimation-direction\t规定动画是否在下一周期逆向地播放。默认是 \"normal\"。\t3\nanimation-play-state\t规定动画是否正在运行或暂停。默认是 \"running\"。\t3\nanimation-fill-mode\t规定对象动画时间之外的状态。\t3\n\n用户界面：\n\n属性\t描述\tCSS\nappearance\t允许您将元素设置为标准用户界面元素的外观\t3\nbox-sizing\t允许您以确切的方式定义适应某个区域的具体内容。\t3\nicon\t为创作者提供使用图标化等价物来设置元素样式的能力。\t3\nnav-down\t规定在使用 arrow-down 导航键时向何处导航。\t3\nnav-index\t设置元素的 tab 键控制次序。\t3\nnav-left\t规定在使用 arrow-left 导航键时向何处导航。\t3\nnav-right\t规定在使用 arrow-right 导航键时向何处导航。\t3\nnav-up\t规定在使用 arrow-up 导航键时向何处导航。\t3\noutline-offset\t对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。\t3\nresize\t规定是否可由用户对元素的尺寸进行调整。\n","slug":"css3","published":1,"updated":"2016-12-21T01:58:01.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw35000681qte647prff","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>边框</p>\n<p>border-radius</p>\n<p>box-shadow 阴影</p>\n<p>border-image:<br>border-image-source<br>border-image-slice<br>border-image-width<br>border-image-outset<br>border-image-repeat</p>\n<p>栅格：</p>\n<p>column-count    规定元素应该被分隔的列数。    3<br>column-fill    规定如何填充列。    3<br>column-gap    规定列之间的间隔。    3<br>column-rule    设置所有 column-rule-* 属性的简写属性。    3<br>column-rule-color    规定列之间规则的颜色。    3<br>column-rule-style    规定列之间规则的样式。    3<br>column-rule-width    规定列之间规则的宽度。    3<br>column-span    规定元素应该横跨的列数。    3<br>column-width    规定列的宽度。    3<br>columns    规定设置 column-width 和 column-count 的简写属性。</p>\n<p>背景 background</p>\n<p>规定背景的绘制区域。<br>background-clip:<br>    border-box    背景被裁剪到边框盒。<br>    padding-box    背景被裁剪到内边距框。<br>    content-box    背景被裁剪到内容框</p>\n<p>background-origin    规定背景图片的定位区域。<br>background-size    规定背景图片的尺寸。</p>\n<p>渐变</p>\n<p>linear-gradient<br>eg：<br>background: linear-gradient(70deg, black, white);</p>\n<p>2d &amp;&amp; 3d转换</p>\n<p>translate()<br>rotate()<br>scale()<br>skew()<br>matrix()</p>\n<p>transform方法：</p>\n<p>描述<br>matrix(n,n,n,n,n,n)    定义 2D 转换，使用六个值的矩阵。<br>translate(x,y)    定义 2D 转换，沿着 X 和 Y 轴移动元素。<br>translateX(n)    定义 2D 转换，沿着 X 轴移动元素。<br>translateY(n)    定义 2D 转换，沿着 Y 轴移动元素。<br>scale(x,y)    定义 2D 缩放转换，改变元素的宽度和高度。<br>scaleX(n)    定义 2D 缩放转换，改变元素的宽度。<br>scaleY(n)    定义 2D 缩放转换，改变元素的高度。<br>rotate(angle)    定义 2D 旋转，在参数中规定角度。<br>skew(x-angle,y-angle)    定义 2D 倾斜转换，沿着 X 和 Y 轴。<br>skewX(angle)    定义 2D 倾斜转换，沿着 X 轴。<br>skewY(angle)    定义 2D 倾斜转换，沿着 Y 轴。</p>\n<p>matrix3d(n,n,n,n,n,n,<br>n,n,n,n,n,n,n,n,n,n)    定义 3D 转换，使用 16 个值的 4x4 矩阵。<br>translate3d(x,y,z)    定义 3D 转化。<br>translateX(x)    定义 3D 转化，仅使用用于 X 轴的值。<br>translateY(y)    定义 3D 转化，仅使用用于 Y 轴的值。<br>translateZ(z)    定义 3D 转化，仅使用用于 Z 轴的值。<br>scale3d(x,y,z)    定义 3D 缩放转换。<br>scaleX(x)    定义 3D 缩放转换，通过给定一个 X 轴的值。<br>scaleY(y)    定义 3D 缩放转换，通过给定一个 Y 轴的值。<br>scaleZ(z)    定义 3D 缩放转换，通过给定一个 Z 轴的值。<br>rotate3d(x,y,z,angle)    定义 3D 旋转。<br>rotateX(angle)    定义沿 X 轴的 3D 旋转。<br>rotateY(angle)    定义沿 Y 轴的 3D 旋转。<br>rotateZ(angle)    定义沿 Z 轴的 3D 旋转。<br>perspective(n)    定义 3D 转换元素的透视视图。</p>\n<p>动画</p>\n<p>transition 过渡</p>\n<p>属性    描述    CSS<br>transition    简写属性，用于在一个属性中设置四个过渡属性。    3<br>transition-property    规定应用过渡的 CSS 属性的名称。    3<br>transition-duration    定义过渡效果花费的时间。默认是 0。    3<br>transition-timing-function    规定过渡效果的时间曲线。默认是 “ease”。    3<br>transition-delay    规定过渡效果何时开始。默认是 0。</p>\n<p>@keyframes    规定动画。    3<br>animation    所有动画属性的简写属性，除了 animation-play-state 属性。    3<br>animation-name    规定 @keyframes 动画的名称。    3<br>animation-duration    规定动画完成一个周期所花费的秒或毫秒。默认是 0。    3<br>animation-timing-function    规定动画的速度曲线。默认是 “ease”。    3<br>animation-delay    规定动画何时开始。默认是 0。    3<br>animation-iteration-count    规定动画被播放的次数。默认是 1。    3<br>animation-direction    规定动画是否在下一周期逆向地播放。默认是 “normal”。    3<br>animation-play-state    规定动画是否正在运行或暂停。默认是 “running”。    3<br>animation-fill-mode    规定对象动画时间之外的状态。    3</p>\n<p>用户界面：</p>\n<p>属性    描述    CSS<br>appearance    允许您将元素设置为标准用户界面元素的外观    3<br>box-sizing    允许您以确切的方式定义适应某个区域的具体内容。    3<br>icon    为创作者提供使用图标化等价物来设置元素样式的能力。    3<br>nav-down    规定在使用 arrow-down 导航键时向何处导航。    3<br>nav-index    设置元素的 tab 键控制次序。    3<br>nav-left    规定在使用 arrow-left 导航键时向何处导航。    3<br>nav-right    规定在使用 arrow-right 导航键时向何处导航。    3<br>nav-up    规定在使用 arrow-up 导航键时向何处导航。    3<br>outline-offset    对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。    3<br>resize    规定是否可由用户对元素的尺寸进行调整。</p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>边框</p>\n<p>border-radius</p>\n<p>box-shadow 阴影</p>\n<p>border-image:<br>border-image-source<br>border-image-slice<br>border-image-width<br>border-image-outset<br>border-image-repeat</p>\n<p>栅格：</p>\n<p>column-count    规定元素应该被分隔的列数。    3<br>column-fill    规定如何填充列。    3<br>column-gap    规定列之间的间隔。    3<br>column-rule    设置所有 column-rule-* 属性的简写属性。    3<br>column-rule-color    规定列之间规则的颜色。    3<br>column-rule-style    规定列之间规则的样式。    3<br>column-rule-width    规定列之间规则的宽度。    3<br>column-span    规定元素应该横跨的列数。    3<br>column-width    规定列的宽度。    3<br>columns    规定设置 column-width 和 column-count 的简写属性。</p>\n<p>背景 background</p>\n<p>规定背景的绘制区域。<br>background-clip:<br>    border-box    背景被裁剪到边框盒。<br>    padding-box    背景被裁剪到内边距框。<br>    content-box    背景被裁剪到内容框</p>\n<p>background-origin    规定背景图片的定位区域。<br>background-size    规定背景图片的尺寸。</p>\n<p>渐变</p>\n<p>linear-gradient<br>eg：<br>background: linear-gradient(70deg, black, white);</p>\n<p>2d &amp;&amp; 3d转换</p>\n<p>translate()<br>rotate()<br>scale()<br>skew()<br>matrix()</p>\n<p>transform方法：</p>\n<p>描述<br>matrix(n,n,n,n,n,n)    定义 2D 转换，使用六个值的矩阵。<br>translate(x,y)    定义 2D 转换，沿着 X 和 Y 轴移动元素。<br>translateX(n)    定义 2D 转换，沿着 X 轴移动元素。<br>translateY(n)    定义 2D 转换，沿着 Y 轴移动元素。<br>scale(x,y)    定义 2D 缩放转换，改变元素的宽度和高度。<br>scaleX(n)    定义 2D 缩放转换，改变元素的宽度。<br>scaleY(n)    定义 2D 缩放转换，改变元素的高度。<br>rotate(angle)    定义 2D 旋转，在参数中规定角度。<br>skew(x-angle,y-angle)    定义 2D 倾斜转换，沿着 X 和 Y 轴。<br>skewX(angle)    定义 2D 倾斜转换，沿着 X 轴。<br>skewY(angle)    定义 2D 倾斜转换，沿着 Y 轴。</p>\n<p>matrix3d(n,n,n,n,n,n,<br>n,n,n,n,n,n,n,n,n,n)    定义 3D 转换，使用 16 个值的 4x4 矩阵。<br>translate3d(x,y,z)    定义 3D 转化。<br>translateX(x)    定义 3D 转化，仅使用用于 X 轴的值。<br>translateY(y)    定义 3D 转化，仅使用用于 Y 轴的值。<br>translateZ(z)    定义 3D 转化，仅使用用于 Z 轴的值。<br>scale3d(x,y,z)    定义 3D 缩放转换。<br>scaleX(x)    定义 3D 缩放转换，通过给定一个 X 轴的值。<br>scaleY(y)    定义 3D 缩放转换，通过给定一个 Y 轴的值。<br>scaleZ(z)    定义 3D 缩放转换，通过给定一个 Z 轴的值。<br>rotate3d(x,y,z,angle)    定义 3D 旋转。<br>rotateX(angle)    定义沿 X 轴的 3D 旋转。<br>rotateY(angle)    定义沿 Y 轴的 3D 旋转。<br>rotateZ(angle)    定义沿 Z 轴的 3D 旋转。<br>perspective(n)    定义 3D 转换元素的透视视图。</p>\n<p>动画</p>\n<p>transition 过渡</p>\n<p>属性    描述    CSS<br>transition    简写属性，用于在一个属性中设置四个过渡属性。    3<br>transition-property    规定应用过渡的 CSS 属性的名称。    3<br>transition-duration    定义过渡效果花费的时间。默认是 0。    3<br>transition-timing-function    规定过渡效果的时间曲线。默认是 “ease”。    3<br>transition-delay    规定过渡效果何时开始。默认是 0。</p>\n<p>@keyframes    规定动画。    3<br>animation    所有动画属性的简写属性，除了 animation-play-state 属性。    3<br>animation-name    规定 @keyframes 动画的名称。    3<br>animation-duration    规定动画完成一个周期所花费的秒或毫秒。默认是 0。    3<br>animation-timing-function    规定动画的速度曲线。默认是 “ease”。    3<br>animation-delay    规定动画何时开始。默认是 0。    3<br>animation-iteration-count    规定动画被播放的次数。默认是 1。    3<br>animation-direction    规定动画是否在下一周期逆向地播放。默认是 “normal”。    3<br>animation-play-state    规定动画是否正在运行或暂停。默认是 “running”。    3<br>animation-fill-mode    规定对象动画时间之外的状态。    3</p>\n<p>用户界面：</p>\n<p>属性    描述    CSS<br>appearance    允许您将元素设置为标准用户界面元素的外观    3<br>box-sizing    允许您以确切的方式定义适应某个区域的具体内容。    3<br>icon    为创作者提供使用图标化等价物来设置元素样式的能力。    3<br>nav-down    规定在使用 arrow-down 导航键时向何处导航。    3<br>nav-index    设置元素的 tab 键控制次序。    3<br>nav-left    规定在使用 arrow-left 导航键时向何处导航。    3<br>nav-right    规定在使用 arrow-right 导航键时向何处导航。    3<br>nav-up    规定在使用 arrow-up 导航键时向何处导航。    3<br>outline-offset    对轮廓进行偏移，并在超出边框边缘的位置绘制轮廓。    3<br>resize    规定是否可由用户对元素的尺寸进行调整。</p>\n"},{"layout":"default","title":"DNS与域名","date":"2016-12-25T16:00:00.000Z","_content":"\n\n发起一次http请求需要经历下面的步骤\n\n``` html\nDNS 域名解析 -->\n发起 TCP 的 3 次握手 -->\n建立 TCP 连接后发起 http 请求 -->\n服务器响应 http 请求 -->\n```\n\nTTL：表示 DNS 记录在 DNS 服务器上缓存时间\n\n","source":"_posts/dns.md","raw":"---\nlayout: default\ntitle: DNS与域名\ndate: 2016/12/26\ncategory: 网络\ntag: dns\n---\n\n\n发起一次http请求需要经历下面的步骤\n\n``` html\nDNS 域名解析 -->\n发起 TCP 的 3 次握手 -->\n建立 TCP 连接后发起 http 请求 -->\n服务器响应 http 请求 -->\n```\n\nTTL：表示 DNS 记录在 DNS 服务器上缓存时间\n\n","slug":"dns","published":1,"updated":"2016-12-30T05:34:11.000Z","_id":"cixbbxw36000781qtuij62czq","comments":1,"photos":[],"link":"","content":"<p>发起一次http请求需要经历下面的步骤</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">DNS 域名解析 --&gt;</div><div class=\"line\">发起 TCP 的 3 次握手 --&gt;</div><div class=\"line\">建立 TCP 连接后发起 http 请求 --&gt;</div><div class=\"line\">服务器响应 http 请求 --&gt;</div></pre></td></tr></table></figure>\n<p>TTL：表示 DNS 记录在 DNS 服务器上缓存时间</p>\n","excerpt":"","more":"<p>发起一次http请求需要经历下面的步骤</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">DNS 域名解析 --&gt;</div><div class=\"line\">发起 TCP 的 3 次握手 --&gt;</div><div class=\"line\">建立 TCP 连接后发起 http 请求 --&gt;</div><div class=\"line\">服务器响应 http 请求 --&gt;</div></pre></td></tr></table></figure>\n<p>TTL：表示 DNS 记录在 DNS 服务器上缓存时间</p>\n"},{"layout":"default","title":"es6LLearn","date":"2016-08-28T16:00:00.000Z","_content":"\n## {{page.title}}\n\n``` html\nbabel -es6.js -o es5.js 将es6转换为es5\n\nbabel -d build-dir source-dir -s 将source-dir整个目录编译 -s表示生成map文件\n\nnpm install babel-core@5 这个版本有浏览器支持的browser.js\n\nbrowserify -d test5.js -o bundle.js  将es6转化为可以在浏览器跑的代码 -d生成map文件\n```\n\n\n\n\n\n","source":"_posts/es6.md","raw":"---\nlayout: default\ntitle: es6LLearn\ndate: 2016-08-29\n---\n\n## {{page.title}}\n\n``` html\nbabel -es6.js -o es5.js 将es6转换为es5\n\nbabel -d build-dir source-dir -s 将source-dir整个目录编译 -s表示生成map文件\n\nnpm install babel-core@5 这个版本有浏览器支持的browser.js\n\nbrowserify -d test5.js -o bundle.js  将es6转化为可以在浏览器跑的代码 -d生成map文件\n```\n\n\n\n\n\n","slug":"es6","published":1,"updated":"2016-12-21T01:55:59.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw39000881qtq8b143av","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">babel -es6.js -o es5.js 将es6转换为es5</div><div class=\"line\"></div><div class=\"line\">babel -d build-dir source-dir -s 将source-dir整个目录编译 -s表示生成map文件</div><div class=\"line\"></div><div class=\"line\">npm install babel-core@5 这个版本有浏览器支持的browser.js</div><div class=\"line\"></div><div class=\"line\">browserify -d test5.js -o bundle.js  将es6转化为可以在浏览器跑的代码 -d生成map文件</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">babel -es6.js -o es5.js 将es6转换为es5</div><div class=\"line\"></div><div class=\"line\">babel -d build-dir source-dir -s 将source-dir整个目录编译 -s表示生成map文件</div><div class=\"line\"></div><div class=\"line\">npm install babel-core@5 这个版本有浏览器支持的browser.js</div><div class=\"line\"></div><div class=\"line\">browserify -d test5.js -o bundle.js  将es6转化为可以在浏览器跑的代码 -d生成map文件</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"fastClick","date":"2016-11-16T16:00:00.000Z","_content":"\n## {{page.title}}\n\n\n\n\n","source":"_posts/fast-click.md","raw":"---\nlayout: default\ntitle: fastClick\ndate: 2016-11-17\n---\n\n## {{page.title}}\n\n\n\n\n","slug":"fast-click","published":1,"updated":"2016-12-21T01:59:02.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw3d000981qtqd5qzbbd","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2>"},{"layout":"default","title":"常用的git操作命令","_content":"\ngit是一种分布式版本管理工具，他有着强大的开源社区github，结合smartgit能够快速、高效、准确的对分支进行切换。\n但是如果仅仅只是使用smartgit图形界面有时候也很不方便，至少在服务器上就没招了，因此了解一些git bash的基本命令是十分必要的。\n接下来会介绍一些常用的基本的git bash命令。\n\n### 配置git用户名和邮箱\n\n```\n\ngit config user.username \"用户名\" \n\ngit config user.email \"邮箱\"\n\n```\n\n### 生成ssh-key\n\n```\n\nssh-keygen -t rsa -C \"邮箱\"\n\n```\n\n然后根据提示连续回车即可在~/ .ssh 目录下得到id_rsa 和id_rsa.pub 两个文件，id_rsa.pub文件里面存放的就是我们要使用的key。\n\n### 生成多个ssh-key\n\n```\n\nssh-keygen -t rsa  -f ~/.ssh/id_rsa.xxx -C \"邮箱\"\n\n```\n\n### git branch\n\n```\n\ngit branch —— 列出本地分支\n\ngit branch -r —— 列出远程分支\n\ngit branch -a —— 列出本地和远程分支\n\ngit branch 分支名 —— 创建一个分支（*只是创建，不切换）\n\ngit branch -d | -D 分支名 —— 删除本地分支\n\ngit branch -d | -D  -r 分支名 —— 删除远程分支\n\n\n```\n\n### git拉取远程分支到本地\n\n```\n\ngit branch -b 远程分支名 origin/远程分支名\n\ngit pull origin 远程分支名\n\n```\n\n### git 切换分支\n\n```\n\ngit chechout 分支名 —— git切换分支\n\n```\n\n### git commit\n\n```\n\ngit commit —— 提交缓存区里面的文件\n\ngit commit -m \"提交描述信息\"\n\n```\n\n### git push\n\n```\n\ngit push —— 将本地仓库修改推送到服务器上的仓库\n\ngit push origin develop —— 将新分支push到远程分成\n\ngit push --set-upstream origin develop —— 将新分支push到远程分支并与之关联起来\n\n\n```\n\n### git 合并a 分支到 b分支\n\nstep1:\n\n```\n\ngit checkout b\n\n```\n\nstep2:\n\n```\n\ngit merge a\n\n```\n\n### git查看log\n\n```\n\nstep1:\n\ngit log —— 按提交时间列出所有的更新\n\ngit log --pretty\n\ngit log --pretty=oneline \n\ngit log --pretty=oneline 文件名\n\ngit log -p -2 —— -p 选项展开显示每次提交的内容差异，用 -2 则仅显示最近的两次更新：\n\nstep2:\n\n找到对应的hash\n\ngit show hash串\n\n```\n\n### gitignore\n\n有时候会遇到加入.gitignore文件的时候无效的问题，这个是因为某些文件已经被纳入了版本库\n\n```\n//.gitignore\n\n*.log\n\nstaticPub/\n\n```\n\n解决办法：\n\n```\ngit rm -r --cached .\n\ngit add .\n\ngit commit -m 'updata .gitignore'\n\n```\n\n### git放弃本地修改\n\n```\n\ngit reset --hard ORIGIN/BRANCH\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/git.md","raw":"---\nlayout: default\ntitle: 常用的git操作命令\ncategory: 工具\ntag: git命令行\n---\n\ngit是一种分布式版本管理工具，他有着强大的开源社区github，结合smartgit能够快速、高效、准确的对分支进行切换。\n但是如果仅仅只是使用smartgit图形界面有时候也很不方便，至少在服务器上就没招了，因此了解一些git bash的基本命令是十分必要的。\n接下来会介绍一些常用的基本的git bash命令。\n\n### 配置git用户名和邮箱\n\n```\n\ngit config user.username \"用户名\" \n\ngit config user.email \"邮箱\"\n\n```\n\n### 生成ssh-key\n\n```\n\nssh-keygen -t rsa -C \"邮箱\"\n\n```\n\n然后根据提示连续回车即可在~/ .ssh 目录下得到id_rsa 和id_rsa.pub 两个文件，id_rsa.pub文件里面存放的就是我们要使用的key。\n\n### 生成多个ssh-key\n\n```\n\nssh-keygen -t rsa  -f ~/.ssh/id_rsa.xxx -C \"邮箱\"\n\n```\n\n### git branch\n\n```\n\ngit branch —— 列出本地分支\n\ngit branch -r —— 列出远程分支\n\ngit branch -a —— 列出本地和远程分支\n\ngit branch 分支名 —— 创建一个分支（*只是创建，不切换）\n\ngit branch -d | -D 分支名 —— 删除本地分支\n\ngit branch -d | -D  -r 分支名 —— 删除远程分支\n\n\n```\n\n### git拉取远程分支到本地\n\n```\n\ngit branch -b 远程分支名 origin/远程分支名\n\ngit pull origin 远程分支名\n\n```\n\n### git 切换分支\n\n```\n\ngit chechout 分支名 —— git切换分支\n\n```\n\n### git commit\n\n```\n\ngit commit —— 提交缓存区里面的文件\n\ngit commit -m \"提交描述信息\"\n\n```\n\n### git push\n\n```\n\ngit push —— 将本地仓库修改推送到服务器上的仓库\n\ngit push origin develop —— 将新分支push到远程分成\n\ngit push --set-upstream origin develop —— 将新分支push到远程分支并与之关联起来\n\n\n```\n\n### git 合并a 分支到 b分支\n\nstep1:\n\n```\n\ngit checkout b\n\n```\n\nstep2:\n\n```\n\ngit merge a\n\n```\n\n### git查看log\n\n```\n\nstep1:\n\ngit log —— 按提交时间列出所有的更新\n\ngit log --pretty\n\ngit log --pretty=oneline \n\ngit log --pretty=oneline 文件名\n\ngit log -p -2 —— -p 选项展开显示每次提交的内容差异，用 -2 则仅显示最近的两次更新：\n\nstep2:\n\n找到对应的hash\n\ngit show hash串\n\n```\n\n### gitignore\n\n有时候会遇到加入.gitignore文件的时候无效的问题，这个是因为某些文件已经被纳入了版本库\n\n```\n//.gitignore\n\n*.log\n\nstaticPub/\n\n```\n\n解决办法：\n\n```\ngit rm -r --cached .\n\ngit add .\n\ngit commit -m 'updata .gitignore'\n\n```\n\n### git放弃本地修改\n\n```\n\ngit reset --hard ORIGIN/BRANCH\n\n```\n\n\n\n\n\n\n\n\n\n\n\n","slug":"git","published":1,"date":"2016-12-06T14:04:58.000Z","updated":"2016-12-09T06:47:06.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw3f000a81qt28hiqjum","content":"<p>git是一种分布式版本管理工具，他有着强大的开源社区github，结合smartgit能够快速、高效、准确的对分支进行切换。<br>但是如果仅仅只是使用smartgit图形界面有时候也很不方便，至少在服务器上就没招了，因此了解一些git bash的基本命令是十分必要的。<br>接下来会介绍一些常用的基本的git bash命令。</p>\n<h3 id=\"配置git用户名和邮箱\"><a href=\"#配置git用户名和邮箱\" class=\"headerlink\" title=\"配置git用户名和邮箱\"></a>配置git用户名和邮箱</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git config user<span class=\"selector-class\">.username</span> <span class=\"string\">\"用户名\"</span> </div><div class=\"line\"></div><div class=\"line\">git config user<span class=\"selector-class\">.email</span> <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"生成ssh-key\"><a href=\"#生成ssh-key\" class=\"headerlink\" title=\"生成ssh-key\"></a>生成ssh-key</h3><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ssh-keygen -<span class=\"built_in\">t</span> rsa -C <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<p>然后根据提示连续回车即可在~/ .ssh 目录下得到id_rsa 和id_rsa.pub 两个文件，id_rsa.pub文件里面存放的就是我们要使用的key。</p>\n<h3 id=\"生成多个ssh-key\"><a href=\"#生成多个ssh-key\" class=\"headerlink\" title=\"生成多个ssh-key\"></a>生成多个ssh-key</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ssh-keygen -t rsa  -f ~/.ssh/id_rsa<span class=\"selector-class\">.xxx</span> -C <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git branch —— 列出本地分支</div><div class=\"line\"></div><div class=\"line\">git branch -r —— 列出远程分支</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-a</span> —— 列出本地和远程分支</div><div class=\"line\"></div><div class=\"line\">git branch 分支名 —— 创建一个分支（*只是创建，不切换）</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-d</span> | -D 分支名 —— 删除本地分支</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-d</span> | -D  -r 分支名 —— 删除远程分支</div></pre></td></tr></table></figure>\n<h3 id=\"git拉取远程分支到本地\"><a href=\"#git拉取远程分支到本地\" class=\"headerlink\" title=\"git拉取远程分支到本地\"></a>git拉取远程分支到本地</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">branch </span>-<span class=\"keyword\">b </span>远程分支名 <span class=\"keyword\">origin/远程分支名</span></div><div class=\"line\"></div><div class=\"line\">git pull <span class=\"keyword\">origin </span>远程分支名</div></pre></td></tr></table></figure>\n<h3 id=\"git-切换分支\"><a href=\"#git-切换分支\" class=\"headerlink\" title=\"git 切换分支\"></a>git 切换分支</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">git</span> chechout 分支名 —— git切换分支</div></pre></td></tr></table></figure>\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">commit</span> —— 提交缓存区里面的文件</div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">commit</span> -m <span class=\"string\">\"提交描述信息\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git push\"></a>git push</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> —— 将本地仓库修改推送到服务器上的仓库</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> <span class=\"built_in\">origin</span> develop —— 将新分支<span class=\"built_in\">push</span>到远程分成</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> --set-upstream <span class=\"built_in\">origin</span> develop —— 将新分支<span class=\"built_in\">push</span>到远程分支并与之关联起来</div></pre></td></tr></table></figure>\n<h3 id=\"git-合并a-分支到-b分支\"><a href=\"#git-合并a-分支到-b分支\" class=\"headerlink\" title=\"git 合并a 分支到 b分支\"></a>git 合并a 分支到 b分支</h3><p>step1:</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">git checkout b</span></div></pre></td></tr></table></figure>\n<p>step2:</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">merge</span> <span class=\"keyword\">a</span></div></pre></td></tr></table></figure>\n<h3 id=\"git查看log\"><a href=\"#git查看log\" class=\"headerlink\" title=\"git查看log\"></a>git查看log</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">step1:</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> —— 按提交时间列出所有的更新</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty=oneline </span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty=oneline 文件名</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> -p <span class=\"number\">-2</span> —— -p 选项展开显示每次提交的内容差异，用 <span class=\"number\">-2</span> 则仅显示最近的两次更新：</div><div class=\"line\"></div><div class=\"line\">step2:</div><div class=\"line\"></div><div class=\"line\">找到对应的hash</div><div class=\"line\"></div><div class=\"line\">git show hash串</div></pre></td></tr></table></figure>\n<h3 id=\"gitignore\"><a href=\"#gitignore\" class=\"headerlink\" title=\"gitignore\"></a>gitignore</h3><p>有时候会遇到加入.gitignore文件的时候无效的问题，这个是因为某些文件已经被纳入了版本库</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//.gitignore</span></div><div class=\"line\"></div><div class=\"line\">*<span class=\"selector-class\">.log</span></div><div class=\"line\"></div><div class=\"line\">staticPub/</div></pre></td></tr></table></figure>\n<p>解决办法：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -r --cached .</div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> .</span></div><div class=\"line\"></div><div class=\"line\">git commit -m <span class=\"string\">'updata .gitignore'</span></div></pre></td></tr></table></figure>\n<h3 id=\"git放弃本地修改\"><a href=\"#git放弃本地修改\" class=\"headerlink\" title=\"git放弃本地修改\"></a>git放弃本地修改</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard ORIGIN/BRANCH</span></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>git是一种分布式版本管理工具，他有着强大的开源社区github，结合smartgit能够快速、高效、准确的对分支进行切换。<br>但是如果仅仅只是使用smartgit图形界面有时候也很不方便，至少在服务器上就没招了，因此了解一些git bash的基本命令是十分必要的。<br>接下来会介绍一些常用的基本的git bash命令。</p>\n<h3 id=\"配置git用户名和邮箱\"><a href=\"#配置git用户名和邮箱\" class=\"headerlink\" title=\"配置git用户名和邮箱\"></a>配置git用户名和邮箱</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git config user<span class=\"selector-class\">.username</span> <span class=\"string\">\"用户名\"</span> </div><div class=\"line\"></div><div class=\"line\">git config user<span class=\"selector-class\">.email</span> <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"生成ssh-key\"><a href=\"#生成ssh-key\" class=\"headerlink\" title=\"生成ssh-key\"></a>生成ssh-key</h3><figure class=\"highlight excel\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ssh-keygen -<span class=\"built_in\">t</span> rsa -C <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<p>然后根据提示连续回车即可在~/ .ssh 目录下得到id_rsa 和id_rsa.pub 两个文件，id_rsa.pub文件里面存放的就是我们要使用的key。</p>\n<h3 id=\"生成多个ssh-key\"><a href=\"#生成多个ssh-key\" class=\"headerlink\" title=\"生成多个ssh-key\"></a>生成多个ssh-key</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">ssh-keygen -t rsa  -f ~/.ssh/id_rsa<span class=\"selector-class\">.xxx</span> -C <span class=\"string\">\"邮箱\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"git-branch\"><a href=\"#git-branch\" class=\"headerlink\" title=\"git branch\"></a>git branch</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git branch —— 列出本地分支</div><div class=\"line\"></div><div class=\"line\">git branch -r —— 列出远程分支</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-a</span> —— 列出本地和远程分支</div><div class=\"line\"></div><div class=\"line\">git branch 分支名 —— 创建一个分支（*只是创建，不切换）</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-d</span> | -D 分支名 —— 删除本地分支</div><div class=\"line\"></div><div class=\"line\">git branch <span class=\"_\">-d</span> | -D  -r 分支名 —— 删除远程分支</div></pre></td></tr></table></figure>\n<h3 id=\"git拉取远程分支到本地\"><a href=\"#git拉取远程分支到本地\" class=\"headerlink\" title=\"git拉取远程分支到本地\"></a>git拉取远程分支到本地</h3><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">branch </span>-<span class=\"keyword\">b </span>远程分支名 <span class=\"keyword\">origin/远程分支名</div><div class=\"line\"></span></div><div class=\"line\">git pull <span class=\"keyword\">origin </span>远程分支名</div></pre></td></tr></table></figure>\n<h3 id=\"git-切换分支\"><a href=\"#git-切换分支\" class=\"headerlink\" title=\"git 切换分支\"></a>git 切换分支</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">git</span> chechout 分支名 —— git切换分支</div></pre></td></tr></table></figure>\n<h3 id=\"git-commit\"><a href=\"#git-commit\" class=\"headerlink\" title=\"git commit\"></a>git commit</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">commit</span> —— 提交缓存区里面的文件</div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">commit</span> -m <span class=\"string\">\"提交描述信息\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"git-push\"><a href=\"#git-push\" class=\"headerlink\" title=\"git push\"></a>git push</h3><figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> —— 将本地仓库修改推送到服务器上的仓库</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> <span class=\"built_in\">origin</span> develop —— 将新分支<span class=\"built_in\">push</span>到远程分成</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">push</span> --set-upstream <span class=\"built_in\">origin</span> develop —— 将新分支<span class=\"built_in\">push</span>到远程分支并与之关联起来</div></pre></td></tr></table></figure>\n<h3 id=\"git-合并a-分支到-b分支\"><a href=\"#git-合并a-分支到-b分支\" class=\"headerlink\" title=\"git 合并a 分支到 b分支\"></a>git 合并a 分支到 b分支</h3><p>step1:</p>\n<figure class=\"highlight ebnf\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"attribute\">git checkout b</span></div></pre></td></tr></table></figure>\n<p>step2:</p>\n<figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">merge</span> <span class=\"keyword\">a</span></div></pre></td></tr></table></figure>\n<h3 id=\"git查看log\"><a href=\"#git查看log\" class=\"headerlink\" title=\"git查看log\"></a>git查看log</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">step1:</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> —— 按提交时间列出所有的更新</div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty=oneline </span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> <span class=\"comment\">--pretty=oneline 文件名</span></div><div class=\"line\"></div><div class=\"line\">git <span class=\"built_in\">log</span> -p <span class=\"number\">-2</span> —— -p 选项展开显示每次提交的内容差异，用 <span class=\"number\">-2</span> 则仅显示最近的两次更新：</div><div class=\"line\"></div><div class=\"line\">step2:</div><div class=\"line\"></div><div class=\"line\">找到对应的hash</div><div class=\"line\"></div><div class=\"line\">git show hash串</div></pre></td></tr></table></figure>\n<h3 id=\"gitignore\"><a href=\"#gitignore\" class=\"headerlink\" title=\"gitignore\"></a>gitignore</h3><p>有时候会遇到加入.gitignore文件的时候无效的问题，这个是因为某些文件已经被纳入了版本库</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//.gitignore</span></div><div class=\"line\"></div><div class=\"line\">*<span class=\"selector-class\">.log</span></div><div class=\"line\"></div><div class=\"line\">staticPub/</div></pre></td></tr></table></figure>\n<p>解决办法：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">git rm -r --cached .</div><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">add</span><span class=\"bash\"> .</div><div class=\"line\"></span></div><div class=\"line\">git commit -m <span class=\"string\">'updata .gitignore'</span></div></pre></td></tr></table></figure>\n<h3 id=\"git放弃本地修改\"><a href=\"#git放弃本地修改\" class=\"headerlink\" title=\"git放弃本地修改\"></a>git放弃本地修改</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">git <span class=\"keyword\">reset</span> <span class=\"comment\">--hard ORIGIN/BRANCH</span></div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"HTTP2入门","date":"2016-12-28T16:00:00.000Z","_content":"\n\n随着http2的标准的确定，各大浏览器的大力支持，http2这个字眼开始出现在我们的视野里。为什么要使用http2呢，它和之前的http有什么区别？\n\n1.多路复用、请求优化：一个连接内可以有无限个并行的请求即允许多个并行的http请求共用一个tpc连接。多路复用还可以设置优先级。让重要的资源先行。\n\n2.压缩了 HTTP 头：多个请求\n\n3.支持服务器推送：可以将一些资源直接通过服务器推送到用户端，减少请求次数。\n\n4.强制使用SSL传输协议\n\n\n\n### http2安装的过程，以及一些坑。\n\n\n支持http2首先需要弄好https，也就是需要申请网站证书。\n\n我这里用的是腾讯云的主机、腾讯云的域名、腾讯云的证书（买域名免费用，文章后面有传送门，https证书的申请、证书的安装）。\n\n### 环境要求：\n\n``` html\nnginx版本1.9.5及以上\n\nhttps支持\n\nopenssl版本1.0.2及以上\nps:本人就是卡在这里卡了几天，折腾了好久是在麻烦，一冲动就重装了ubuntu系统。\n   现在正在安装的系统为：Ubuntu Server 16.04.1。\n   Ubuntu 16.04 LTS\t1.0.2g,之前的版本自带的openssl都不支持http2\n   当然爱折腾的也可以自己安装新的openssl、然后进行一系列的重新编译nginx，本人折腾了好久没弄好，遂放弃之。\n```\n\n\n\n\n\n\n\n### 传送门：\n\n#### https证书申请\n\nhttps://www.qcloud.com/document/product/214/6989\n\n#### https证书安装\n\nhttps://www.qcloud.com/document/product/400/4143\n\n#### http2配置\n\n在上面https的配置里面找到之前配置443的地方，加上一个http2就可以了\n\n``` html\nserver {\n    listen 443 http2;\n    server_name localhost;\n    ssl on;\n    ssl_certificate 1_www.domain.com_bundle.crt;\n    ssl_certificate_key 2_www.domain.com.key;\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n    location / {\n        root   html;\n        index  index.html index.htm;\n    }\n}\n```\n\n刷新页面，已经变成了http2了 \n\neg:\n\nhttps://www.epoos.com/\n\n此时的心情好失落。。。\n\n麻痹的，其实早就已经配置好了，只不过是openssl和nginx版本的兼容性问题花了这么多时间，还好刚才冲动的重装了ubuntu系统。\n\n\n\n\n\n#### Supporting HTTP/2\n\nhttps://www.nginx.com/blog/supporting-http2-google-chrome-users/","source":"_posts/http2.md","raw":"---\nlayout: default\ntitle: HTTP2入门\ndate: 2016/12/29\ncategory: 网络\ntag: http\n---\n\n\n随着http2的标准的确定，各大浏览器的大力支持，http2这个字眼开始出现在我们的视野里。为什么要使用http2呢，它和之前的http有什么区别？\n\n1.多路复用、请求优化：一个连接内可以有无限个并行的请求即允许多个并行的http请求共用一个tpc连接。多路复用还可以设置优先级。让重要的资源先行。\n\n2.压缩了 HTTP 头：多个请求\n\n3.支持服务器推送：可以将一些资源直接通过服务器推送到用户端，减少请求次数。\n\n4.强制使用SSL传输协议\n\n\n\n### http2安装的过程，以及一些坑。\n\n\n支持http2首先需要弄好https，也就是需要申请网站证书。\n\n我这里用的是腾讯云的主机、腾讯云的域名、腾讯云的证书（买域名免费用，文章后面有传送门，https证书的申请、证书的安装）。\n\n### 环境要求：\n\n``` html\nnginx版本1.9.5及以上\n\nhttps支持\n\nopenssl版本1.0.2及以上\nps:本人就是卡在这里卡了几天，折腾了好久是在麻烦，一冲动就重装了ubuntu系统。\n   现在正在安装的系统为：Ubuntu Server 16.04.1。\n   Ubuntu 16.04 LTS\t1.0.2g,之前的版本自带的openssl都不支持http2\n   当然爱折腾的也可以自己安装新的openssl、然后进行一系列的重新编译nginx，本人折腾了好久没弄好，遂放弃之。\n```\n\n\n\n\n\n\n\n### 传送门：\n\n#### https证书申请\n\nhttps://www.qcloud.com/document/product/214/6989\n\n#### https证书安装\n\nhttps://www.qcloud.com/document/product/400/4143\n\n#### http2配置\n\n在上面https的配置里面找到之前配置443的地方，加上一个http2就可以了\n\n``` html\nserver {\n    listen 443 http2;\n    server_name localhost;\n    ssl on;\n    ssl_certificate 1_www.domain.com_bundle.crt;\n    ssl_certificate_key 2_www.domain.com.key;\n    ssl_session_timeout 5m;\n    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;\n    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;\n    ssl_prefer_server_ciphers on;\n    location / {\n        root   html;\n        index  index.html index.htm;\n    }\n}\n```\n\n刷新页面，已经变成了http2了 \n\neg:\n\nhttps://www.epoos.com/\n\n此时的心情好失落。。。\n\n麻痹的，其实早就已经配置好了，只不过是openssl和nginx版本的兼容性问题花了这么多时间，还好刚才冲动的重装了ubuntu系统。\n\n\n\n\n\n#### Supporting HTTP/2\n\nhttps://www.nginx.com/blog/supporting-http2-google-chrome-users/","slug":"http2","published":1,"updated":"2016-12-30T05:33:04.000Z","_id":"cixbbxw3j000b81qt68e4khvz","comments":1,"photos":[],"link":"","content":"<p>随着http2的标准的确定，各大浏览器的大力支持，http2这个字眼开始出现在我们的视野里。为什么要使用http2呢，它和之前的http有什么区别？</p>\n<p>1.多路复用、请求优化：一个连接内可以有无限个并行的请求即允许多个并行的http请求共用一个tpc连接。多路复用还可以设置优先级。让重要的资源先行。</p>\n<p>2.压缩了 HTTP 头：多个请求</p>\n<p>3.支持服务器推送：可以将一些资源直接通过服务器推送到用户端，减少请求次数。</p>\n<p>4.强制使用SSL传输协议</p>\n<h3 id=\"http2安装的过程，以及一些坑。\"><a href=\"#http2安装的过程，以及一些坑。\" class=\"headerlink\" title=\"http2安装的过程，以及一些坑。\"></a>http2安装的过程，以及一些坑。</h3><p>支持http2首先需要弄好https，也就是需要申请网站证书。</p>\n<p>我这里用的是腾讯云的主机、腾讯云的域名、腾讯云的证书（买域名免费用，文章后面有传送门，https证书的申请、证书的安装）。</p>\n<h3 id=\"环境要求：\"><a href=\"#环境要求：\" class=\"headerlink\" title=\"环境要求：\"></a>环境要求：</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx版本1.9.5及以上</div><div class=\"line\"></div><div class=\"line\">https支持</div><div class=\"line\"></div><div class=\"line\">openssl版本1.0.2及以上</div><div class=\"line\">ps:本人就是卡在这里卡了几天，折腾了好久是在麻烦，一冲动就重装了ubuntu系统。</div><div class=\"line\">   现在正在安装的系统为：Ubuntu Server 16.04.1。</div><div class=\"line\">   Ubuntu 16.04 LTS\t1.0.2g,之前的版本自带的openssl都不支持http2</div><div class=\"line\">   当然爱折腾的也可以自己安装新的openssl、然后进行一系列的重新编译nginx，本人折腾了好久没弄好，遂放弃之。</div></pre></td></tr></table></figure>\n<h3 id=\"传送门：\"><a href=\"#传送门：\" class=\"headerlink\" title=\"传送门：\"></a>传送门：</h3><h4 id=\"https证书申请\"><a href=\"#https证书申请\" class=\"headerlink\" title=\"https证书申请\"></a>https证书申请</h4><p><a href=\"https://www.qcloud.com/document/product/214/6989\" target=\"_blank\" rel=\"external\">https://www.qcloud.com/document/product/214/6989</a></p>\n<h4 id=\"https证书安装\"><a href=\"#https证书安装\" class=\"headerlink\" title=\"https证书安装\"></a>https证书安装</h4><p><a href=\"https://www.qcloud.com/document/product/400/4143\" target=\"_blank\" rel=\"external\">https://www.qcloud.com/document/product/400/4143</a></p>\n<h4 id=\"http2配置\"><a href=\"#http2配置\" class=\"headerlink\" title=\"http2配置\"></a>http2配置</h4><p>在上面https的配置里面找到之前配置443的地方，加上一个http2就可以了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 443 http2;</div><div class=\"line\">    server_name localhost;</div><div class=\"line\">    ssl on;</div><div class=\"line\">    ssl_certificate 1_www.domain.com_bundle.crt;</div><div class=\"line\">    ssl_certificate_key 2_www.domain.com.key;</div><div class=\"line\">    ssl_session_timeout 5m;</div><div class=\"line\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</div><div class=\"line\">    ssl_prefer_server_ciphers on;</div><div class=\"line\">    location / &#123;</div><div class=\"line\">        root   html;</div><div class=\"line\">        index  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>刷新页面，已经变成了http2了 </p>\n<p>eg:</p>\n<p><a href=\"https://www.epoos.com/\">https://www.epoos.com/</a></p>\n<p>此时的心情好失落。。。</p>\n<p>麻痹的，其实早就已经配置好了，只不过是openssl和nginx版本的兼容性问题花了这么多时间，还好刚才冲动的重装了ubuntu系统。</p>\n<h4 id=\"Supporting-HTTP-2\"><a href=\"#Supporting-HTTP-2\" class=\"headerlink\" title=\"Supporting HTTP/2\"></a>Supporting HTTP/2</h4><p><a href=\"https://www.nginx.com/blog/supporting-http2-google-chrome-users/\" target=\"_blank\" rel=\"external\">https://www.nginx.com/blog/supporting-http2-google-chrome-users/</a></p>\n","excerpt":"","more":"<p>随着http2的标准的确定，各大浏览器的大力支持，http2这个字眼开始出现在我们的视野里。为什么要使用http2呢，它和之前的http有什么区别？</p>\n<p>1.多路复用、请求优化：一个连接内可以有无限个并行的请求即允许多个并行的http请求共用一个tpc连接。多路复用还可以设置优先级。让重要的资源先行。</p>\n<p>2.压缩了 HTTP 头：多个请求</p>\n<p>3.支持服务器推送：可以将一些资源直接通过服务器推送到用户端，减少请求次数。</p>\n<p>4.强制使用SSL传输协议</p>\n<h3 id=\"http2安装的过程，以及一些坑。\"><a href=\"#http2安装的过程，以及一些坑。\" class=\"headerlink\" title=\"http2安装的过程，以及一些坑。\"></a>http2安装的过程，以及一些坑。</h3><p>支持http2首先需要弄好https，也就是需要申请网站证书。</p>\n<p>我这里用的是腾讯云的主机、腾讯云的域名、腾讯云的证书（买域名免费用，文章后面有传送门，https证书的申请、证书的安装）。</p>\n<h3 id=\"环境要求：\"><a href=\"#环境要求：\" class=\"headerlink\" title=\"环境要求：\"></a>环境要求：</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx版本1.9.5及以上</div><div class=\"line\"></div><div class=\"line\">https支持</div><div class=\"line\"></div><div class=\"line\">openssl版本1.0.2及以上</div><div class=\"line\">ps:本人就是卡在这里卡了几天，折腾了好久是在麻烦，一冲动就重装了ubuntu系统。</div><div class=\"line\">   现在正在安装的系统为：Ubuntu Server 16.04.1。</div><div class=\"line\">   Ubuntu 16.04 LTS\t1.0.2g,之前的版本自带的openssl都不支持http2</div><div class=\"line\">   当然爱折腾的也可以自己安装新的openssl、然后进行一系列的重新编译nginx，本人折腾了好久没弄好，遂放弃之。</div></pre></td></tr></table></figure>\n<h3 id=\"传送门：\"><a href=\"#传送门：\" class=\"headerlink\" title=\"传送门：\"></a>传送门：</h3><h4 id=\"https证书申请\"><a href=\"#https证书申请\" class=\"headerlink\" title=\"https证书申请\"></a>https证书申请</h4><p><a href=\"https://www.qcloud.com/document/product/214/6989\">https://www.qcloud.com/document/product/214/6989</a></p>\n<h4 id=\"https证书安装\"><a href=\"#https证书安装\" class=\"headerlink\" title=\"https证书安装\"></a>https证书安装</h4><p><a href=\"https://www.qcloud.com/document/product/400/4143\">https://www.qcloud.com/document/product/400/4143</a></p>\n<h4 id=\"http2配置\"><a href=\"#http2配置\" class=\"headerlink\" title=\"http2配置\"></a>http2配置</h4><p>在上面https的配置里面找到之前配置443的地方，加上一个http2就可以了</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 443 http2;</div><div class=\"line\">    server_name localhost;</div><div class=\"line\">    ssl on;</div><div class=\"line\">    ssl_certificate 1_www.domain.com_bundle.crt;</div><div class=\"line\">    ssl_certificate_key 2_www.domain.com.key;</div><div class=\"line\">    ssl_session_timeout 5m;</div><div class=\"line\">    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</div><div class=\"line\">    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</div><div class=\"line\">    ssl_prefer_server_ciphers on;</div><div class=\"line\">    location / &#123;</div><div class=\"line\">        root   html;</div><div class=\"line\">        index  index.html index.htm;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>刷新页面，已经变成了http2了 </p>\n<p>eg:</p>\n<p><a href=\"https://www.epoos.com/\">https://www.epoos.com/</a></p>\n<p>此时的心情好失落。。。</p>\n<p>麻痹的，其实早就已经配置好了，只不过是openssl和nginx版本的兼容性问题花了这么多时间，还好刚才冲动的重装了ubuntu系统。</p>\n<h4 id=\"Supporting-HTTP-2\"><a href=\"#Supporting-HTTP-2\" class=\"headerlink\" title=\"Supporting HTTP/2\"></a>Supporting HTTP/2</h4><p><a href=\"https://www.nginx.com/blog/supporting-http2-google-chrome-users/\">https://www.nginx.com/blog/supporting-http2-google-chrome-users/</a></p>\n"},{"title":"hexo使用指南","layout":"timeline","comments":1,"date":"1989-12-31T16:00:00.000Z","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","source":"_posts/intro.md","raw":"---\ntitle: hexo使用指南\nlayout: timeline\ncomments: true\ncategory: 其他\ntag: hexo使用指南\ndate: 1990/1/1 00:00:00\n\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n","slug":"intro","published":1,"updated":"2016-12-21T08:03:55.000Z","photos":[],"link":"","_id":"cixbbxw3o000d81qtgc5tz8fq","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\">Deployment</a></p>\n"},{"layout":"default","title":"GULP入门","date":"2016-12-19T16:00:00.000Z","_content":"\n## {{page.title}}\n\n最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。\ngulp本身只有几个入口，支持他拥有强大功能的是各种各样的插件。\n\n\n``` javascript\ngulp.src(globs[, options])\n```\n输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。\n\nglobs：一种匹配文件的规则。\n\n---------\n\n``` javascript\ngulp.dest(path[, options])\n```\n能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。\n\n文件被写入的路径是以所给的相对路径根据所给的目标目录计算而来。类似的，相对路径也可以根据所给的 base 来计算。 请查看上述的 gulp.src 来了解更多信息。\n\n---------\n\n``` javascript\ngulp.task(name[, deps], fn)\n```\n定义一个使用 Orchestrator 实现的任务（task）\n\nOrchestrator: 一个执行并发任务的库。\n\n----------\n\n``` javascript\ngulp.watch(glob[, opts], tasks)\n```\n监视文件，并且可以在文件发生改动时候做一些事情。它总会返回一个 EventEmitter 来发射（emit） change 事件。\n\nglob：\n\n类型： String or Array\n\n一个 glob 字符串，或者一个包含多个 glob 字符串的数组，用来指定具体监控哪些文件的变动。\n\neg:\n\n``` javascript\nvar watcher = gulp.watch('js/**/*.js', ['uglify','reload']);\nwatcher.on('change', function(event) {\n  console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');\n});\n\ngulp.watch('js/**/*.js', function(event) {\n  console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');\n});\n```\n\n----------\n\n\n\n### 相关链接：\n\n中文网官网：\n\nhttp://www.gulpjs.com.cn/docs/api/\n\n#### gulp-babel插件：\n\ngulp使用babel编译文件\n\nhttps://github.com/babel/gulp-babel\n\n\n#### gulp-util插件\n\ngulp插件的一些实用方法（Utility functions for gulp plugins）\n\nhttps://github.com/gulpjs/gulp-util\n\n\n#### gulp-imagemin插件\n\n压缩png、jpeg、gif、svg图片用的压缩工具（Minify PNG, JPEG, GIF and SVG images with imagemin）\n\nhttps://github.com/sindresorhus/gulp-imagemin\n\n\n#### gulp-clean插件\n\n用来移除文件或者文件夹的插件（A gulp plugin for removing files and folders from given paths.）\n\nhttps://github.com/peter-vilja/gulp-clean\n\n\n#### gulp-sequence插件\n\n执行一个连续的gulp任务（Run a series of gulp tasks in order.）\n\nhttps://github.com/teambition/gulp-sequence\n\n\n#### gulp.spritesmith插件\n\n合并图片（不会翻译）（Convert a set of images into a spritesheet and CSS variables via gulp）\n\nhttps://github.com/twolfson/gulp.spritesmith\n\n\n#### gulp-sourcemaps插件\n\ngulp sourcemap支持（Source map support for Gulp.js）\n\nhttps://github.com/floridoo/gulp-sourcemaps\n\n\n#### gulp-concat插件\n\n合并文件流（Streaming concat middleware for gulp）\n\nhttps://github.com/contra/gulp-concat\n\n\n#### gulp-autoprefixer 插件\n\n给css加前缀（Prefix CSS）\n\nhttps://github.com/sindresorhus/gulp-autoprefixer\n\n\n#### gulp-file-include插件\n\n文件include合并支持（a gulp plugin for file include）\n\nhttps://github.com/coderhaoxin/gulp-file-include\n\n\n#### gulp-rev插件\n\n静态资源加hash重命名\n(Static asset revisioning by appending content hash to filenames: unicorn.css → unicorn-d41d8cd98f.css)\n\nhttps://github.com/sindresorhus/gulp-rev\n\n\n#### gulp-rev-collector插件\n\n文件变化之后修改时间戳（不会翻译）\n\n（Static asset revision data collector from manifests, generated from different streams, and replace their links in html template.）\n\nhttps://github.com/shonny-ua/gulp-rev-collector\n\n\n#### browser-sync插件\n\n浏览器实时更新(Keep multiple browsers & devices in sync when building websites.)\n\nhttps://github.com/browsersync/browser-sync\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/gulp.md","raw":"---\nlayout: default\ntitle: GULP入门\ndate: 2016/12/20\ncategory: 工具\ntag: gulp\n---\n\n## {{page.title}}\n\n最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。\ngulp本身只有几个入口，支持他拥有强大功能的是各种各样的插件。\n\n\n``` javascript\ngulp.src(globs[, options])\n```\n输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。\n\nglobs：一种匹配文件的规则。\n\n---------\n\n``` javascript\ngulp.dest(path[, options])\n```\n能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。\n\n文件被写入的路径是以所给的相对路径根据所给的目标目录计算而来。类似的，相对路径也可以根据所给的 base 来计算。 请查看上述的 gulp.src 来了解更多信息。\n\n---------\n\n``` javascript\ngulp.task(name[, deps], fn)\n```\n定义一个使用 Orchestrator 实现的任务（task）\n\nOrchestrator: 一个执行并发任务的库。\n\n----------\n\n``` javascript\ngulp.watch(glob[, opts], tasks)\n```\n监视文件，并且可以在文件发生改动时候做一些事情。它总会返回一个 EventEmitter 来发射（emit） change 事件。\n\nglob：\n\n类型： String or Array\n\n一个 glob 字符串，或者一个包含多个 glob 字符串的数组，用来指定具体监控哪些文件的变动。\n\neg:\n\n``` javascript\nvar watcher = gulp.watch('js/**/*.js', ['uglify','reload']);\nwatcher.on('change', function(event) {\n  console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');\n});\n\ngulp.watch('js/**/*.js', function(event) {\n  console.log('File ' + event.path + ' was ' + event.type + ', running tasks...');\n});\n```\n\n----------\n\n\n\n### 相关链接：\n\n中文网官网：\n\nhttp://www.gulpjs.com.cn/docs/api/\n\n#### gulp-babel插件：\n\ngulp使用babel编译文件\n\nhttps://github.com/babel/gulp-babel\n\n\n#### gulp-util插件\n\ngulp插件的一些实用方法（Utility functions for gulp plugins）\n\nhttps://github.com/gulpjs/gulp-util\n\n\n#### gulp-imagemin插件\n\n压缩png、jpeg、gif、svg图片用的压缩工具（Minify PNG, JPEG, GIF and SVG images with imagemin）\n\nhttps://github.com/sindresorhus/gulp-imagemin\n\n\n#### gulp-clean插件\n\n用来移除文件或者文件夹的插件（A gulp plugin for removing files and folders from given paths.）\n\nhttps://github.com/peter-vilja/gulp-clean\n\n\n#### gulp-sequence插件\n\n执行一个连续的gulp任务（Run a series of gulp tasks in order.）\n\nhttps://github.com/teambition/gulp-sequence\n\n\n#### gulp.spritesmith插件\n\n合并图片（不会翻译）（Convert a set of images into a spritesheet and CSS variables via gulp）\n\nhttps://github.com/twolfson/gulp.spritesmith\n\n\n#### gulp-sourcemaps插件\n\ngulp sourcemap支持（Source map support for Gulp.js）\n\nhttps://github.com/floridoo/gulp-sourcemaps\n\n\n#### gulp-concat插件\n\n合并文件流（Streaming concat middleware for gulp）\n\nhttps://github.com/contra/gulp-concat\n\n\n#### gulp-autoprefixer 插件\n\n给css加前缀（Prefix CSS）\n\nhttps://github.com/sindresorhus/gulp-autoprefixer\n\n\n#### gulp-file-include插件\n\n文件include合并支持（a gulp plugin for file include）\n\nhttps://github.com/coderhaoxin/gulp-file-include\n\n\n#### gulp-rev插件\n\n静态资源加hash重命名\n(Static asset revisioning by appending content hash to filenames: unicorn.css → unicorn-d41d8cd98f.css)\n\nhttps://github.com/sindresorhus/gulp-rev\n\n\n#### gulp-rev-collector插件\n\n文件变化之后修改时间戳（不会翻译）\n\n（Static asset revision data collector from manifests, generated from different streams, and replace their links in html template.）\n\nhttps://github.com/shonny-ua/gulp-rev-collector\n\n\n#### browser-sync插件\n\n浏览器实时更新(Keep multiple browsers & devices in sync when building websites.)\n\nhttps://github.com/browsersync/browser-sync\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"gulp","published":1,"updated":"2016-12-30T05:36:40.000Z","_id":"cixbbxw3q000f81qtko6u7fgs","comments":1,"photos":[],"link":"","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。<br>gulp本身只有几个入口，支持他拥有强大功能的是各种各样的插件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(globs[, options])</div></pre></td></tr></table></figure>\n<p>输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。</p>\n<p>globs：一种匹配文件的规则。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.dest(path[, options])</div></pre></td></tr></table></figure>\n<p>能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。</p>\n<p>文件被写入的路径是以所给的相对路径根据所给的目标目录计算而来。类似的，相对路径也可以根据所给的 base 来计算。 请查看上述的 gulp.src 来了解更多信息。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(name[, deps], fn)</div></pre></td></tr></table></figure>\n<p>定义一个使用 Orchestrator 实现的任务（task）</p>\n<p>Orchestrator: 一个执行并发任务的库。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.watch(glob[, opts], tasks)</div></pre></td></tr></table></figure>\n<p>监视文件，并且可以在文件发生改动时候做一些事情。它总会返回一个 EventEmitter 来发射（emit） change 事件。</p>\n<p>glob：</p>\n<p>类型： String or Array</p>\n<p>一个 glob 字符串，或者一个包含多个 glob 字符串的数组，用来指定具体监控哪些文件的变动。</p>\n<p>eg:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> watcher = gulp.watch(<span class=\"string\">'js/**/*.js'</span>, [<span class=\"string\">'uglify'</span>,<span class=\"string\">'reload'</span>]);</div><div class=\"line\">watcher.on(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'File '</span> + event.path + <span class=\"string\">' was '</span> + event.type + <span class=\"string\">', running tasks...'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">gulp.watch(<span class=\"string\">'js/**/*.js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'File '</span> + event.path + <span class=\"string\">' was '</span> + event.type + <span class=\"string\">', running tasks...'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h3><p>中文网官网：</p>\n<p><a href=\"http://www.gulpjs.com.cn/docs/api/\" target=\"_blank\" rel=\"external\">http://www.gulpjs.com.cn/docs/api/</a></p>\n<h4 id=\"gulp-babel插件：\"><a href=\"#gulp-babel插件：\" class=\"headerlink\" title=\"gulp-babel插件：\"></a>gulp-babel插件：</h4><p>gulp使用babel编译文件</p>\n<p><a href=\"https://github.com/babel/gulp-babel\" target=\"_blank\" rel=\"external\">https://github.com/babel/gulp-babel</a></p>\n<h4 id=\"gulp-util插件\"><a href=\"#gulp-util插件\" class=\"headerlink\" title=\"gulp-util插件\"></a>gulp-util插件</h4><p>gulp插件的一些实用方法（Utility functions for gulp plugins）</p>\n<p><a href=\"https://github.com/gulpjs/gulp-util\" target=\"_blank\" rel=\"external\">https://github.com/gulpjs/gulp-util</a></p>\n<h4 id=\"gulp-imagemin插件\"><a href=\"#gulp-imagemin插件\" class=\"headerlink\" title=\"gulp-imagemin插件\"></a>gulp-imagemin插件</h4><p>压缩png、jpeg、gif、svg图片用的压缩工具（Minify PNG, JPEG, GIF and SVG images with imagemin）</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-imagemin\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/gulp-imagemin</a></p>\n<h4 id=\"gulp-clean插件\"><a href=\"#gulp-clean插件\" class=\"headerlink\" title=\"gulp-clean插件\"></a>gulp-clean插件</h4><p>用来移除文件或者文件夹的插件（A gulp plugin for removing files and folders from given paths.）</p>\n<p><a href=\"https://github.com/peter-vilja/gulp-clean\" target=\"_blank\" rel=\"external\">https://github.com/peter-vilja/gulp-clean</a></p>\n<h4 id=\"gulp-sequence插件\"><a href=\"#gulp-sequence插件\" class=\"headerlink\" title=\"gulp-sequence插件\"></a>gulp-sequence插件</h4><p>执行一个连续的gulp任务（Run a series of gulp tasks in order.）</p>\n<p><a href=\"https://github.com/teambition/gulp-sequence\" target=\"_blank\" rel=\"external\">https://github.com/teambition/gulp-sequence</a></p>\n<h4 id=\"gulp-spritesmith插件\"><a href=\"#gulp-spritesmith插件\" class=\"headerlink\" title=\"gulp.spritesmith插件\"></a>gulp.spritesmith插件</h4><p>合并图片（不会翻译）（Convert a set of images into a spritesheet and CSS variables via gulp）</p>\n<p><a href=\"https://github.com/twolfson/gulp.spritesmith\" target=\"_blank\" rel=\"external\">https://github.com/twolfson/gulp.spritesmith</a></p>\n<h4 id=\"gulp-sourcemaps插件\"><a href=\"#gulp-sourcemaps插件\" class=\"headerlink\" title=\"gulp-sourcemaps插件\"></a>gulp-sourcemaps插件</h4><p>gulp sourcemap支持（Source map support for Gulp.js）</p>\n<p><a href=\"https://github.com/floridoo/gulp-sourcemaps\" target=\"_blank\" rel=\"external\">https://github.com/floridoo/gulp-sourcemaps</a></p>\n<h4 id=\"gulp-concat插件\"><a href=\"#gulp-concat插件\" class=\"headerlink\" title=\"gulp-concat插件\"></a>gulp-concat插件</h4><p>合并文件流（Streaming concat middleware for gulp）</p>\n<p><a href=\"https://github.com/contra/gulp-concat\" target=\"_blank\" rel=\"external\">https://github.com/contra/gulp-concat</a></p>\n<h4 id=\"gulp-autoprefixer-插件\"><a href=\"#gulp-autoprefixer-插件\" class=\"headerlink\" title=\"gulp-autoprefixer 插件\"></a>gulp-autoprefixer 插件</h4><p>给css加前缀（Prefix CSS）</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-autoprefixer\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/gulp-autoprefixer</a></p>\n<h4 id=\"gulp-file-include插件\"><a href=\"#gulp-file-include插件\" class=\"headerlink\" title=\"gulp-file-include插件\"></a>gulp-file-include插件</h4><p>文件include合并支持（a gulp plugin for file include）</p>\n<p><a href=\"https://github.com/coderhaoxin/gulp-file-include\" target=\"_blank\" rel=\"external\">https://github.com/coderhaoxin/gulp-file-include</a></p>\n<h4 id=\"gulp-rev插件\"><a href=\"#gulp-rev插件\" class=\"headerlink\" title=\"gulp-rev插件\"></a>gulp-rev插件</h4><p>静态资源加hash重命名<br>(Static asset revisioning by appending content hash to filenames: unicorn.css → unicorn-d41d8cd98f.css)</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-rev\" target=\"_blank\" rel=\"external\">https://github.com/sindresorhus/gulp-rev</a></p>\n<h4 id=\"gulp-rev-collector插件\"><a href=\"#gulp-rev-collector插件\" class=\"headerlink\" title=\"gulp-rev-collector插件\"></a>gulp-rev-collector插件</h4><p>文件变化之后修改时间戳（不会翻译）</p>\n<p>（Static asset revision data collector from manifests, generated from different streams, and replace their links in html template.）</p>\n<p><a href=\"https://github.com/shonny-ua/gulp-rev-collector\" target=\"_blank\" rel=\"external\">https://github.com/shonny-ua/gulp-rev-collector</a></p>\n<h4 id=\"browser-sync插件\"><a href=\"#browser-sync插件\" class=\"headerlink\" title=\"browser-sync插件\"></a>browser-sync插件</h4><p>浏览器实时更新(Keep multiple browsers &amp; devices in sync when building websites.)</p>\n<p><a href=\"https://github.com/browsersync/browser-sync\" target=\"_blank\" rel=\"external\">https://github.com/browsersync/browser-sync</a></p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。<br>gulp本身只有几个入口，支持他拥有强大功能的是各种各样的插件。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.src(globs[, options])</div></pre></td></tr></table></figure>\n<p>输出（Emits）符合所提供的匹配模式（glob）或者匹配模式的数组（array of globs）的文件。 将返回一个 Vinyl files 的 stream 它可以被 piped 到别的插件中。</p>\n<p>globs：一种匹配文件的规则。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.dest(path[, options])</div></pre></td></tr></table></figure>\n<p>能被 pipe 进来，并且将会写文件。并且重新输出（emits）所有数据，因此你可以将它 pipe 到多个文件夹。如果某文件夹不存在，将会自动创建它。</p>\n<p>文件被写入的路径是以所给的相对路径根据所给的目标目录计算而来。类似的，相对路径也可以根据所给的 base 来计算。 请查看上述的 gulp.src 来了解更多信息。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.task(name[, deps], fn)</div></pre></td></tr></table></figure>\n<p>定义一个使用 Orchestrator 实现的任务（task）</p>\n<p>Orchestrator: 一个执行并发任务的库。</p>\n<hr>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">gulp.watch(glob[, opts], tasks)</div></pre></td></tr></table></figure>\n<p>监视文件，并且可以在文件发生改动时候做一些事情。它总会返回一个 EventEmitter 来发射（emit） change 事件。</p>\n<p>glob：</p>\n<p>类型： String or Array</p>\n<p>一个 glob 字符串，或者一个包含多个 glob 字符串的数组，用来指定具体监控哪些文件的变动。</p>\n<p>eg:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> watcher = gulp.watch(<span class=\"string\">'js/**/*.js'</span>, [<span class=\"string\">'uglify'</span>,<span class=\"string\">'reload'</span>]);</div><div class=\"line\">watcher.on(<span class=\"string\">'change'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'File '</span> + event.path + <span class=\"string\">' was '</span> + event.type + <span class=\"string\">', running tasks...'</span>);</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">gulp.watch(<span class=\"string\">'js/**/*.js'</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>) </span>&#123;</div><div class=\"line\">  <span class=\"built_in\">console</span>.log(<span class=\"string\">'File '</span> + event.path + <span class=\"string\">' was '</span> + event.type + <span class=\"string\">', running tasks...'</span>);</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"相关链接：\"><a href=\"#相关链接：\" class=\"headerlink\" title=\"相关链接：\"></a>相关链接：</h3><p>中文网官网：</p>\n<p><a href=\"http://www.gulpjs.com.cn/docs/api/\">http://www.gulpjs.com.cn/docs/api/</a></p>\n<h4 id=\"gulp-babel插件：\"><a href=\"#gulp-babel插件：\" class=\"headerlink\" title=\"gulp-babel插件：\"></a>gulp-babel插件：</h4><p>gulp使用babel编译文件</p>\n<p><a href=\"https://github.com/babel/gulp-babel\">https://github.com/babel/gulp-babel</a></p>\n<h4 id=\"gulp-util插件\"><a href=\"#gulp-util插件\" class=\"headerlink\" title=\"gulp-util插件\"></a>gulp-util插件</h4><p>gulp插件的一些实用方法（Utility functions for gulp plugins）</p>\n<p><a href=\"https://github.com/gulpjs/gulp-util\">https://github.com/gulpjs/gulp-util</a></p>\n<h4 id=\"gulp-imagemin插件\"><a href=\"#gulp-imagemin插件\" class=\"headerlink\" title=\"gulp-imagemin插件\"></a>gulp-imagemin插件</h4><p>压缩png、jpeg、gif、svg图片用的压缩工具（Minify PNG, JPEG, GIF and SVG images with imagemin）</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-imagemin\">https://github.com/sindresorhus/gulp-imagemin</a></p>\n<h4 id=\"gulp-clean插件\"><a href=\"#gulp-clean插件\" class=\"headerlink\" title=\"gulp-clean插件\"></a>gulp-clean插件</h4><p>用来移除文件或者文件夹的插件（A gulp plugin for removing files and folders from given paths.）</p>\n<p><a href=\"https://github.com/peter-vilja/gulp-clean\">https://github.com/peter-vilja/gulp-clean</a></p>\n<h4 id=\"gulp-sequence插件\"><a href=\"#gulp-sequence插件\" class=\"headerlink\" title=\"gulp-sequence插件\"></a>gulp-sequence插件</h4><p>执行一个连续的gulp任务（Run a series of gulp tasks in order.）</p>\n<p><a href=\"https://github.com/teambition/gulp-sequence\">https://github.com/teambition/gulp-sequence</a></p>\n<h4 id=\"gulp-spritesmith插件\"><a href=\"#gulp-spritesmith插件\" class=\"headerlink\" title=\"gulp.spritesmith插件\"></a>gulp.spritesmith插件</h4><p>合并图片（不会翻译）（Convert a set of images into a spritesheet and CSS variables via gulp）</p>\n<p><a href=\"https://github.com/twolfson/gulp.spritesmith\">https://github.com/twolfson/gulp.spritesmith</a></p>\n<h4 id=\"gulp-sourcemaps插件\"><a href=\"#gulp-sourcemaps插件\" class=\"headerlink\" title=\"gulp-sourcemaps插件\"></a>gulp-sourcemaps插件</h4><p>gulp sourcemap支持（Source map support for Gulp.js）</p>\n<p><a href=\"https://github.com/floridoo/gulp-sourcemaps\">https://github.com/floridoo/gulp-sourcemaps</a></p>\n<h4 id=\"gulp-concat插件\"><a href=\"#gulp-concat插件\" class=\"headerlink\" title=\"gulp-concat插件\"></a>gulp-concat插件</h4><p>合并文件流（Streaming concat middleware for gulp）</p>\n<p><a href=\"https://github.com/contra/gulp-concat\">https://github.com/contra/gulp-concat</a></p>\n<h4 id=\"gulp-autoprefixer-插件\"><a href=\"#gulp-autoprefixer-插件\" class=\"headerlink\" title=\"gulp-autoprefixer 插件\"></a>gulp-autoprefixer 插件</h4><p>给css加前缀（Prefix CSS）</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-autoprefixer\">https://github.com/sindresorhus/gulp-autoprefixer</a></p>\n<h4 id=\"gulp-file-include插件\"><a href=\"#gulp-file-include插件\" class=\"headerlink\" title=\"gulp-file-include插件\"></a>gulp-file-include插件</h4><p>文件include合并支持（a gulp plugin for file include）</p>\n<p><a href=\"https://github.com/coderhaoxin/gulp-file-include\">https://github.com/coderhaoxin/gulp-file-include</a></p>\n<h4 id=\"gulp-rev插件\"><a href=\"#gulp-rev插件\" class=\"headerlink\" title=\"gulp-rev插件\"></a>gulp-rev插件</h4><p>静态资源加hash重命名<br>(Static asset revisioning by appending content hash to filenames: unicorn.css → unicorn-d41d8cd98f.css)</p>\n<p><a href=\"https://github.com/sindresorhus/gulp-rev\">https://github.com/sindresorhus/gulp-rev</a></p>\n<h4 id=\"gulp-rev-collector插件\"><a href=\"#gulp-rev-collector插件\" class=\"headerlink\" title=\"gulp-rev-collector插件\"></a>gulp-rev-collector插件</h4><p>文件变化之后修改时间戳（不会翻译）</p>\n<p>（Static asset revision data collector from manifests, generated from different streams, and replace their links in html template.）</p>\n<p><a href=\"https://github.com/shonny-ua/gulp-rev-collector\">https://github.com/shonny-ua/gulp-rev-collector</a></p>\n<h4 id=\"browser-sync插件\"><a href=\"#browser-sync插件\" class=\"headerlink\" title=\"browser-sync插件\"></a>browser-sync插件</h4><p>浏览器实时更新(Keep multiple browsers &amp; devices in sync when building websites.)</p>\n<p><a href=\"https://github.com/browsersync/browser-sync\">https://github.com/browsersync/browser-sync</a></p>\n"},{"layout":"default","title":"常用mac终端命令","date":"2016-03-28T16:00:00.000Z","_content":"\n## {{page.title}}\n\n```\ncd —— 进入目录\n\nsudo —— 获取临时root权限\n\nfind ~iname xxx  —— 查找文件夹\n\nsudo shutdown -h now | sudo halt —— 关机\n\nsudo reboot | sudo shutdown -r now —— 重启\n\npasswd  —— 修改用户密码\n\nhistory —— 最近执行的命令以及编号\n\nenv —— 显示当前所有设置过的环境变量\n\nwho —— 当前登陆的所有用户\n\nwhoami —— 当前正在操作的用户名\n\n```\n\n### 登录远程机器：\n\n```\nssh xxx@ip -p 端口\n\n```\n\n### 操作文件\n\n```\nmkdir 文件名 —— 建立新目录\n\nrm -rf —— 删除文件夹\n\nrm —— 删除文件\n\npwd —— 显示当前文件夹路径\n\n```\n\n### vim命令：\n\n```\ni —— 插入模式\n\nesc —— 退出\n\n:wq —— 保存并退出\n\n:q! —— 不保存退出\n\nu —— 撤销上一次操作\n\nctl+r 和u相反\n\n```\n\n### 一些快捷键\n\n``` html\ncommand + t —— 在终端新打开一个终端\n\ncommand + c —— 复制\n\ncommand + v —— 粘贴\n\ncommand + z —— 撤销\n\ncommand + 左（右） —— 移到行头（尾）\n\ncommand + shift + 左（右） —— 移到行头（尾）并选中\n\ncommand + r —— 刷新网页\n\nfn + 上（下） —— pageup(pagedown)\n\nfn + delete —— 向后删除\n\n```\n\n### 解压.gz文件\n\n``` shell\ngunzip filename.gz\n\ngunzip -g filename.gz\n\n```\n\nor\n\n### 将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\n\n``` shell\n[root@linux ~]# cd /usr/local/src\n\n[root@linux src]# tar -zxvf /tmp/etc.tar.gz\n\n```\n\n\n\n\n\n\n","source":"_posts/mac-linux.md","raw":"---\nlayout: default\ntitle: 常用mac终端命令\ndate: 2016/03/29\ncategory: 服务器\ntag: linux\n---\n\n## {{page.title}}\n\n```\ncd —— 进入目录\n\nsudo —— 获取临时root权限\n\nfind ~iname xxx  —— 查找文件夹\n\nsudo shutdown -h now | sudo halt —— 关机\n\nsudo reboot | sudo shutdown -r now —— 重启\n\npasswd  —— 修改用户密码\n\nhistory —— 最近执行的命令以及编号\n\nenv —— 显示当前所有设置过的环境变量\n\nwho —— 当前登陆的所有用户\n\nwhoami —— 当前正在操作的用户名\n\n```\n\n### 登录远程机器：\n\n```\nssh xxx@ip -p 端口\n\n```\n\n### 操作文件\n\n```\nmkdir 文件名 —— 建立新目录\n\nrm -rf —— 删除文件夹\n\nrm —— 删除文件\n\npwd —— 显示当前文件夹路径\n\n```\n\n### vim命令：\n\n```\ni —— 插入模式\n\nesc —— 退出\n\n:wq —— 保存并退出\n\n:q! —— 不保存退出\n\nu —— 撤销上一次操作\n\nctl+r 和u相反\n\n```\n\n### 一些快捷键\n\n``` html\ncommand + t —— 在终端新打开一个终端\n\ncommand + c —— 复制\n\ncommand + v —— 粘贴\n\ncommand + z —— 撤销\n\ncommand + 左（右） —— 移到行头（尾）\n\ncommand + shift + 左（右） —— 移到行头（尾）并选中\n\ncommand + r —— 刷新网页\n\nfn + 上（下） —— pageup(pagedown)\n\nfn + delete —— 向后删除\n\n```\n\n### 解压.gz文件\n\n``` shell\ngunzip filename.gz\n\ngunzip -g filename.gz\n\n```\n\nor\n\n### 将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\n\n``` shell\n[root@linux ~]# cd /usr/local/src\n\n[root@linux src]# tar -zxvf /tmp/etc.tar.gz\n\n```\n\n\n\n\n\n\n","slug":"mac-linux","published":1,"updated":"2016-12-30T05:30:51.000Z","_id":"cixbbxw3r000h81qt2v5rossw","comments":1,"photos":[],"link":"","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd —— 进入目录</div><div class=\"line\"></div><div class=\"line\">sudo —— 获取临时root权限</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">find</span> ~iname xxx  —— 查找文件夹</div><div class=\"line\"></div><div class=\"line\">sudo <span class=\"built_in\">shutdown</span> -h now | sudo halt —— 关机</div><div class=\"line\"></div><div class=\"line\">sudo reboot | sudo <span class=\"built_in\">shutdown</span> -r now —— 重启</div><div class=\"line\"></div><div class=\"line\">passwd  —— 修改用户密码</div><div class=\"line\"></div><div class=\"line\">history —— 最近执行的命令以及编号</div><div class=\"line\"></div><div class=\"line\">env —— 显示当前所有设置过的环境变量</div><div class=\"line\"></div><div class=\"line\">who —— 当前登陆的所有用户</div><div class=\"line\"></div><div class=\"line\">whoami —— 当前正在操作的用户名</div></pre></td></tr></table></figure>\n<h3 id=\"登录远程机器：\"><a href=\"#登录远程机器：\" class=\"headerlink\" title=\"登录远程机器：\"></a>登录远程机器：</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">ssh</span> xxx<span class=\"variable\">@ip</span> -p 端口</div></pre></td></tr></table></figure>\n<h3 id=\"操作文件\"><a href=\"#操作文件\" class=\"headerlink\" title=\"操作文件\"></a>操作文件</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span> 文件名 —— 建立新目录</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> -rf —— 删除文件夹</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> —— 删除文件</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">pwd</span> —— 显示当前文件夹路径</div></pre></td></tr></table></figure>\n<h3 id=\"vim命令：\"><a href=\"#vim命令：\" class=\"headerlink\" title=\"vim命令：\"></a>vim命令：</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">i</span> —— 插入模式</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">esc</span> —— 退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:wq</span> —— 保存并退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:q</span>! —— 不保存退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">u</span> —— 撤销上一次操作</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">ctl</span>+<span class=\"selector-tag\">r</span> 和<span class=\"selector-tag\">u</span>相反</div></pre></td></tr></table></figure>\n<h3 id=\"一些快捷键\"><a href=\"#一些快捷键\" class=\"headerlink\" title=\"一些快捷键\"></a>一些快捷键</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">command + t —— 在终端新打开一个终端</div><div class=\"line\"></div><div class=\"line\">command + c —— 复制</div><div class=\"line\"></div><div class=\"line\">command + v —— 粘贴</div><div class=\"line\"></div><div class=\"line\">command + z —— 撤销</div><div class=\"line\"></div><div class=\"line\">command + 左（右） —— 移到行头（尾）</div><div class=\"line\"></div><div class=\"line\">command + shift + 左（右） —— 移到行头（尾）并选中</div><div class=\"line\"></div><div class=\"line\">command + r —— 刷新网页</div><div class=\"line\"></div><div class=\"line\">fn + 上（下） —— pageup(pagedown)</div><div class=\"line\"></div><div class=\"line\">fn + delete —— 向后删除</div></pre></td></tr></table></figure>\n<h3 id=\"解压-gz文件\"><a href=\"#解压-gz文件\" class=\"headerlink\" title=\"解压.gz文件\"></a>解压.gz文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gunzip filename.gz</div><div class=\"line\"></div><div class=\"line\">gunzip -g filename.gz</div></pre></td></tr></table></figure>\n<p>or</p>\n<h3 id=\"将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\"><a href=\"#将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\" class=\"headerlink\" title=\"将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\"></a>将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linux ~]# cd /usr/local/src</div><div class=\"line\"></div><div class=\"line\">[root@linux src]# tar -zxvf /tmp/etc.tar.gz</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd —— 进入目录</div><div class=\"line\"></div><div class=\"line\">sudo —— 获取临时root权限</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">find</span> ~iname xxx  —— 查找文件夹</div><div class=\"line\"></div><div class=\"line\">sudo <span class=\"built_in\">shutdown</span> -h now | sudo halt —— 关机</div><div class=\"line\"></div><div class=\"line\">sudo reboot | sudo <span class=\"built_in\">shutdown</span> -r now —— 重启</div><div class=\"line\"></div><div class=\"line\">passwd  —— 修改用户密码</div><div class=\"line\"></div><div class=\"line\">history —— 最近执行的命令以及编号</div><div class=\"line\"></div><div class=\"line\">env —— 显示当前所有设置过的环境变量</div><div class=\"line\"></div><div class=\"line\">who —— 当前登陆的所有用户</div><div class=\"line\"></div><div class=\"line\">whoami —— 当前正在操作的用户名</div></pre></td></tr></table></figure>\n<h3 id=\"登录远程机器：\"><a href=\"#登录远程机器：\" class=\"headerlink\" title=\"登录远程机器：\"></a>登录远程机器：</h3><figure class=\"highlight nginx\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"attribute\">ssh</span> xxx<span class=\"variable\">@ip</span> -p 端口</div></pre></td></tr></table></figure>\n<h3 id=\"操作文件\"><a href=\"#操作文件\" class=\"headerlink\" title=\"操作文件\"></a>操作文件</h3><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">mkdir</span> 文件名 —— 建立新目录</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> -rf —— 删除文件夹</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">rm</span> —— 删除文件</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">pwd</span> —— 显示当前文件夹路径</div></pre></td></tr></table></figure>\n<h3 id=\"vim命令：\"><a href=\"#vim命令：\" class=\"headerlink\" title=\"vim命令：\"></a>vim命令：</h3><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">i</span> —— 插入模式</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">esc</span> —— 退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:wq</span> —— 保存并退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-pseudo\">:q</span>! —— 不保存退出</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">u</span> —— 撤销上一次操作</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">ctl</span>+<span class=\"selector-tag\">r</span> 和<span class=\"selector-tag\">u</span>相反</div></pre></td></tr></table></figure>\n<h3 id=\"一些快捷键\"><a href=\"#一些快捷键\" class=\"headerlink\" title=\"一些快捷键\"></a>一些快捷键</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">command + t —— 在终端新打开一个终端</div><div class=\"line\"></div><div class=\"line\">command + c —— 复制</div><div class=\"line\"></div><div class=\"line\">command + v —— 粘贴</div><div class=\"line\"></div><div class=\"line\">command + z —— 撤销</div><div class=\"line\"></div><div class=\"line\">command + 左（右） —— 移到行头（尾）</div><div class=\"line\"></div><div class=\"line\">command + shift + 左（右） —— 移到行头（尾）并选中</div><div class=\"line\"></div><div class=\"line\">command + r —— 刷新网页</div><div class=\"line\"></div><div class=\"line\">fn + 上（下） —— pageup(pagedown)</div><div class=\"line\"></div><div class=\"line\">fn + delete —— 向后删除</div></pre></td></tr></table></figure>\n<h3 id=\"解压-gz文件\"><a href=\"#解压-gz文件\" class=\"headerlink\" title=\"解压.gz文件\"></a>解压.gz文件</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">gunzip filename.gz</div><div class=\"line\"></div><div class=\"line\">gunzip -g filename.gz</div></pre></td></tr></table></figure>\n<p>or</p>\n<h3 id=\"将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\"><a href=\"#将-tmp-etc-tar-gz-文件解压缩在-usr-local-src-底下\" class=\"headerlink\" title=\"将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下\"></a>将 /tmp/etc.tar.gz 文件解压缩在 /usr/local/src 底下</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[root@linux ~]# cd /usr/local/src</div><div class=\"line\"></div><div class=\"line\">[root@linux src]# tar -zxvf /tmp/etc.tar.gz</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"常用LINUX命令","date":"2016-12-29T16:00:00.000Z","_content":"Linux 是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux也是自由软件和开放源代码软件发展中最著名的例子。\n作为一个前端或许很少用到linux，但是作为一个有理想、有道德、有激情的前端，linux是必须要了解的一项技能。尤其是立志成为全端（什么都会一点，什么都不精通）的前端工程师，更是需要知道了。\n\n下面记录一下linux服务器上经常会用到的基本操作，便于以后回来查阅。\n\n``` html\n# 超级用户\n\n$ 普通用户\n\n命令 [选项] [参数]\n```\n\n\n### 系统\n\n``` shell\n# uname -a               # 查看内核/操作系统/CPU信息\n# head -n 1 /etc/issue   # 查看操作系统版本\n# cat /proc/cpuinfo      # 查看CPU信息\n# hostname               # 查看计算机名\n# lspci -tv              # 列出所有PCI设备\n# lsusb -tv              # 列出所有USB设备\n# lsmod                  # 列出加载的内核模块\n# env                    # 查看环境变量\n```\n\n### 资源\n\n``` shell\n# free -m                # 查看内存使用量和交换区使用量\n# df -h                  # 查看各分区使用情况\n# du -sh <目录名>        # 查看指定目录的大小\n# grep MemTotal /proc/meminfo   # 查看内存总量\n# grep MemFree /proc/meminfo    # 查看空闲内存量\n# uptime                 # 查看系统运行时间、用户数、负载\n# cat /proc/loadavg      # 查看系统负载\n```\n\n### 磁盘和分区\n\n``` shell\n# mount | column -t      # 查看挂接的分区状态\n# fdisk -l               # 查看所有分区\n# swapon -s              # 查看所有交换分区\n# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n```\n\n### 网络\n\n``` shell\n# ifconfig               # 查看所有网络接口的属性\n# iptables -L            # 查看防火墙设置\n# route -n               # 查看路由表\n# netstat -lntp          # 查看所有监听端口\n# netstat -antp          # 查看所有已经建立的连接\n# netstat -s             # 查看网络统计信息\n```\n\n### 进程\n\n``` shell\n# ps -ef                 # 查看所有进程\n# top                    # 实时显示进程状态\n```\n\n### 用户\n\n``` shell\n# w                      # 查看活动用户\n# id <用户名>            # 查看指定用户信息\n# last                   # 查看用户登录日志\n# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n# cut -d: -f1 /etc/group    # 查看系统所有组\n# crontab -l             # 查看当前用户的计划任务\n```\n\n\n### 登录\n\n```\nw 查询当前所有的登录用户\n\nwho 查询当前所有的登录用户\n\nlast 查询所有的登录信息\n\n/val/log —— 系统日志信息\n```\n\n### 服务\n\n``` shell\n# chkconfig --list       # 列出所有系统服务\n# chkconfig --list | grep on    # 列出所有启动的系统服务\n```\n\n### 程序\n\n``` shell\n# rpm -qa                # 查看所有安装的软件包\n```\n\n### 查看CPU信息（型号） \n\n``` shell\n# cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c \n\n# cat /proc/cpuinfo | grep physical | uniq -c \n \n# getconf LONG_BIT \n\n# cat /proc/cpuinfo | grep flags | grep ' lm ' | wc -l \n\n# dmidecode | grep 'Processor Information' \n```\n\n### head tail cat awk grep vim \n\n```\ndmi 查看cpu信息\n\nchmod +x filename.sh\n\nchown —— 改变文件所属\n\n/etc/rc.local —— 开机启动配置\n\ncron —— 定时器相关\n```\n\n### 查看内存信息 \n\n``` shell\n# cat /proc/meminfo \n\n# uname -a \n\n# cat /etc/issue | grep Linux \n```\n\n### 查看机器型号 \n\n``` shell\n# dmidecode | grep \"Product Name\"  \n```\n\n查看网卡信息 \n\n``` shell\n# dmesg | grep -i eth\n```\n\n### 显示文件列表\n\n``` shell\nls -a —— 显示隐藏文件  \n\nls -i —— 显示详细信息\n\nls -l —— 显示扩展名以及权限\n\nls -h —— 显示格式化列表\n\n对于文件前面的这一串字符串的意思：-rw-r--r--\n\n-表示文件类型\n\nrw-表示所有者u     \n\nr--\n\ng所属组\n\nr--\n\no其他人\n\nr读 w写 x执行\n```\n\n### linux查找功能\n\n``` shell\n# locate locate // 更新locate数据库 updatedb\n\n# find 范围 -name 文件名\n\n# find 范围 -iname 文件名（不区分大小写）\n\n# find 范围 -mtime 文件名 +10 （10天内修改的文件）a访问\n\n# find 范围 -size -15k (小于25k的文件) M兆\n\n# find 范围 -size +1k -a -size -50k (大于1k小于50k) -o或\n\n```\n\n\n### 帮助命令\n\n```\nmain 查看帮助文档\n\nhelp 获取内部命令\n```\n\n\n### 压缩与解压缩命令\n\n#### .zip .gz .bz2 \n\n``` html\n.zip在window和linux通用  压缩文件命令为：zip 压缩文件名 源文件名 ； \n压缩文件夹命令为：zip -r 压缩文件名 源目录 ;解压命令将zip改为unzip即可\n```\n\n#### .tar.gz .tar.bz2 打包命令tar\n\n``` html\ntar -cvf 打包文件名 源文件 \n\n-c：打包 \n\n-v：显示过程 \n\n-f：指定打包后的文件名 \n\n-x：解打包 \n\n-z：压缩包名为.tar.gz \n\n-C：指定解压目录\n\n// 举例\n\ntar -zcvf packfiles.tar.gz packfiles\n\ntar -zxvf packfiles.tar.gz\n\ntar -zxvf packfiles.tar.gz -C ./dirs\n```\n\n\n-----------------------------------------------\n\n### 下面是shell相关部分\n\nshell是什么？\n\nshell是一个命令行解释器\n\n用户 ——》shell ——》内核 \n\n内核 ——》sell ——》用户\n\n\n#### 创建一个可执行文件 hello.sh\n\n``` shell\n#!/bin/bash\n\necho \"hello zsr !!!\"\n```\n\n#### 执行可执行文件\n\n``` shell\nchmod 755 hello.sh —— 给予文件可执行权限\n\n./hello.sh —— 执行可执行文件\n```\n\n\n\n``` html\necho $SHELL 查看当前的shell环境变量\n\n/etc/shells 查看当前shell支持的版本\n```\n\n### echo命令\n\n``` html\necho 选项 输出内容\n\n选项：-e 支持反斜杠控制的字符转换\n```\n\n### 创建可执行文件 hello.sh\n\n``` html\n#!/bin/bash\n#the first program\n\necho -e \"\\e[1;34m i live yellow \\e[0m\"\n```\n\n#### 执行可执行文件\n\n两个方法：\n\n#### 赋予执行权限再执行\n\n```\nchmod 755 hello.sh\n\n./hello.sh\n```\n\n#### 直接用bash执行\n\n```\nbash hello.sh\n```\n\n\n### bash的基本功能\n\n#### alias 设置命令别名\n\n```\nalias 查看已有的别名\n\nalias ll='ls -ilpa' 重命名显示文件详细信息的命令\n\nunalias 删除别名\n\n命令的生效顺序：绝对路径启动 》 别名 》 bash内部命令 》 $PATH环境变量定义的目录查找到的第一个命令\n```\n\n#### 常用快捷键\n\n```\nctl+c 强制终止当前命令\n\nctl+l 清屏\n\nctl+a 光标移到行首\n\nctl+e 光标移到行尾\n\nctl+u 从光标删除到行首\n\nctl+z 把命令放入后台\n\nctl+r 在历史命令中搜索\n```\n\n#### 历史命令\n\n```\nhistory 显示所有的历史命令\n\n保存位置在 ~/.bash_history文件里面\n\nhistory -c 清除历史命令\n```\n\n\n### 重定向\n\ndev目录 —— linux保存特殊文件的目录\n\n#### 输出重定向\n\n```\n命令 > 文件 —— 标准输出重定向\n\n命令 >> 文件 —— 追加重定向\n\n命令 2> 文件 —— 标准错误输出\n\n命令 2>> 文件 —— 追加标准错误输出\n\n命令 >> 文件 2>&1 —— 追加错误或者正确的命令\n\n命令 &> /dev/null —— 放弃查看命令执行结果\n\n命令 >> success.log 2 >> error.log —— 分别保存这两个正确和错误的信息\n```\n\n#### 输入重定向\n\n```\nwc 选项 文件名 —— 统计（ctl+d结束）\n\n- c 统计字节数。\n\n- l 统计行数。\n\n- w 统计字数。\n```\n\n\n#### 多命令顺序执行\n\n```\n命令1; 命令2 —— 多个命令顺序执行，命令之间没有任何逻辑关系\n\n命令1 && 命令2 —— 逻辑与关系\n\n命令1 || 命令2 —— 逻辑或关系 \n```\n\n### 管道符\n\n```\n命令1 | 命令2 —— 命令1的正确输出结果作为命令2的操作对象\n\neg:\n\nnetstat -an | grep \"ESTABLISHED\"\n```\n\n### 通配符\n\n```\n? —— 匹配任意字符\n\n* —— 匹配0个或多个任意字符\n\n[] —— 匹配中括号中任意一个字符\n\n\"\" —— 可以调用变量的值\n\n'' —— 所有特殊符号如 $ 都没有特殊含义\n\n` ` —— 反引号可以执行命令\n\n$(命令) —— 执行命令\n```\n\n\n","source":"_posts/linux.md","raw":"---\nlayout: default\ntitle: 常用LINUX命令\ndate: 2016/12/30\ncategory: 服务器\ntag: linux\n---\nLinux 是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux也是自由软件和开放源代码软件发展中最著名的例子。\n作为一个前端或许很少用到linux，但是作为一个有理想、有道德、有激情的前端，linux是必须要了解的一项技能。尤其是立志成为全端（什么都会一点，什么都不精通）的前端工程师，更是需要知道了。\n\n下面记录一下linux服务器上经常会用到的基本操作，便于以后回来查阅。\n\n``` html\n# 超级用户\n\n$ 普通用户\n\n命令 [选项] [参数]\n```\n\n\n### 系统\n\n``` shell\n# uname -a               # 查看内核/操作系统/CPU信息\n# head -n 1 /etc/issue   # 查看操作系统版本\n# cat /proc/cpuinfo      # 查看CPU信息\n# hostname               # 查看计算机名\n# lspci -tv              # 列出所有PCI设备\n# lsusb -tv              # 列出所有USB设备\n# lsmod                  # 列出加载的内核模块\n# env                    # 查看环境变量\n```\n\n### 资源\n\n``` shell\n# free -m                # 查看内存使用量和交换区使用量\n# df -h                  # 查看各分区使用情况\n# du -sh <目录名>        # 查看指定目录的大小\n# grep MemTotal /proc/meminfo   # 查看内存总量\n# grep MemFree /proc/meminfo    # 查看空闲内存量\n# uptime                 # 查看系统运行时间、用户数、负载\n# cat /proc/loadavg      # 查看系统负载\n```\n\n### 磁盘和分区\n\n``` shell\n# mount | column -t      # 查看挂接的分区状态\n# fdisk -l               # 查看所有分区\n# swapon -s              # 查看所有交换分区\n# hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)\n# dmesg | grep IDE       # 查看启动时IDE设备检测状况\n```\n\n### 网络\n\n``` shell\n# ifconfig               # 查看所有网络接口的属性\n# iptables -L            # 查看防火墙设置\n# route -n               # 查看路由表\n# netstat -lntp          # 查看所有监听端口\n# netstat -antp          # 查看所有已经建立的连接\n# netstat -s             # 查看网络统计信息\n```\n\n### 进程\n\n``` shell\n# ps -ef                 # 查看所有进程\n# top                    # 实时显示进程状态\n```\n\n### 用户\n\n``` shell\n# w                      # 查看活动用户\n# id <用户名>            # 查看指定用户信息\n# last                   # 查看用户登录日志\n# cut -d: -f1 /etc/passwd   # 查看系统所有用户\n# cut -d: -f1 /etc/group    # 查看系统所有组\n# crontab -l             # 查看当前用户的计划任务\n```\n\n\n### 登录\n\n```\nw 查询当前所有的登录用户\n\nwho 查询当前所有的登录用户\n\nlast 查询所有的登录信息\n\n/val/log —— 系统日志信息\n```\n\n### 服务\n\n``` shell\n# chkconfig --list       # 列出所有系统服务\n# chkconfig --list | grep on    # 列出所有启动的系统服务\n```\n\n### 程序\n\n``` shell\n# rpm -qa                # 查看所有安装的软件包\n```\n\n### 查看CPU信息（型号） \n\n``` shell\n# cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c \n\n# cat /proc/cpuinfo | grep physical | uniq -c \n \n# getconf LONG_BIT \n\n# cat /proc/cpuinfo | grep flags | grep ' lm ' | wc -l \n\n# dmidecode | grep 'Processor Information' \n```\n\n### head tail cat awk grep vim \n\n```\ndmi 查看cpu信息\n\nchmod +x filename.sh\n\nchown —— 改变文件所属\n\n/etc/rc.local —— 开机启动配置\n\ncron —— 定时器相关\n```\n\n### 查看内存信息 \n\n``` shell\n# cat /proc/meminfo \n\n# uname -a \n\n# cat /etc/issue | grep Linux \n```\n\n### 查看机器型号 \n\n``` shell\n# dmidecode | grep \"Product Name\"  \n```\n\n查看网卡信息 \n\n``` shell\n# dmesg | grep -i eth\n```\n\n### 显示文件列表\n\n``` shell\nls -a —— 显示隐藏文件  \n\nls -i —— 显示详细信息\n\nls -l —— 显示扩展名以及权限\n\nls -h —— 显示格式化列表\n\n对于文件前面的这一串字符串的意思：-rw-r--r--\n\n-表示文件类型\n\nrw-表示所有者u     \n\nr--\n\ng所属组\n\nr--\n\no其他人\n\nr读 w写 x执行\n```\n\n### linux查找功能\n\n``` shell\n# locate locate // 更新locate数据库 updatedb\n\n# find 范围 -name 文件名\n\n# find 范围 -iname 文件名（不区分大小写）\n\n# find 范围 -mtime 文件名 +10 （10天内修改的文件）a访问\n\n# find 范围 -size -15k (小于25k的文件) M兆\n\n# find 范围 -size +1k -a -size -50k (大于1k小于50k) -o或\n\n```\n\n\n### 帮助命令\n\n```\nmain 查看帮助文档\n\nhelp 获取内部命令\n```\n\n\n### 压缩与解压缩命令\n\n#### .zip .gz .bz2 \n\n``` html\n.zip在window和linux通用  压缩文件命令为：zip 压缩文件名 源文件名 ； \n压缩文件夹命令为：zip -r 压缩文件名 源目录 ;解压命令将zip改为unzip即可\n```\n\n#### .tar.gz .tar.bz2 打包命令tar\n\n``` html\ntar -cvf 打包文件名 源文件 \n\n-c：打包 \n\n-v：显示过程 \n\n-f：指定打包后的文件名 \n\n-x：解打包 \n\n-z：压缩包名为.tar.gz \n\n-C：指定解压目录\n\n// 举例\n\ntar -zcvf packfiles.tar.gz packfiles\n\ntar -zxvf packfiles.tar.gz\n\ntar -zxvf packfiles.tar.gz -C ./dirs\n```\n\n\n-----------------------------------------------\n\n### 下面是shell相关部分\n\nshell是什么？\n\nshell是一个命令行解释器\n\n用户 ——》shell ——》内核 \n\n内核 ——》sell ——》用户\n\n\n#### 创建一个可执行文件 hello.sh\n\n``` shell\n#!/bin/bash\n\necho \"hello zsr !!!\"\n```\n\n#### 执行可执行文件\n\n``` shell\nchmod 755 hello.sh —— 给予文件可执行权限\n\n./hello.sh —— 执行可执行文件\n```\n\n\n\n``` html\necho $SHELL 查看当前的shell环境变量\n\n/etc/shells 查看当前shell支持的版本\n```\n\n### echo命令\n\n``` html\necho 选项 输出内容\n\n选项：-e 支持反斜杠控制的字符转换\n```\n\n### 创建可执行文件 hello.sh\n\n``` html\n#!/bin/bash\n#the first program\n\necho -e \"\\e[1;34m i live yellow \\e[0m\"\n```\n\n#### 执行可执行文件\n\n两个方法：\n\n#### 赋予执行权限再执行\n\n```\nchmod 755 hello.sh\n\n./hello.sh\n```\n\n#### 直接用bash执行\n\n```\nbash hello.sh\n```\n\n\n### bash的基本功能\n\n#### alias 设置命令别名\n\n```\nalias 查看已有的别名\n\nalias ll='ls -ilpa' 重命名显示文件详细信息的命令\n\nunalias 删除别名\n\n命令的生效顺序：绝对路径启动 》 别名 》 bash内部命令 》 $PATH环境变量定义的目录查找到的第一个命令\n```\n\n#### 常用快捷键\n\n```\nctl+c 强制终止当前命令\n\nctl+l 清屏\n\nctl+a 光标移到行首\n\nctl+e 光标移到行尾\n\nctl+u 从光标删除到行首\n\nctl+z 把命令放入后台\n\nctl+r 在历史命令中搜索\n```\n\n#### 历史命令\n\n```\nhistory 显示所有的历史命令\n\n保存位置在 ~/.bash_history文件里面\n\nhistory -c 清除历史命令\n```\n\n\n### 重定向\n\ndev目录 —— linux保存特殊文件的目录\n\n#### 输出重定向\n\n```\n命令 > 文件 —— 标准输出重定向\n\n命令 >> 文件 —— 追加重定向\n\n命令 2> 文件 —— 标准错误输出\n\n命令 2>> 文件 —— 追加标准错误输出\n\n命令 >> 文件 2>&1 —— 追加错误或者正确的命令\n\n命令 &> /dev/null —— 放弃查看命令执行结果\n\n命令 >> success.log 2 >> error.log —— 分别保存这两个正确和错误的信息\n```\n\n#### 输入重定向\n\n```\nwc 选项 文件名 —— 统计（ctl+d结束）\n\n- c 统计字节数。\n\n- l 统计行数。\n\n- w 统计字数。\n```\n\n\n#### 多命令顺序执行\n\n```\n命令1; 命令2 —— 多个命令顺序执行，命令之间没有任何逻辑关系\n\n命令1 && 命令2 —— 逻辑与关系\n\n命令1 || 命令2 —— 逻辑或关系 \n```\n\n### 管道符\n\n```\n命令1 | 命令2 —— 命令1的正确输出结果作为命令2的操作对象\n\neg:\n\nnetstat -an | grep \"ESTABLISHED\"\n```\n\n### 通配符\n\n```\n? —— 匹配任意字符\n\n* —— 匹配0个或多个任意字符\n\n[] —— 匹配中括号中任意一个字符\n\n\"\" —— 可以调用变量的值\n\n'' —— 所有特殊符号如 $ 都没有特殊含义\n\n` ` —— 反引号可以执行命令\n\n$(命令) —— 执行命令\n```\n\n\n","slug":"linux","published":1,"updated":"2016-12-30T05:30:22.000Z","_id":"cixbbxw3t000j81qtx0ru3qnz","comments":1,"photos":[],"link":"","content":"<p>Linux 是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux也是自由软件和开放源代码软件发展中最著名的例子。<br>作为一个前端或许很少用到linux，但是作为一个有理想、有道德、有激情的前端，linux是必须要了解的一项技能。尤其是立志成为全端（什么都会一点，什么都不精通）的前端工程师，更是需要知道了。</p>\n<p>下面记录一下linux服务器上经常会用到的基本操作，便于以后回来查阅。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 超级用户</div><div class=\"line\"></div><div class=\"line\">$ 普通用户</div><div class=\"line\"></div><div class=\"line\">命令 [选项] [参数]</div></pre></td></tr></table></figure>\n<h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># uname -a               # 查看内核/操作系统/CPU信息</div><div class=\"line\"># head -n 1 /etc/issue   # 查看操作系统版本</div><div class=\"line\"># cat /proc/cpuinfo      # 查看CPU信息</div><div class=\"line\"># hostname               # 查看计算机名</div><div class=\"line\"># lspci -tv              # 列出所有PCI设备</div><div class=\"line\"># lsusb -tv              # 列出所有USB设备</div><div class=\"line\"># lsmod                  # 列出加载的内核模块</div><div class=\"line\"># env                    # 查看环境变量</div></pre></td></tr></table></figure>\n<h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># free -m                # 查看内存使用量和交换区使用量</div><div class=\"line\"># df -h                  # 查看各分区使用情况</div><div class=\"line\"># du -sh &lt;目录名&gt;        # 查看指定目录的大小</div><div class=\"line\"># grep MemTotal /proc/meminfo   # 查看内存总量</div><div class=\"line\"># grep MemFree /proc/meminfo    # 查看空闲内存量</div><div class=\"line\"># uptime                 # 查看系统运行时间、用户数、负载</div><div class=\"line\"># cat /proc/loadavg      # 查看系统负载</div></pre></td></tr></table></figure>\n<h3 id=\"磁盘和分区\"><a href=\"#磁盘和分区\" class=\"headerlink\" title=\"磁盘和分区\"></a>磁盘和分区</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># mount | column -t      # 查看挂接的分区状态</div><div class=\"line\"># fdisk -l               # 查看所有分区</div><div class=\"line\"># swapon -s              # 查看所有交换分区</div><div class=\"line\"># hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)</div><div class=\"line\"># dmesg | grep IDE       # 查看启动时IDE设备检测状况</div></pre></td></tr></table></figure>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ifconfig               # 查看所有网络接口的属性</div><div class=\"line\"># iptables -L            # 查看防火墙设置</div><div class=\"line\"># route -n               # 查看路由表</div><div class=\"line\"># netstat -lntp          # 查看所有监听端口</div><div class=\"line\"># netstat -antp          # 查看所有已经建立的连接</div><div class=\"line\"># netstat -s             # 查看网络统计信息</div></pre></td></tr></table></figure>\n<h3 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ps -ef                 # 查看所有进程</div><div class=\"line\"># top                    # 实时显示进程状态</div></pre></td></tr></table></figure>\n<h3 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># w                      # 查看活动用户</div><div class=\"line\"># id &lt;用户名&gt;            # 查看指定用户信息</div><div class=\"line\"># last                   # 查看用户登录日志</div><div class=\"line\"># cut -d: -f1 /etc/passwd   # 查看系统所有用户</div><div class=\"line\"># cut -d: -f1 /etc/group    # 查看系统所有组</div><div class=\"line\"># crontab -l             # 查看当前用户的计划任务</div></pre></td></tr></table></figure>\n<h3 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">w 查询当前所有的登录用户</div><div class=\"line\"></div><div class=\"line\">who 查询当前所有的登录用户</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">last</span> 查询所有的登录信息</div><div class=\"line\"></div><div class=\"line\">/val/<span class=\"built_in\">log</span> —— 系统日志信息</div></pre></td></tr></table></figure>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chkconfig --list       # 列出所有系统服务</div><div class=\"line\"># chkconfig --list | grep on    # 列出所有启动的系统服务</div></pre></td></tr></table></figure>\n<h3 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># rpm -qa                # 查看所有安装的软件包</div></pre></td></tr></table></figure>\n<h3 id=\"查看CPU信息（型号）\"><a href=\"#查看CPU信息（型号）\" class=\"headerlink\" title=\"查看CPU信息（型号）\"></a>查看CPU信息（型号）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c </div><div class=\"line\"></div><div class=\"line\"># cat /proc/cpuinfo | grep physical | uniq -c </div><div class=\"line\"> </div><div class=\"line\"># getconf LONG_BIT </div><div class=\"line\"></div><div class=\"line\"># cat /proc/cpuinfo | grep flags | grep &apos; lm &apos; | wc -l </div><div class=\"line\"></div><div class=\"line\"># dmidecode | grep &apos;Processor Information&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"head-tail-cat-awk-grep-vim\"><a href=\"#head-tail-cat-awk-grep-vim\" class=\"headerlink\" title=\"head tail cat awk grep vim\"></a>head tail cat awk grep vim</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">dmi 查看cpu信息</div><div class=\"line\"></div><div class=\"line\">chmod +x filename<span class=\"selector-class\">.sh</span></div><div class=\"line\"></div><div class=\"line\">chown —— 改变文件所属</div><div class=\"line\"></div><div class=\"line\">/etc/rc<span class=\"selector-class\">.local</span> —— 开机启动配置</div><div class=\"line\"></div><div class=\"line\">cron —— 定时器相关</div></pre></td></tr></table></figure>\n<h3 id=\"查看内存信息\"><a href=\"#查看内存信息\" class=\"headerlink\" title=\"查看内存信息\"></a>查看内存信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># cat /proc/meminfo </div><div class=\"line\"></div><div class=\"line\"># uname -a </div><div class=\"line\"></div><div class=\"line\"># cat /etc/issue | grep Linux</div></pre></td></tr></table></figure>\n<h3 id=\"查看机器型号\"><a href=\"#查看机器型号\" class=\"headerlink\" title=\"查看机器型号\"></a>查看机器型号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># dmidecode | grep &quot;Product Name&quot;</div></pre></td></tr></table></figure>\n<p>查看网卡信息 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># dmesg | grep -i eth</div></pre></td></tr></table></figure>\n<h3 id=\"显示文件列表\"><a href=\"#显示文件列表\" class=\"headerlink\" title=\"显示文件列表\"></a>显示文件列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls -a —— 显示隐藏文件  </div><div class=\"line\"></div><div class=\"line\">ls -i —— 显示详细信息</div><div class=\"line\"></div><div class=\"line\">ls -l —— 显示扩展名以及权限</div><div class=\"line\"></div><div class=\"line\">ls -h —— 显示格式化列表</div><div class=\"line\"></div><div class=\"line\">对于文件前面的这一串字符串的意思：-rw-r--r--</div><div class=\"line\"></div><div class=\"line\">-表示文件类型</div><div class=\"line\"></div><div class=\"line\">rw-表示所有者u     </div><div class=\"line\"></div><div class=\"line\">r--</div><div class=\"line\"></div><div class=\"line\">g所属组</div><div class=\"line\"></div><div class=\"line\">r--</div><div class=\"line\"></div><div class=\"line\">o其他人</div><div class=\"line\"></div><div class=\"line\">r读 w写 x执行</div></pre></td></tr></table></figure>\n<h3 id=\"linux查找功能\"><a href=\"#linux查找功能\" class=\"headerlink\" title=\"linux查找功能\"></a>linux查找功能</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"># locate locate // 更新locate数据库 updatedb</div><div class=\"line\"></div><div class=\"line\"># find 范围 -name 文件名</div><div class=\"line\"></div><div class=\"line\"># find 范围 -iname 文件名（不区分大小写）</div><div class=\"line\"></div><div class=\"line\"># find 范围 -mtime 文件名 +10 （10天内修改的文件）a访问</div><div class=\"line\"></div><div class=\"line\"># find 范围 -size -15k (小于25k的文件) M兆</div><div class=\"line\"></div><div class=\"line\"># find 范围 -size +1k -a -size -50k (大于1k小于50k) -o或</div></pre></td></tr></table></figure>\n<h3 id=\"帮助命令\"><a href=\"#帮助命令\" class=\"headerlink\" title=\"帮助命令\"></a>帮助命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">main 查看帮助文档</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">help</span> 获取内部命令</div></pre></td></tr></table></figure>\n<h3 id=\"压缩与解压缩命令\"><a href=\"#压缩与解压缩命令\" class=\"headerlink\" title=\"压缩与解压缩命令\"></a>压缩与解压缩命令</h3><h4 id=\"zip-gz-bz2\"><a href=\"#zip-gz-bz2\" class=\"headerlink\" title=\".zip .gz .bz2\"></a>.zip .gz .bz2</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.zip在window和linux通用  压缩文件命令为：zip 压缩文件名 源文件名 ； </div><div class=\"line\">压缩文件夹命令为：zip -r 压缩文件名 源目录 ;解压命令将zip改为unzip即可</div></pre></td></tr></table></figure>\n<h4 id=\"tar-gz-tar-bz2-打包命令tar\"><a href=\"#tar-gz-tar-bz2-打包命令tar\" class=\"headerlink\" title=\".tar.gz .tar.bz2 打包命令tar\"></a>.tar.gz .tar.bz2 打包命令tar</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -cvf 打包文件名 源文件 </div><div class=\"line\"></div><div class=\"line\">-c：打包 </div><div class=\"line\"></div><div class=\"line\">-v：显示过程 </div><div class=\"line\"></div><div class=\"line\">-f：指定打包后的文件名 </div><div class=\"line\"></div><div class=\"line\">-x：解打包 </div><div class=\"line\"></div><div class=\"line\">-z：压缩包名为.tar.gz </div><div class=\"line\"></div><div class=\"line\">-C：指定解压目录</div><div class=\"line\"></div><div class=\"line\">// 举例</div><div class=\"line\"></div><div class=\"line\">tar -zcvf packfiles.tar.gz packfiles</div><div class=\"line\"></div><div class=\"line\">tar -zxvf packfiles.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar -zxvf packfiles.tar.gz -C ./dirs</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"下面是shell相关部分\"><a href=\"#下面是shell相关部分\" class=\"headerlink\" title=\"下面是shell相关部分\"></a>下面是shell相关部分</h3><p>shell是什么？</p>\n<p>shell是一个命令行解释器</p>\n<p>用户 ——》shell ——》内核 </p>\n<p>内核 ——》sell ——》用户</p>\n<h4 id=\"创建一个可执行文件-hello-sh\"><a href=\"#创建一个可执行文件-hello-sh\" class=\"headerlink\" title=\"创建一个可执行文件 hello.sh\"></a>创建一个可执行文件 hello.sh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">echo &quot;hello zsr !!!&quot;</div></pre></td></tr></table></figure>\n<h4 id=\"执行可执行文件\"><a href=\"#执行可执行文件\" class=\"headerlink\" title=\"执行可执行文件\"></a>执行可执行文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 755 hello.sh —— 给予文件可执行权限</div><div class=\"line\"></div><div class=\"line\">./hello.sh —— 执行可执行文件</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $SHELL 查看当前的shell环境变量</div><div class=\"line\"></div><div class=\"line\">/etc/shells 查看当前shell支持的版本</div></pre></td></tr></table></figure>\n<h3 id=\"echo命令\"><a href=\"#echo命令\" class=\"headerlink\" title=\"echo命令\"></a>echo命令</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo 选项 输出内容</div><div class=\"line\"></div><div class=\"line\">选项：-e 支持反斜杠控制的字符转换</div></pre></td></tr></table></figure>\n<h3 id=\"创建可执行文件-hello-sh\"><a href=\"#创建可执行文件-hello-sh\" class=\"headerlink\" title=\"创建可执行文件 hello.sh\"></a>创建可执行文件 hello.sh</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">#the first program</div><div class=\"line\"></div><div class=\"line\">echo -e \"\\e[1;34m i live yellow \\e[0m\"</div></pre></td></tr></table></figure>\n<h4 id=\"执行可执行文件-1\"><a href=\"#执行可执行文件-1\" class=\"headerlink\" title=\"执行可执行文件\"></a>执行可执行文件</h4><p>两个方法：</p>\n<h4 id=\"赋予执行权限再执行\"><a href=\"#赋予执行权限再执行\" class=\"headerlink\" title=\"赋予执行权限再执行\"></a>赋予执行权限再执行</h4><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 755 hello.<span class=\"keyword\">sh</span></div><div class=\"line\"></div><div class=\"line\">./hello.<span class=\"keyword\">sh</span></div></pre></td></tr></table></figure>\n<h4 id=\"直接用bash执行\"><a href=\"#直接用bash执行\" class=\"headerlink\" title=\"直接用bash执行\"></a>直接用bash执行</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">bash </span>hello.sh</div></pre></td></tr></table></figure>\n<h3 id=\"bash的基本功能\"><a href=\"#bash的基本功能\" class=\"headerlink\" title=\"bash的基本功能\"></a>bash的基本功能</h3><h4 id=\"alias-设置命令别名\"><a href=\"#alias-设置命令别名\" class=\"headerlink\" title=\"alias 设置命令别名\"></a>alias 设置命令别名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> 查看已有的别名</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -ilpa'</span> 重命名显示文件详细信息的命令</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">unalias</span> 删除别名</div><div class=\"line\"></div><div class=\"line\">命令的生效顺序：绝对路径启动 》 别名 》 bash内部命令 》 <span class=\"variable\">$PATH</span>环境变量定义的目录查找到的第一个命令</div></pre></td></tr></table></figure>\n<h4 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctl+c 强制终止当前命令</div><div class=\"line\"></div><div class=\"line\">ctl+l 清屏</div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"selector-tag\">a</span> 光标移到行首</div><div class=\"line\"></div><div class=\"line\">ctl+e 光标移到行尾</div><div class=\"line\"></div><div class=\"line\">ctl+u 从光标删除到行首</div><div class=\"line\"></div><div class=\"line\">ctl+z 把命令放入后台</div><div class=\"line\"></div><div class=\"line\">ctl+r 在历史命令中搜索</div></pre></td></tr></table></figure>\n<h4 id=\"历史命令\"><a href=\"#历史命令\" class=\"headerlink\" title=\"历史命令\"></a>历史命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">history</span> 显示所有的历史命令</div><div class=\"line\"></div><div class=\"line\">保存位置在 ~/.bash_history文件里面</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">history</span> -c 清除历史命令</div></pre></td></tr></table></figure>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>dev目录 —— linux保存特殊文件的目录</p>\n<h4 id=\"输出重定向\"><a href=\"#输出重定向\" class=\"headerlink\" title=\"输出重定向\"></a>输出重定向</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 &gt; 文件 —— 标准输出重定向</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>文件 —— 追加重定向</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"number\">2</span>&gt; 文件 —— 标准错误输出</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"number\">2</span><span class=\"meta\">&gt;&gt; </span>文件 —— 追加标准错误输出</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>文件 <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> —— 追加错误或者正确的命令</div><div class=\"line\"></div><div class=\"line\">命令 &amp;&gt; <span class=\"regexp\">/dev/null</span> —— 放弃查看命令执行结果</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>success.log <span class=\"number\">2</span> &gt;&gt; error.log —— 分别保存这两个正确和错误的信息</div></pre></td></tr></table></figure>\n<h4 id=\"输入重定向\"><a href=\"#输入重定向\" class=\"headerlink\" title=\"输入重定向\"></a>输入重定向</h4><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wc 选项 文件名 —— 统计（ctl+d结束）</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\"> c 统计字节数。</span></div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\"> l 统计行数。</span></div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\"> w 统计字数。</span></div></pre></td></tr></table></figure>\n<h4 id=\"多命令顺序执行\"><a href=\"#多命令顺序执行\" class=\"headerlink\" title=\"多命令顺序执行\"></a>多命令顺序执行</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令<span class=\"number\">1</span>; 命令<span class=\"number\">2</span> —— 多个命令顺序执行，命令之间没有任何逻辑关系</div><div class=\"line\"></div><div class=\"line\">命令<span class=\"number\">1</span> &amp;&amp; 命令<span class=\"number\">2</span> —— 逻辑与关系</div><div class=\"line\"></div><div class=\"line\">命令<span class=\"number\">1</span> || 命令<span class=\"number\">2</span> —— 逻辑或关系</div></pre></td></tr></table></figure>\n<h3 id=\"管道符\"><a href=\"#管道符\" class=\"headerlink\" title=\"管道符\"></a>管道符</h3><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令<span class=\"number\">1</span> <span class=\"string\">| 命令2 —— 命令1的正确输出结果作为命令2的操作对象</span></div><div class=\"line\"></div><div class=\"line\">eg:</div><div class=\"line\"></div><div class=\"line\">netstat -an <span class=\"string\">| grep \"</span>ESTABLISHED<span class=\"string\">\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">? —— 匹配任意字符</div><div class=\"line\"></div><div class=\"line\">* —— 匹配<span class=\"number\">0</span>个或多个任意字符</div><div class=\"line\"></div><div class=\"line\">[] —— 匹配中括号中任意一个字符</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"</span> —— 可以调用变量的值</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">''</span> —— 所有特殊符号如 $ 都没有特殊含义</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">` `</span> —— 反引号可以执行命令</div><div class=\"line\"></div><div class=\"line\">$(命令) —— 执行命令</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Linux 是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux也是自由软件和开放源代码软件发展中最著名的例子。<br>作为一个前端或许很少用到linux，但是作为一个有理想、有道德、有激情的前端，linux是必须要了解的一项技能。尤其是立志成为全端（什么都会一点，什么都不精通）的前端工程师，更是需要知道了。</p>\n<p>下面记录一下linux服务器上经常会用到的基本操作，便于以后回来查阅。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># 超级用户</div><div class=\"line\"></div><div class=\"line\">$ 普通用户</div><div class=\"line\"></div><div class=\"line\">命令 [选项] [参数]</div></pre></td></tr></table></figure>\n<h3 id=\"系统\"><a href=\"#系统\" class=\"headerlink\" title=\"系统\"></a>系统</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"># uname -a               # 查看内核/操作系统/CPU信息</div><div class=\"line\"># head -n 1 /etc/issue   # 查看操作系统版本</div><div class=\"line\"># cat /proc/cpuinfo      # 查看CPU信息</div><div class=\"line\"># hostname               # 查看计算机名</div><div class=\"line\"># lspci -tv              # 列出所有PCI设备</div><div class=\"line\"># lsusb -tv              # 列出所有USB设备</div><div class=\"line\"># lsmod                  # 列出加载的内核模块</div><div class=\"line\"># env                    # 查看环境变量</div></pre></td></tr></table></figure>\n<h3 id=\"资源\"><a href=\"#资源\" class=\"headerlink\" title=\"资源\"></a>资源</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"># free -m                # 查看内存使用量和交换区使用量</div><div class=\"line\"># df -h                  # 查看各分区使用情况</div><div class=\"line\"># du -sh &lt;目录名&gt;        # 查看指定目录的大小</div><div class=\"line\"># grep MemTotal /proc/meminfo   # 查看内存总量</div><div class=\"line\"># grep MemFree /proc/meminfo    # 查看空闲内存量</div><div class=\"line\"># uptime                 # 查看系统运行时间、用户数、负载</div><div class=\"line\"># cat /proc/loadavg      # 查看系统负载</div></pre></td></tr></table></figure>\n<h3 id=\"磁盘和分区\"><a href=\"#磁盘和分区\" class=\"headerlink\" title=\"磁盘和分区\"></a>磁盘和分区</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># mount | column -t      # 查看挂接的分区状态</div><div class=\"line\"># fdisk -l               # 查看所有分区</div><div class=\"line\"># swapon -s              # 查看所有交换分区</div><div class=\"line\"># hdparm -i /dev/hda     # 查看磁盘参数(仅适用于IDE设备)</div><div class=\"line\"># dmesg | grep IDE       # 查看启动时IDE设备检测状况</div></pre></td></tr></table></figure>\n<h3 id=\"网络\"><a href=\"#网络\" class=\"headerlink\" title=\"网络\"></a>网络</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ifconfig               # 查看所有网络接口的属性</div><div class=\"line\"># iptables -L            # 查看防火墙设置</div><div class=\"line\"># route -n               # 查看路由表</div><div class=\"line\"># netstat -lntp          # 查看所有监听端口</div><div class=\"line\"># netstat -antp          # 查看所有已经建立的连接</div><div class=\"line\"># netstat -s             # 查看网络统计信息</div></pre></td></tr></table></figure>\n<h3 id=\"进程\"><a href=\"#进程\" class=\"headerlink\" title=\"进程\"></a>进程</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># ps -ef                 # 查看所有进程</div><div class=\"line\"># top                    # 实时显示进程状态</div></pre></td></tr></table></figure>\n<h3 id=\"用户\"><a href=\"#用户\" class=\"headerlink\" title=\"用户\"></a>用户</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"># w                      # 查看活动用户</div><div class=\"line\"># id &lt;用户名&gt;            # 查看指定用户信息</div><div class=\"line\"># last                   # 查看用户登录日志</div><div class=\"line\"># cut -d: -f1 /etc/passwd   # 查看系统所有用户</div><div class=\"line\"># cut -d: -f1 /etc/group    # 查看系统所有组</div><div class=\"line\"># crontab -l             # 查看当前用户的计划任务</div></pre></td></tr></table></figure>\n<h3 id=\"登录\"><a href=\"#登录\" class=\"headerlink\" title=\"登录\"></a>登录</h3><figure class=\"highlight applescript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">w 查询当前所有的登录用户</div><div class=\"line\"></div><div class=\"line\">who 查询当前所有的登录用户</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">last</span> 查询所有的登录信息</div><div class=\"line\"></div><div class=\"line\">/val/<span class=\"built_in\">log</span> —— 系统日志信息</div></pre></td></tr></table></figure>\n<h3 id=\"服务\"><a href=\"#服务\" class=\"headerlink\" title=\"服务\"></a>服务</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chkconfig --list       # 列出所有系统服务</div><div class=\"line\"># chkconfig --list | grep on    # 列出所有启动的系统服务</div></pre></td></tr></table></figure>\n<h3 id=\"程序\"><a href=\"#程序\" class=\"headerlink\" title=\"程序\"></a>程序</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># rpm -qa                # 查看所有安装的软件包</div></pre></td></tr></table></figure>\n<h3 id=\"查看CPU信息（型号）\"><a href=\"#查看CPU信息（型号）\" class=\"headerlink\" title=\"查看CPU信息（型号）\"></a>查看CPU信息（型号）</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"># cat /proc/cpuinfo | grep name | cut -f2 -d: | uniq -c </div><div class=\"line\"></div><div class=\"line\"># cat /proc/cpuinfo | grep physical | uniq -c </div><div class=\"line\"> </div><div class=\"line\"># getconf LONG_BIT </div><div class=\"line\"></div><div class=\"line\"># cat /proc/cpuinfo | grep flags | grep &apos; lm &apos; | wc -l </div><div class=\"line\"></div><div class=\"line\"># dmidecode | grep &apos;Processor Information&apos;</div></pre></td></tr></table></figure>\n<h3 id=\"head-tail-cat-awk-grep-vim\"><a href=\"#head-tail-cat-awk-grep-vim\" class=\"headerlink\" title=\"head tail cat awk grep vim\"></a>head tail cat awk grep vim</h3><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">dmi 查看cpu信息</div><div class=\"line\"></div><div class=\"line\">chmod +x filename<span class=\"selector-class\">.sh</span></div><div class=\"line\"></div><div class=\"line\">chown —— 改变文件所属</div><div class=\"line\"></div><div class=\"line\">/etc/rc<span class=\"selector-class\">.local</span> —— 开机启动配置</div><div class=\"line\"></div><div class=\"line\">cron —— 定时器相关</div></pre></td></tr></table></figure>\n<h3 id=\"查看内存信息\"><a href=\"#查看内存信息\" class=\"headerlink\" title=\"查看内存信息\"></a>查看内存信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># cat /proc/meminfo </div><div class=\"line\"></div><div class=\"line\"># uname -a </div><div class=\"line\"></div><div class=\"line\"># cat /etc/issue | grep Linux</div></pre></td></tr></table></figure>\n<h3 id=\"查看机器型号\"><a href=\"#查看机器型号\" class=\"headerlink\" title=\"查看机器型号\"></a>查看机器型号</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># dmidecode | grep &quot;Product Name&quot;</div></pre></td></tr></table></figure>\n<p>查看网卡信息 </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># dmesg | grep -i eth</div></pre></td></tr></table></figure>\n<h3 id=\"显示文件列表\"><a href=\"#显示文件列表\" class=\"headerlink\" title=\"显示文件列表\"></a>显示文件列表</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\">ls -a —— 显示隐藏文件  </div><div class=\"line\"></div><div class=\"line\">ls -i —— 显示详细信息</div><div class=\"line\"></div><div class=\"line\">ls -l —— 显示扩展名以及权限</div><div class=\"line\"></div><div class=\"line\">ls -h —— 显示格式化列表</div><div class=\"line\"></div><div class=\"line\">对于文件前面的这一串字符串的意思：-rw-r--r--</div><div class=\"line\"></div><div class=\"line\">-表示文件类型</div><div class=\"line\"></div><div class=\"line\">rw-表示所有者u     </div><div class=\"line\"></div><div class=\"line\">r--</div><div class=\"line\"></div><div class=\"line\">g所属组</div><div class=\"line\"></div><div class=\"line\">r--</div><div class=\"line\"></div><div class=\"line\">o其他人</div><div class=\"line\"></div><div class=\"line\">r读 w写 x执行</div></pre></td></tr></table></figure>\n<h3 id=\"linux查找功能\"><a href=\"#linux查找功能\" class=\"headerlink\" title=\"linux查找功能\"></a>linux查找功能</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\"># locate locate // 更新locate数据库 updatedb</div><div class=\"line\"></div><div class=\"line\"># find 范围 -name 文件名</div><div class=\"line\"></div><div class=\"line\"># find 范围 -iname 文件名（不区分大小写）</div><div class=\"line\"></div><div class=\"line\"># find 范围 -mtime 文件名 +10 （10天内修改的文件）a访问</div><div class=\"line\"></div><div class=\"line\"># find 范围 -size -15k (小于25k的文件) M兆</div><div class=\"line\"></div><div class=\"line\"># find 范围 -size +1k -a -size -50k (大于1k小于50k) -o或</div></pre></td></tr></table></figure>\n<h3 id=\"帮助命令\"><a href=\"#帮助命令\" class=\"headerlink\" title=\"帮助命令\"></a>帮助命令</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">main 查看帮助文档</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">help</span> 获取内部命令</div></pre></td></tr></table></figure>\n<h3 id=\"压缩与解压缩命令\"><a href=\"#压缩与解压缩命令\" class=\"headerlink\" title=\"压缩与解压缩命令\"></a>压缩与解压缩命令</h3><h4 id=\"zip-gz-bz2\"><a href=\"#zip-gz-bz2\" class=\"headerlink\" title=\".zip .gz .bz2\"></a>.zip .gz .bz2</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">.zip在window和linux通用  压缩文件命令为：zip 压缩文件名 源文件名 ； </div><div class=\"line\">压缩文件夹命令为：zip -r 压缩文件名 源目录 ;解压命令将zip改为unzip即可</div></pre></td></tr></table></figure>\n<h4 id=\"tar-gz-tar-bz2-打包命令tar\"><a href=\"#tar-gz-tar-bz2-打包命令tar\" class=\"headerlink\" title=\".tar.gz .tar.bz2 打包命令tar\"></a>.tar.gz .tar.bz2 打包命令tar</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\">tar -cvf 打包文件名 源文件 </div><div class=\"line\"></div><div class=\"line\">-c：打包 </div><div class=\"line\"></div><div class=\"line\">-v：显示过程 </div><div class=\"line\"></div><div class=\"line\">-f：指定打包后的文件名 </div><div class=\"line\"></div><div class=\"line\">-x：解打包 </div><div class=\"line\"></div><div class=\"line\">-z：压缩包名为.tar.gz </div><div class=\"line\"></div><div class=\"line\">-C：指定解压目录</div><div class=\"line\"></div><div class=\"line\">// 举例</div><div class=\"line\"></div><div class=\"line\">tar -zcvf packfiles.tar.gz packfiles</div><div class=\"line\"></div><div class=\"line\">tar -zxvf packfiles.tar.gz</div><div class=\"line\"></div><div class=\"line\">tar -zxvf packfiles.tar.gz -C ./dirs</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"下面是shell相关部分\"><a href=\"#下面是shell相关部分\" class=\"headerlink\" title=\"下面是shell相关部分\"></a>下面是shell相关部分</h3><p>shell是什么？</p>\n<p>shell是一个命令行解释器</p>\n<p>用户 ——》shell ——》内核 </p>\n<p>内核 ——》sell ——》用户</p>\n<h4 id=\"创建一个可执行文件-hello-sh\"><a href=\"#创建一个可执行文件-hello-sh\" class=\"headerlink\" title=\"创建一个可执行文件 hello.sh\"></a>创建一个可执行文件 hello.sh</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\"></div><div class=\"line\">echo &quot;hello zsr !!!&quot;</div></pre></td></tr></table></figure>\n<h4 id=\"执行可执行文件\"><a href=\"#执行可执行文件\" class=\"headerlink\" title=\"执行可执行文件\"></a>执行可执行文件</h4><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 755 hello.sh —— 给予文件可执行权限</div><div class=\"line\"></div><div class=\"line\">./hello.sh —— 执行可执行文件</div></pre></td></tr></table></figure>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo $SHELL 查看当前的shell环境变量</div><div class=\"line\"></div><div class=\"line\">/etc/shells 查看当前shell支持的版本</div></pre></td></tr></table></figure>\n<h3 id=\"echo命令\"><a href=\"#echo命令\" class=\"headerlink\" title=\"echo命令\"></a>echo命令</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">echo 选项 输出内容</div><div class=\"line\"></div><div class=\"line\">选项：-e 支持反斜杠控制的字符转换</div></pre></td></tr></table></figure>\n<h3 id=\"创建可执行文件-hello-sh\"><a href=\"#创建可执行文件-hello-sh\" class=\"headerlink\" title=\"创建可执行文件 hello.sh\"></a>创建可执行文件 hello.sh</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">#!/bin/bash</div><div class=\"line\">#the first program</div><div class=\"line\"></div><div class=\"line\">echo -e \"\\e[1;34m i live yellow \\e[0m\"</div></pre></td></tr></table></figure>\n<h4 id=\"执行可执行文件-1\"><a href=\"#执行可执行文件-1\" class=\"headerlink\" title=\"执行可执行文件\"></a>执行可执行文件</h4><p>两个方法：</p>\n<h4 id=\"赋予执行权限再执行\"><a href=\"#赋予执行权限再执行\" class=\"headerlink\" title=\"赋予执行权限再执行\"></a>赋予执行权限再执行</h4><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">chmod 755 hello.<span class=\"keyword\">sh</span></div><div class=\"line\"></div><div class=\"line\">./hello.<span class=\"keyword\">sh</span></div></pre></td></tr></table></figure>\n<h4 id=\"直接用bash执行\"><a href=\"#直接用bash执行\" class=\"headerlink\" title=\"直接用bash执行\"></a>直接用bash执行</h4><figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">bash </span>hello.sh</div></pre></td></tr></table></figure>\n<h3 id=\"bash的基本功能\"><a href=\"#bash的基本功能\" class=\"headerlink\" title=\"bash的基本功能\"></a>bash的基本功能</h3><h4 id=\"alias-设置命令别名\"><a href=\"#alias-设置命令别名\" class=\"headerlink\" title=\"alias 设置命令别名\"></a>alias 设置命令别名</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">alias</span> 查看已有的别名</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">alias</span> ll=<span class=\"string\">'ls -ilpa'</span> 重命名显示文件详细信息的命令</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">unalias</span> 删除别名</div><div class=\"line\"></div><div class=\"line\">命令的生效顺序：绝对路径启动 》 别名 》 bash内部命令 》 <span class=\"variable\">$PATH</span>环境变量定义的目录查找到的第一个命令</div></pre></td></tr></table></figure>\n<h4 id=\"常用快捷键\"><a href=\"#常用快捷键\" class=\"headerlink\" title=\"常用快捷键\"></a>常用快捷键</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">ctl+c 强制终止当前命令</div><div class=\"line\"></div><div class=\"line\">ctl+l 清屏</div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"selector-tag\">a</span> 光标移到行首</div><div class=\"line\"></div><div class=\"line\">ctl+e 光标移到行尾</div><div class=\"line\"></div><div class=\"line\">ctl+u 从光标删除到行首</div><div class=\"line\"></div><div class=\"line\">ctl+z 把命令放入后台</div><div class=\"line\"></div><div class=\"line\">ctl+r 在历史命令中搜索</div></pre></td></tr></table></figure>\n<h4 id=\"历史命令\"><a href=\"#历史命令\" class=\"headerlink\" title=\"历史命令\"></a>历史命令</h4><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">history</span> 显示所有的历史命令</div><div class=\"line\"></div><div class=\"line\">保存位置在 ~/.bash_history文件里面</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">history</span> -c 清除历史命令</div></pre></td></tr></table></figure>\n<h3 id=\"重定向\"><a href=\"#重定向\" class=\"headerlink\" title=\"重定向\"></a>重定向</h3><p>dev目录 —— linux保存特殊文件的目录</p>\n<h4 id=\"输出重定向\"><a href=\"#输出重定向\" class=\"headerlink\" title=\"输出重定向\"></a>输出重定向</h4><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令 &gt; 文件 —— 标准输出重定向</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>文件 —— 追加重定向</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"number\">2</span>&gt; 文件 —— 标准错误输出</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"number\">2</span><span class=\"meta\">&gt;&gt; </span>文件 —— 追加标准错误输出</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>文件 <span class=\"number\">2</span>&gt;&amp;<span class=\"number\">1</span> —— 追加错误或者正确的命令</div><div class=\"line\"></div><div class=\"line\">命令 &amp;&gt; <span class=\"regexp\">/dev/null</span> —— 放弃查看命令执行结果</div><div class=\"line\"></div><div class=\"line\">命令 <span class=\"meta\">&gt;&gt; </span>success.log <span class=\"number\">2</span> &gt;&gt; error.log —— 分别保存这两个正确和错误的信息</div></pre></td></tr></table></figure>\n<h4 id=\"输入重定向\"><a href=\"#输入重定向\" class=\"headerlink\" title=\"输入重定向\"></a>输入重定向</h4><figure class=\"highlight haml\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">wc 选项 文件名 —— 统计（ctl+d结束）</div><div class=\"line\"></div><div class=\"line\">-<span class=\"ruby\"> c 统计字节数。</div><div class=\"line\"></span></div><div class=\"line\">-<span class=\"ruby\"> l 统计行数。</div><div class=\"line\"></span></div><div class=\"line\">-<span class=\"ruby\"> w 统计字数。</span></div></pre></td></tr></table></figure>\n<h4 id=\"多命令顺序执行\"><a href=\"#多命令顺序执行\" class=\"headerlink\" title=\"多命令顺序执行\"></a>多命令顺序执行</h4><figure class=\"highlight lsl\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令<span class=\"number\">1</span>; 命令<span class=\"number\">2</span> —— 多个命令顺序执行，命令之间没有任何逻辑关系</div><div class=\"line\"></div><div class=\"line\">命令<span class=\"number\">1</span> &amp;&amp; 命令<span class=\"number\">2</span> —— 逻辑与关系</div><div class=\"line\"></div><div class=\"line\">命令<span class=\"number\">1</span> || 命令<span class=\"number\">2</span> —— 逻辑或关系</div></pre></td></tr></table></figure>\n<h3 id=\"管道符\"><a href=\"#管道符\" class=\"headerlink\" title=\"管道符\"></a>管道符</h3><figure class=\"highlight 1c\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">命令<span class=\"number\">1</span> <span class=\"string\">| 命令2 —— 命令1的正确输出结果作为命令2的操作对象</span></div><div class=\"line\"></div><div class=\"line\">eg:</div><div class=\"line\"></div><div class=\"line\">netstat -an <span class=\"string\">| grep \"</span>ESTABLISHED<span class=\"string\">\"</span></div></pre></td></tr></table></figure>\n<h3 id=\"通配符\"><a href=\"#通配符\" class=\"headerlink\" title=\"通配符\"></a>通配符</h3><figure class=\"highlight ruby\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div></pre></td><td class=\"code\"><pre><div class=\"line\">? —— 匹配任意字符</div><div class=\"line\"></div><div class=\"line\">* —— 匹配<span class=\"number\">0</span>个或多个任意字符</div><div class=\"line\"></div><div class=\"line\">[] —— 匹配中括号中任意一个字符</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">\"\"</span> —— 可以调用变量的值</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">''</span> —— 所有特殊符号如 $ 都没有特殊含义</div><div class=\"line\"></div><div class=\"line\"><span class=\"string\">` `</span> —— 反引号可以执行命令</div><div class=\"line\"></div><div class=\"line\">$(命令) —— 执行命令</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"nodeMongodbLearn","date":"2016-04-29T16:00:00.000Z","_content":"\n## {{page.title}}\n\n#### Schema\n\n一种以文件形式存储的数据库模型骨架，不具备数据库的操作能力\n\n#### Model\n\n由Schema发布生成的模型，具有抽象属性和行为的数据库操作对\n\n#### entity\n\n由Model创建的实体，它的操作会影响数据库\n\n\n\n#### mongodb安装\n\n```\nbrew update —— 更新homebrew的package数据库\n\nbrew install mongodb —— 安装mongodb\n\nmongod --config /usr/local/etc/mongod.conf —— 启动mongodb\n\nmongo\n```\n\n\n#### mongodb启动失败处理\n\n<a href=\"http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused\" target=\"_blank\">http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused</a>\n\n\n```\nbrew services start mongodb\n```\n\n\n\n\n\n\n\n","source":"_posts/mongodb.md","raw":"---\nlayout: default\ntitle: nodeMongodbLearn\ndate: 2016-04-30\n---\n\n## {{page.title}}\n\n#### Schema\n\n一种以文件形式存储的数据库模型骨架，不具备数据库的操作能力\n\n#### Model\n\n由Schema发布生成的模型，具有抽象属性和行为的数据库操作对\n\n#### entity\n\n由Model创建的实体，它的操作会影响数据库\n\n\n\n#### mongodb安装\n\n```\nbrew update —— 更新homebrew的package数据库\n\nbrew install mongodb —— 安装mongodb\n\nmongod --config /usr/local/etc/mongod.conf —— 启动mongodb\n\nmongo\n```\n\n\n#### mongodb启动失败处理\n\n<a href=\"http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused\" target=\"_blank\">http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused</a>\n\n\n```\nbrew services start mongodb\n```\n\n\n\n\n\n\n\n","slug":"mongodb","published":1,"updated":"2016-12-21T01:54:39.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw3u000k81qtx69dql5x","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h4 id=\"Schema\"><a href=\"#Schema\" class=\"headerlink\" title=\"Schema\"></a>Schema</h4><p>一种以文件形式存储的数据库模型骨架，不具备数据库的操作能力</p>\n<h4 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h4><p>由Schema发布生成的模型，具有抽象属性和行为的数据库操作对</p>\n<h4 id=\"entity\"><a href=\"#entity\" class=\"headerlink\" title=\"entity\"></a>entity</h4><p>由Model创建的实体，它的操作会影响数据库</p>\n<h4 id=\"mongodb安装\"><a href=\"#mongodb安装\" class=\"headerlink\" title=\"mongodb安装\"></a>mongodb安装</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew <span class=\"keyword\">update</span> —— 更新homebrew的<span class=\"keyword\">package</span>数据库</div><div class=\"line\"></div><div class=\"line\">brew <span class=\"keyword\">install</span> mongodb —— 安装mongodb</div><div class=\"line\"></div><div class=\"line\">mongod <span class=\"comment\">--config /usr/local/etc/mongod.conf —— 启动mongodb</span></div><div class=\"line\"></div><div class=\"line\">mongo</div></pre></td></tr></table></figure>\n<h4 id=\"mongodb启动失败处理\"><a href=\"#mongodb启动失败处理\" class=\"headerlink\" title=\"mongodb启动失败处理\"></a>mongodb启动失败处理</h4><p><a href=\"http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused\" target=\"_blank\">http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused</a></p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">brew </span>services start mongodb</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h4 id=\"Schema\"><a href=\"#Schema\" class=\"headerlink\" title=\"Schema\"></a>Schema</h4><p>一种以文件形式存储的数据库模型骨架，不具备数据库的操作能力</p>\n<h4 id=\"Model\"><a href=\"#Model\" class=\"headerlink\" title=\"Model\"></a>Model</h4><p>由Schema发布生成的模型，具有抽象属性和行为的数据库操作对</p>\n<h4 id=\"entity\"><a href=\"#entity\" class=\"headerlink\" title=\"entity\"></a>entity</h4><p>由Model创建的实体，它的操作会影响数据库</p>\n<h4 id=\"mongodb安装\"><a href=\"#mongodb安装\" class=\"headerlink\" title=\"mongodb安装\"></a>mongodb安装</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew <span class=\"keyword\">update</span> —— 更新homebrew的<span class=\"keyword\">package</span>数据库</div><div class=\"line\"></div><div class=\"line\">brew <span class=\"keyword\">install</span> mongodb —— 安装mongodb</div><div class=\"line\"></div><div class=\"line\">mongod <span class=\"comment\">--config /usr/local/etc/mongod.conf —— 启动mongodb</span></div><div class=\"line\"></div><div class=\"line\">mongo</div></pre></td></tr></table></figure>\n<h4 id=\"mongodb启动失败处理\"><a href=\"#mongodb启动失败处理\" class=\"headerlink\" title=\"mongodb启动失败处理\"></a>mongodb启动失败处理</h4><p><a href=\"http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused\" target=\"_blank\">http://stackoverflow.com/questions/23418134/cannot-connect-to-mongodb-errno61-connection-refused</a></p>\n<figure class=\"highlight armasm\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">brew </span>services start mongodb</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"MYSQL入门","date":"2016-12-24T16:00:00.000Z","_content":"\nMysql是最流行的关系型数据库管理系统，尤其是在web应用方面。\nMysql是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\nMysql是开源的、免费的、支持大型的数据库\nMysql使用标准的SQL数据语言形式。\n下面是mysql的基本使用。\n\nps: ${xxx}表示xxx是变量\n\n### mysql安装\n\n用brew安装mysql\n\n安装mysql\n\n``` html\n$ brew install mysql\n```\n\n设置 MySQL 用户以及数据存放地址\n\n``` html\n$ unset TMPDIR\n\n$ mysql_install_db --verbose --user=`whoami` --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp\n```\n\n忘记mysql数据库密码\n\n``` sql\nupdate user set authentication_string=password('my_password') where user='root';\n```\n\n遇到的问题\n\n错误码：ERROR 1045 (28000)\n\n``` html\ncd /etc\n\nsudo vim my.cnf\n\n编辑如下代码到my.cnf文件,保存成功应该就可以了\n[mysqld]\nskip-grant-tables\nlower_case_table_names=1\n```\n\n权限不足的时候可以创建一个账号\n\n``` sql\nCREATE USER 'golden'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON * . * TO 'golden'@'localhost';\nFLUSH PRIVILEGES;\n```\n\n--------------\n\n启动mysql\n\n``` html\n$ mysql.server start\n```\n开机启动mysql\n\n``` html\n/etc/init.d/mysqld start\n```\n\n通过sql文件执行脚本\n\n``` sql\nsource  /Users/zsr/learn/crawler/sql/createtable.sql;\n\nor\n\nmysql -D samp_db -u root -p < createtable.sql\n```\n\n登录mysql\n\n``` sql\nmysql -u root -p\n\n输入mysql密码\n```\n\n---------------\n\n创建一个数据库，设置character是为了兼容汉字\n\n``` sql\ncreate database ${newdatabasename} character set gbk;\n```\n\n查看所有的数据库\n\n``` sql\nshow databases;\n```\n\n删除数据库\n\n``` sql\ndrop database ${databasename};\n```\n\n选中testdb数据库\n\n``` sql\nuse testdb;\n```\n\n---------------\n\n创建一张表\n\n``` sql\nuse ${databasename}\n\ncreate table students\n（\n    id int unsigned not null auto_increment primary key,\n    name char(8) not null,\n    sex char(4) not null,\n    age tinyint unsigned not null,\n    tel char(13) null default \"-\"\n);\n```\n\n修改表名\n\n``` sql\nalter table ${oldtablename} rename to ${newtablename};\n```\n\n查看所有表\n\n``` sql\nshow tables;\n```\n\n删除表\n\n``` sql\ndrop table ${tabename};\n```\n\n显示数据表的属性，属性类型，主键信息\n\n``` sql\nshow columns from students\n```\n\n---------------\n\n查看列\n\n``` sql\ndesc ${tablename};\n```\n\n添加列\n\n``` sql\nalter table ${tablename} add column ${newcolumnname} verchar(30);\n```\n\n删除列\n\n``` sql\nalter table ${tablename} drop column;\n\nalter table ${tablename} drop column ${columnname};\n```\n\n修改列\n\n``` sql\nalter table ${tablename} change ${ondcolumnname} ${newcolumnname} int; \n```\n\n修改列属性\n\n``` sql\nalter table ${tablename} modify ${oldattr} char(80);\n```\n\n---------------\n\n增加数据\n\n``` sql \ninsert into ${tablename} values (${column1}, ${column2}); /*如果自增id，则column1为0*/\n```\n\n修改数据\n\n``` sql\nupdate ${tablename} set ${attr}=${newAttr} where ${id=3}; /*id=3代表查询条件*/\n```\n\n查询数据\n\n``` sql\nselect * from ${tablename} where ${id=3};\n```\n\n删除数据\n\n``` sql\ndelete from ${tablename} where ${id=3};\n```\n\n------------------\n\n详细的常用查询操作\n\n1.查询从第n条开始的m条数据\n\n``` sql\nselect * from test_table limit n,m;\n```\n\n查看数据库编码\n\n``` sql\nshow variables like 'character%'; \n```\n","source":"_posts/mysql.md","raw":"---\nlayout: default\ntitle: MYSQL入门\ncategory: 服务器\ntag: mysql\ndate: 2016/12/25\n---\n\nMysql是最流行的关系型数据库管理系统，尤其是在web应用方面。\nMysql是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。\nMysql是开源的、免费的、支持大型的数据库\nMysql使用标准的SQL数据语言形式。\n下面是mysql的基本使用。\n\nps: ${xxx}表示xxx是变量\n\n### mysql安装\n\n用brew安装mysql\n\n安装mysql\n\n``` html\n$ brew install mysql\n```\n\n设置 MySQL 用户以及数据存放地址\n\n``` html\n$ unset TMPDIR\n\n$ mysql_install_db --verbose --user=`whoami` --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp\n```\n\n忘记mysql数据库密码\n\n``` sql\nupdate user set authentication_string=password('my_password') where user='root';\n```\n\n遇到的问题\n\n错误码：ERROR 1045 (28000)\n\n``` html\ncd /etc\n\nsudo vim my.cnf\n\n编辑如下代码到my.cnf文件,保存成功应该就可以了\n[mysqld]\nskip-grant-tables\nlower_case_table_names=1\n```\n\n权限不足的时候可以创建一个账号\n\n``` sql\nCREATE USER 'golden'@'localhost' IDENTIFIED BY 'password';\nGRANT ALL PRIVILEGES ON * . * TO 'golden'@'localhost';\nFLUSH PRIVILEGES;\n```\n\n--------------\n\n启动mysql\n\n``` html\n$ mysql.server start\n```\n开机启动mysql\n\n``` html\n/etc/init.d/mysqld start\n```\n\n通过sql文件执行脚本\n\n``` sql\nsource  /Users/zsr/learn/crawler/sql/createtable.sql;\n\nor\n\nmysql -D samp_db -u root -p < createtable.sql\n```\n\n登录mysql\n\n``` sql\nmysql -u root -p\n\n输入mysql密码\n```\n\n---------------\n\n创建一个数据库，设置character是为了兼容汉字\n\n``` sql\ncreate database ${newdatabasename} character set gbk;\n```\n\n查看所有的数据库\n\n``` sql\nshow databases;\n```\n\n删除数据库\n\n``` sql\ndrop database ${databasename};\n```\n\n选中testdb数据库\n\n``` sql\nuse testdb;\n```\n\n---------------\n\n创建一张表\n\n``` sql\nuse ${databasename}\n\ncreate table students\n（\n    id int unsigned not null auto_increment primary key,\n    name char(8) not null,\n    sex char(4) not null,\n    age tinyint unsigned not null,\n    tel char(13) null default \"-\"\n);\n```\n\n修改表名\n\n``` sql\nalter table ${oldtablename} rename to ${newtablename};\n```\n\n查看所有表\n\n``` sql\nshow tables;\n```\n\n删除表\n\n``` sql\ndrop table ${tabename};\n```\n\n显示数据表的属性，属性类型，主键信息\n\n``` sql\nshow columns from students\n```\n\n---------------\n\n查看列\n\n``` sql\ndesc ${tablename};\n```\n\n添加列\n\n``` sql\nalter table ${tablename} add column ${newcolumnname} verchar(30);\n```\n\n删除列\n\n``` sql\nalter table ${tablename} drop column;\n\nalter table ${tablename} drop column ${columnname};\n```\n\n修改列\n\n``` sql\nalter table ${tablename} change ${ondcolumnname} ${newcolumnname} int; \n```\n\n修改列属性\n\n``` sql\nalter table ${tablename} modify ${oldattr} char(80);\n```\n\n---------------\n\n增加数据\n\n``` sql \ninsert into ${tablename} values (${column1}, ${column2}); /*如果自增id，则column1为0*/\n```\n\n修改数据\n\n``` sql\nupdate ${tablename} set ${attr}=${newAttr} where ${id=3}; /*id=3代表查询条件*/\n```\n\n查询数据\n\n``` sql\nselect * from ${tablename} where ${id=3};\n```\n\n删除数据\n\n``` sql\ndelete from ${tablename} where ${id=3};\n```\n\n------------------\n\n详细的常用查询操作\n\n1.查询从第n条开始的m条数据\n\n``` sql\nselect * from test_table limit n,m;\n```\n\n查看数据库编码\n\n``` sql\nshow variables like 'character%'; \n```\n","slug":"mysql","published":1,"updated":"2016-12-30T05:35:35.000Z","_id":"cixbbxw3w000l81qtlh6y1l0t","comments":1,"photos":[],"link":"","content":"<p>Mysql是最流行的关系型数据库管理系统，尤其是在web应用方面。<br>Mysql是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。<br>Mysql是开源的、免费的、支持大型的数据库<br>Mysql使用标准的SQL数据语言形式。<br>下面是mysql的基本使用。</p>\n<p>ps: ${xxx}表示xxx是变量</p>\n<h3 id=\"mysql安装\"><a href=\"#mysql安装\" class=\"headerlink\" title=\"mysql安装\"></a>mysql安装</h3><p>用brew安装mysql</p>\n<p>安装mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install mysql</div></pre></td></tr></table></figure>\n<p>设置 MySQL 用户以及数据存放地址</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ unset TMPDIR</div><div class=\"line\"></div><div class=\"line\">$ mysql_install_db --verbose --user=`whoami` --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp</div></pre></td></tr></table></figure>\n<p>忘记mysql数据库密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">password</span>(<span class=\"string\">'my_password'</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</div></pre></td></tr></table></figure>\n<p>遇到的问题</p>\n<p>错误码：ERROR 1045 (28000)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /etc</div><div class=\"line\"></div><div class=\"line\">sudo vim my.cnf</div><div class=\"line\"></div><div class=\"line\">编辑如下代码到my.cnf文件,保存成功应该就可以了</div><div class=\"line\">[mysqld]</div><div class=\"line\">skip-grant-tables</div><div class=\"line\">lower_case_table_names=1</div></pre></td></tr></table></figure>\n<p>权限不足的时候可以创建一个账号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> <span class=\"string\">'golden'</span>@<span class=\"string\">'localhost'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'password'</span>;</div><div class=\"line\"><span class=\"keyword\">GRANT</span> ALL <span class=\"keyword\">PRIVILEGES</span> <span class=\"keyword\">ON</span> * . * <span class=\"keyword\">TO</span> <span class=\"string\">'golden'</span>@<span class=\"string\">'localhost'</span>;</div><div class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>启动mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mysql.server start</div></pre></td></tr></table></figure>\n<p>开机启动mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/mysqld start</div></pre></td></tr></table></figure>\n<p>通过sql文件执行脚本</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">source  /Users/zsr/learn/crawler/sql/createtable.sql;</div><div class=\"line\"></div><div class=\"line\">or</div><div class=\"line\"></div><div class=\"line\">mysql -D samp_db -u root -p &lt; createtable.sql</div></pre></td></tr></table></figure>\n<p>登录mysql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\"></div><div class=\"line\">输入mysql密码</div></pre></td></tr></table></figure>\n<hr>\n<p>创建一个数据库，设置character是为了兼容汉字</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> $&#123;newdatabasename&#125; <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> gbk;</div></pre></td></tr></table></figure>\n<p>查看所有的数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span>;</div></pre></td></tr></table></figure>\n<p>删除数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">database</span> $&#123;databasename&#125;;</div></pre></td></tr></table></figure>\n<p>选中testdb数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> testdb;</div></pre></td></tr></table></figure>\n<hr>\n<p>创建一张表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> $&#123;databasename&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> students</div><div class=\"line\">（</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment primary <span class=\"keyword\">key</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">char</span>(<span class=\"number\">8</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    sex <span class=\"built_in\">char</span>(<span class=\"number\">4</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    age tinyint <span class=\"keyword\">unsigned</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    tel <span class=\"built_in\">char</span>(<span class=\"number\">13</span>) <span class=\"literal\">null</span> <span class=\"keyword\">default</span> <span class=\"string\">\"-\"</span></div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>修改表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;oldtablename&#125; <span class=\"keyword\">rename</span> <span class=\"keyword\">to</span> $&#123;newtablename&#125;;</div></pre></td></tr></table></figure>\n<p>查看所有表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">tables</span>;</div></pre></td></tr></table></figure>\n<p>删除表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> $&#123;tabename&#125;;</div></pre></td></tr></table></figure>\n<p>显示数据表的属性，属性类型，主键信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> students</div></pre></td></tr></table></figure>\n<hr>\n<p>查看列</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc $&#123;tablename&#125;;</div></pre></td></tr></table></figure>\n<p>添加列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> $&#123;newcolumnname&#125; verchar(<span class=\"number\">30</span>);</div></pre></td></tr></table></figure>\n<p>删除列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> $&#123;columnname&#125;;</div></pre></td></tr></table></figure>\n<p>修改列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">change</span> $&#123;ondcolumnname&#125; $&#123;newcolumnname&#125; <span class=\"built_in\">int</span>;</div></pre></td></tr></table></figure>\n<p>修改列属性</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">modify</span> $&#123;oldattr&#125; <span class=\"built_in\">char</span>(<span class=\"number\">80</span>);</div></pre></td></tr></table></figure>\n<hr>\n<p>增加数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> $&#123;tablename&#125; <span class=\"keyword\">values</span> ($&#123;column1&#125;, $&#123;column2&#125;); <span class=\"comment\">/*如果自增id，则column1为0*/</span></div></pre></td></tr></table></figure>\n<p>修改数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> $&#123;tablename&#125; <span class=\"keyword\">set</span> $&#123;<span class=\"keyword\">attr</span>&#125;=$&#123;newAttr&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;; <span class=\"comment\">/*id=3代表查询条件*/</span></div></pre></td></tr></table></figure>\n<p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> $&#123;tablename&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;;</div></pre></td></tr></table></figure>\n<p>删除数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> $&#123;tablename&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;;</div></pre></td></tr></table></figure>\n<hr>\n<p>详细的常用查询操作</p>\n<p>1.查询从第n条开始的m条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> test_table <span class=\"keyword\">limit</span> n,m;</div></pre></td></tr></table></figure>\n<p>查看数据库编码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">variables</span> <span class=\"keyword\">like</span> <span class=\"string\">'character%'</span>;</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>Mysql是最流行的关系型数据库管理系统，尤其是在web应用方面。<br>Mysql是一个关系型数据库管理系统，由瑞典MySQL AB公司开发，目前属于Oracle公司。MySQL是一种关联数据库管理系统，关联数据库将数据保存在不同的表中，而不是将所有数据放在一个大仓库内，这样就增加了速度并提高了灵活性。<br>Mysql是开源的、免费的、支持大型的数据库<br>Mysql使用标准的SQL数据语言形式。<br>下面是mysql的基本使用。</p>\n<p>ps: ${xxx}表示xxx是变量</p>\n<h3 id=\"mysql安装\"><a href=\"#mysql安装\" class=\"headerlink\" title=\"mysql安装\"></a>mysql安装</h3><p>用brew安装mysql</p>\n<p>安装mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ brew install mysql</div></pre></td></tr></table></figure>\n<p>设置 MySQL 用户以及数据存放地址</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ unset TMPDIR</div><div class=\"line\"></div><div class=\"line\">$ mysql_install_db --verbose --user=`whoami` --basedir=\"$(brew --prefix mysql)\" --datadir=/usr/local/var/mysql --tmpdir=/tmp</div></pre></td></tr></table></figure>\n<p>忘记mysql数据库密码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">user</span> <span class=\"keyword\">set</span> authentication_string=<span class=\"keyword\">password</span>(<span class=\"string\">'my_password'</span>) <span class=\"keyword\">where</span> <span class=\"keyword\">user</span>=<span class=\"string\">'root'</span>;</div></pre></td></tr></table></figure>\n<p>遇到的问题</p>\n<p>错误码：ERROR 1045 (28000)</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">cd /etc</div><div class=\"line\"></div><div class=\"line\">sudo vim my.cnf</div><div class=\"line\"></div><div class=\"line\">编辑如下代码到my.cnf文件,保存成功应该就可以了</div><div class=\"line\">[mysqld]</div><div class=\"line\">skip-grant-tables</div><div class=\"line\">lower_case_table_names=1</div></pre></td></tr></table></figure>\n<p>权限不足的时候可以创建一个账号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">USER</span> <span class=\"string\">'golden'</span>@<span class=\"string\">'localhost'</span> <span class=\"keyword\">IDENTIFIED</span> <span class=\"keyword\">BY</span> <span class=\"string\">'password'</span>;</div><div class=\"line\"><span class=\"keyword\">GRANT</span> ALL <span class=\"keyword\">PRIVILEGES</span> <span class=\"keyword\">ON</span> * . * <span class=\"keyword\">TO</span> <span class=\"string\">'golden'</span>@<span class=\"string\">'localhost'</span>;</div><div class=\"line\"><span class=\"keyword\">FLUSH</span> <span class=\"keyword\">PRIVILEGES</span>;</div></pre></td></tr></table></figure>\n<hr>\n<p>启动mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ mysql.server start</div></pre></td></tr></table></figure>\n<p>开机启动mysql</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/etc/init.d/mysqld start</div></pre></td></tr></table></figure>\n<p>通过sql文件执行脚本</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">source  /Users/zsr/learn/crawler/sql/createtable.sql;</div><div class=\"line\"></div><div class=\"line\">or</div><div class=\"line\"></div><div class=\"line\">mysql -D samp_db -u root -p &lt; createtable.sql</div></pre></td></tr></table></figure>\n<p>登录mysql</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">mysql -u root -p</div><div class=\"line\"></div><div class=\"line\">输入mysql密码</div></pre></td></tr></table></figure>\n<hr>\n<p>创建一个数据库，设置character是为了兼容汉字</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">database</span> $&#123;newdatabasename&#125; <span class=\"built_in\">character</span> <span class=\"keyword\">set</span> gbk;</div></pre></td></tr></table></figure>\n<p>查看所有的数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">databases</span>;</div></pre></td></tr></table></figure>\n<p>删除数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">database</span> $&#123;databasename&#125;;</div></pre></td></tr></table></figure>\n<p>选中testdb数据库</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> testdb;</div></pre></td></tr></table></figure>\n<hr>\n<p>创建一张表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">use</span> $&#123;databasename&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> students</div><div class=\"line\">（</div><div class=\"line\">    <span class=\"keyword\">id</span> <span class=\"built_in\">int</span> <span class=\"keyword\">unsigned</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span> auto_increment primary <span class=\"keyword\">key</span>,</div><div class=\"line\">    <span class=\"keyword\">name</span> <span class=\"built_in\">char</span>(<span class=\"number\">8</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    sex <span class=\"built_in\">char</span>(<span class=\"number\">4</span>) <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    age tinyint <span class=\"keyword\">unsigned</span> <span class=\"keyword\">not</span> <span class=\"literal\">null</span>,</div><div class=\"line\">    tel <span class=\"built_in\">char</span>(<span class=\"number\">13</span>) <span class=\"literal\">null</span> <span class=\"keyword\">default</span> <span class=\"string\">\"-\"</span></div><div class=\"line\">);</div></pre></td></tr></table></figure>\n<p>修改表名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;oldtablename&#125; <span class=\"keyword\">rename</span> <span class=\"keyword\">to</span> $&#123;newtablename&#125;;</div></pre></td></tr></table></figure>\n<p>查看所有表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">tables</span>;</div></pre></td></tr></table></figure>\n<p>删除表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> $&#123;tabename&#125;;</div></pre></td></tr></table></figure>\n<p>显示数据表的属性，属性类型，主键信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">columns</span> <span class=\"keyword\">from</span> students</div></pre></td></tr></table></figure>\n<hr>\n<p>查看列</p>\n<figure class=\"highlight\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">desc $&#123;tablename&#125;;</div></pre></td></tr></table></figure>\n<p>添加列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">add</span> <span class=\"keyword\">column</span> $&#123;newcolumnname&#125; verchar(<span class=\"number\">30</span>);</div></pre></td></tr></table></figure>\n<p>删除列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> $&#123;columnname&#125;;</div></pre></td></tr></table></figure>\n<p>修改列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">change</span> $&#123;ondcolumnname&#125; $&#123;newcolumnname&#125; <span class=\"built_in\">int</span>;</div></pre></td></tr></table></figure>\n<p>修改列属性</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> $&#123;tablename&#125; <span class=\"keyword\">modify</span> $&#123;oldattr&#125; <span class=\"built_in\">char</span>(<span class=\"number\">80</span>);</div></pre></td></tr></table></figure>\n<hr>\n<p>增加数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> $&#123;tablename&#125; <span class=\"keyword\">values</span> ($&#123;column1&#125;, $&#123;column2&#125;); <span class=\"comment\">/*如果自增id，则column1为0*/</span></div></pre></td></tr></table></figure>\n<p>修改数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">update</span> $&#123;tablename&#125; <span class=\"keyword\">set</span> $&#123;<span class=\"keyword\">attr</span>&#125;=$&#123;newAttr&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;; <span class=\"comment\">/*id=3代表查询条件*/</span></div></pre></td></tr></table></figure>\n<p>查询数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> $&#123;tablename&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;;</div></pre></td></tr></table></figure>\n<p>删除数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> $&#123;tablename&#125; <span class=\"keyword\">where</span> $&#123;<span class=\"keyword\">id</span>=<span class=\"number\">3</span>&#125;;</div></pre></td></tr></table></figure>\n<hr>\n<p>详细的常用查询操作</p>\n<p>1.查询从第n条开始的m条数据</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">select</span> * <span class=\"keyword\">from</span> test_table <span class=\"keyword\">limit</span> n,m;</div></pre></td></tr></table></figure>\n<p>查看数据库编码</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">show</span> <span class=\"keyword\">variables</span> <span class=\"keyword\">like</span> <span class=\"string\">'character%'</span>;</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"Nginx入门","date":"2016-12-24T16:00:00.000Z","_content":"\nNginx（发音同engine x）是一个网页服务器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。\nNginx在官方测试的结果中，能够支持五万个平行连接，而在实际的运作中，可以支持二万至四万个平行链接。\n整体采用模块化设计是nginx的一个重大特点，甚至http服务器核心功能也是一个模块。旧版本的nginx的模块是静态的，添加和删除模块都要对nginx进行重新编译，1.9.11以及更新的版本已经支持动态模块加载。 \n—— 来自维基百科\n\nNginx 最常用的功能就是提供反向代理服务\n\n#### 正向代理\n\n作为客户端的中介接受请求，隐藏真实的用户，向服务端获取资源，如果代理在墙外，则可以实现翻墙\n\n#### 反向代理\n\n作为服务端的中介，隐藏真实的服务器，目的是为了实现安全和负载均衡等一系列的功能\n\n安全：用户的请求不会直接到内网的服务器上，而是通过代理做了一层转发，在这一层可以实现安全过滤、流控、防DDOS等一系列策略\n\n负载均衡：我们可以水平扩展后端真正提供服务的服务器数量，代理按照规则转发请求到各个服务端，使得各个服务器负载接近均衡\n\n\n### 在mac osx\n\n1.brew\n\n``` shell\nbrew list 查看brew安装的软件列表\nbrew search xx // 搜索\nbrew install xx // 安装\nbrew info xx //查看xx信息\nbrew uninstall xx //卸载\n```\n\n1.用brew安装nginx\n\n``` shell\nbrew nginx\n```\n\n2.启动nginx\n\n``` shell\nsudo nginx\n```\n\n3.查看nginx的进程\n\n``` shell\nsudo ps aux | grep nginx\n```\n\n访问此地址查看是否启动nginx成功：http://localhost:8080/\n\n4.查看nginx版本\n\n``` shell\nnginx -v\n```\n\n5.停止nginx\n\n``` shell\nnginx -s stop\n```\n\n6.重新加载nginx\n\n``` shell\nnginx -s reload\n```\n\n7.重启nginx\n\n``` shell\nsudo nginx -s stop && sudo nginx\n```\n\n\nps:如果启动或重启的时候遇到pid报错则按如下方法杀掉nginx主进程\n\n在进程列表里面找到master进程，他的编号就是主进程号了。\n\n步骤一：询nginx主进程\n\n``` shell\nps -ef | grep nginx\n```\n\n步骤2：发送信号\n\n``` html\n从容停止：sudo kill -QUIT 主进程号\n\n快速停止：sudo kill -TERM 主进程号\n\n强制停止nginx：sudo pkill -9 nginx\n```\n\n8.nginx安装目录位置\n\n``` html\n/usr/local/Cellar/nginx\n```\n\n9.nginx配置文件目录\n\n``` html\n/usr/local/etc/nginx\n```\n\n10.系统host位置\n\n``` html\n/private/etc/host\n```\n\n\n\n\n\n\n### ubuntu系统\n\n安装\n\n``` html\nsudo apt-get install nginx\n\n```\n\n### 查看nginx是否启动\n\n``` html\nps -ef|grep nginx\n```\n\n\n\n\n\n\n-------------------------------\n\n### 参考&&相关链接\n\n##### 官方配置文档\n\n<a href=\"http://nginx.org/en/docs/\" target=\"_blank\">http://nginx.org/en/docs/</a>\n\n##### nginx配置从0开始：\n\n<a href=\"http://www.open-open.com/lib/view/open1419826381531.html\" target=\"_blank\">http://www.open-open.com/lib/view/open1419826381531.html</a>\n\n##### nginx 配置 location 总结及 rewrite 规则写法：\n\n<a href=\"https://linux.cn/article-5714-1.html\" target=\"_blank\">https://linux.cn/article-5714-1.html</a>\n\n##### 配置nginx\n<a href=\"http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/\" target=\"_blank\">http://arccode.net/2015/02/27/Nginx配置小记/</a>\n","source":"_posts/nginx.md","raw":"---\nlayout: default\ntitle: Nginx入门\ncategory: 服务端\ntag: nginx\ndate: 2016/12/25\n---\n\nNginx（发音同engine x）是一个网页服务器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。\nNginx在官方测试的结果中，能够支持五万个平行连接，而在实际的运作中，可以支持二万至四万个平行链接。\n整体采用模块化设计是nginx的一个重大特点，甚至http服务器核心功能也是一个模块。旧版本的nginx的模块是静态的，添加和删除模块都要对nginx进行重新编译，1.9.11以及更新的版本已经支持动态模块加载。 \n—— 来自维基百科\n\nNginx 最常用的功能就是提供反向代理服务\n\n#### 正向代理\n\n作为客户端的中介接受请求，隐藏真实的用户，向服务端获取资源，如果代理在墙外，则可以实现翻墙\n\n#### 反向代理\n\n作为服务端的中介，隐藏真实的服务器，目的是为了实现安全和负载均衡等一系列的功能\n\n安全：用户的请求不会直接到内网的服务器上，而是通过代理做了一层转发，在这一层可以实现安全过滤、流控、防DDOS等一系列策略\n\n负载均衡：我们可以水平扩展后端真正提供服务的服务器数量，代理按照规则转发请求到各个服务端，使得各个服务器负载接近均衡\n\n\n### 在mac osx\n\n1.brew\n\n``` shell\nbrew list 查看brew安装的软件列表\nbrew search xx // 搜索\nbrew install xx // 安装\nbrew info xx //查看xx信息\nbrew uninstall xx //卸载\n```\n\n1.用brew安装nginx\n\n``` shell\nbrew nginx\n```\n\n2.启动nginx\n\n``` shell\nsudo nginx\n```\n\n3.查看nginx的进程\n\n``` shell\nsudo ps aux | grep nginx\n```\n\n访问此地址查看是否启动nginx成功：http://localhost:8080/\n\n4.查看nginx版本\n\n``` shell\nnginx -v\n```\n\n5.停止nginx\n\n``` shell\nnginx -s stop\n```\n\n6.重新加载nginx\n\n``` shell\nnginx -s reload\n```\n\n7.重启nginx\n\n``` shell\nsudo nginx -s stop && sudo nginx\n```\n\n\nps:如果启动或重启的时候遇到pid报错则按如下方法杀掉nginx主进程\n\n在进程列表里面找到master进程，他的编号就是主进程号了。\n\n步骤一：询nginx主进程\n\n``` shell\nps -ef | grep nginx\n```\n\n步骤2：发送信号\n\n``` html\n从容停止：sudo kill -QUIT 主进程号\n\n快速停止：sudo kill -TERM 主进程号\n\n强制停止nginx：sudo pkill -9 nginx\n```\n\n8.nginx安装目录位置\n\n``` html\n/usr/local/Cellar/nginx\n```\n\n9.nginx配置文件目录\n\n``` html\n/usr/local/etc/nginx\n```\n\n10.系统host位置\n\n``` html\n/private/etc/host\n```\n\n\n\n\n\n\n### ubuntu系统\n\n安装\n\n``` html\nsudo apt-get install nginx\n\n```\n\n### 查看nginx是否启动\n\n``` html\nps -ef|grep nginx\n```\n\n\n\n\n\n\n-------------------------------\n\n### 参考&&相关链接\n\n##### 官方配置文档\n\n<a href=\"http://nginx.org/en/docs/\" target=\"_blank\">http://nginx.org/en/docs/</a>\n\n##### nginx配置从0开始：\n\n<a href=\"http://www.open-open.com/lib/view/open1419826381531.html\" target=\"_blank\">http://www.open-open.com/lib/view/open1419826381531.html</a>\n\n##### nginx 配置 location 总结及 rewrite 规则写法：\n\n<a href=\"https://linux.cn/article-5714-1.html\" target=\"_blank\">https://linux.cn/article-5714-1.html</a>\n\n##### 配置nginx\n<a href=\"http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/\" target=\"_blank\">http://arccode.net/2015/02/27/Nginx配置小记/</a>\n","slug":"nginx","published":1,"updated":"2016-12-31T09:16:00.000Z","_id":"cixbbxw3y000m81qtttkhyksx","comments":1,"photos":[],"link":"","content":"<p>Nginx（发音同engine x）是一个网页服务器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。<br>Nginx在官方测试的结果中，能够支持五万个平行连接，而在实际的运作中，可以支持二万至四万个平行链接。<br>整体采用模块化设计是nginx的一个重大特点，甚至http服务器核心功能也是一个模块。旧版本的nginx的模块是静态的，添加和删除模块都要对nginx进行重新编译，1.9.11以及更新的版本已经支持动态模块加载。<br>—— 来自维基百科</p>\n<p>Nginx 最常用的功能就是提供反向代理服务</p>\n<h4 id=\"正向代理\"><a href=\"#正向代理\" class=\"headerlink\" title=\"正向代理\"></a>正向代理</h4><p>作为客户端的中介接受请求，隐藏真实的用户，向服务端获取资源，如果代理在墙外，则可以实现翻墙</p>\n<h4 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h4><p>作为服务端的中介，隐藏真实的服务器，目的是为了实现安全和负载均衡等一系列的功能</p>\n<p>安全：用户的请求不会直接到内网的服务器上，而是通过代理做了一层转发，在这一层可以实现安全过滤、流控、防DDOS等一系列策略</p>\n<p>负载均衡：我们可以水平扩展后端真正提供服务的服务器数量，代理按照规则转发请求到各个服务端，使得各个服务器负载接近均衡</p>\n<h3 id=\"在mac-osx\"><a href=\"#在mac-osx\" class=\"headerlink\" title=\"在mac osx\"></a>在mac osx</h3><p>1.brew</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew list 查看brew安装的软件列表</div><div class=\"line\">brew search xx // 搜索</div><div class=\"line\">brew install xx // 安装</div><div class=\"line\">brew info xx //查看xx信息</div><div class=\"line\">brew uninstall xx //卸载</div></pre></td></tr></table></figure>\n<p>1.用brew安装nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew nginx</div></pre></td></tr></table></figure>\n<p>2.启动nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx</div></pre></td></tr></table></figure>\n<p>3.查看nginx的进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ps aux | grep nginx</div></pre></td></tr></table></figure>\n<p>访问此地址查看是否启动nginx成功：<a href=\"http://localhost:8080/\" target=\"_blank\" rel=\"external\">http://localhost:8080/</a></p>\n<p>4.查看nginx版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -v</div></pre></td></tr></table></figure>\n<p>5.停止nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s stop</div></pre></td></tr></table></figure>\n<p>6.重新加载nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s reload</div></pre></td></tr></table></figure>\n<p>7.重启nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -s stop &amp;&amp; sudo nginx</div></pre></td></tr></table></figure>\n<p>ps:如果启动或重启的时候遇到pid报错则按如下方法杀掉nginx主进程</p>\n<p>在进程列表里面找到master进程，他的编号就是主进程号了。</p>\n<p>步骤一：询nginx主进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep nginx</div></pre></td></tr></table></figure>\n<p>步骤2：发送信号</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">从容停止：sudo kill -QUIT 主进程号</div><div class=\"line\"></div><div class=\"line\">快速停止：sudo kill -TERM 主进程号</div><div class=\"line\"></div><div class=\"line\">强制停止nginx：sudo pkill -9 nginx</div></pre></td></tr></table></figure>\n<p>8.nginx安装目录位置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/Cellar/nginx</div></pre></td></tr></table></figure>\n<p>9.nginx配置文件目录</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/etc/nginx</div></pre></td></tr></table></figure>\n<p>10.系统host位置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/private/etc/host</div></pre></td></tr></table></figure>\n<h3 id=\"ubuntu系统\"><a href=\"#ubuntu系统\" class=\"headerlink\" title=\"ubuntu系统\"></a>ubuntu系统</h3><p>安装</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<h3 id=\"查看nginx是否启动\"><a href=\"#查看nginx是否启动\" class=\"headerlink\" title=\"查看nginx是否启动\"></a>查看nginx是否启动</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef|grep nginx</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"参考-amp-amp-相关链接\"><a href=\"#参考-amp-amp-相关链接\" class=\"headerlink\" title=\"参考&amp;&amp;相关链接\"></a>参考&amp;&amp;相关链接</h3><h5 id=\"官方配置文档\"><a href=\"#官方配置文档\" class=\"headerlink\" title=\"官方配置文档\"></a>官方配置文档</h5><p><a href=\"http://nginx.org/en/docs/\" target=\"_blank\">http://nginx.org/en/docs/</a></p>\n<h5 id=\"nginx配置从0开始：\"><a href=\"#nginx配置从0开始：\" class=\"headerlink\" title=\"nginx配置从0开始：\"></a>nginx配置从0开始：</h5><p><a href=\"http://www.open-open.com/lib/view/open1419826381531.html\" target=\"_blank\">http://www.open-open.com/lib/view/open1419826381531.html</a></p>\n<h5 id=\"nginx-配置-location-总结及-rewrite-规则写法：\"><a href=\"#nginx-配置-location-总结及-rewrite-规则写法：\" class=\"headerlink\" title=\"nginx 配置 location 总结及 rewrite 规则写法：\"></a>nginx 配置 location 总结及 rewrite 规则写法：</h5><p><a href=\"https://linux.cn/article-5714-1.html\" target=\"_blank\">https://linux.cn/article-5714-1.html</a></p>\n<h5 id=\"配置nginx\"><a href=\"#配置nginx\" class=\"headerlink\" title=\"配置nginx\"></a>配置nginx</h5><p><a href=\"http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/\" target=\"_blank\">http://arccode.net/2015/02/27/Nginx配置小记/</a></p>\n","excerpt":"","more":"<p>Nginx（发音同engine x）是一个网页服务器，它能反向代理HTTP, HTTPS, SMTP, POP3, IMAP的协议链接，以及一个负载均衡器和一个HTTP缓存。<br>Nginx在官方测试的结果中，能够支持五万个平行连接，而在实际的运作中，可以支持二万至四万个平行链接。<br>整体采用模块化设计是nginx的一个重大特点，甚至http服务器核心功能也是一个模块。旧版本的nginx的模块是静态的，添加和删除模块都要对nginx进行重新编译，1.9.11以及更新的版本已经支持动态模块加载。<br>—— 来自维基百科</p>\n<p>Nginx 最常用的功能就是提供反向代理服务</p>\n<h4 id=\"正向代理\"><a href=\"#正向代理\" class=\"headerlink\" title=\"正向代理\"></a>正向代理</h4><p>作为客户端的中介接受请求，隐藏真实的用户，向服务端获取资源，如果代理在墙外，则可以实现翻墙</p>\n<h4 id=\"反向代理\"><a href=\"#反向代理\" class=\"headerlink\" title=\"反向代理\"></a>反向代理</h4><p>作为服务端的中介，隐藏真实的服务器，目的是为了实现安全和负载均衡等一系列的功能</p>\n<p>安全：用户的请求不会直接到内网的服务器上，而是通过代理做了一层转发，在这一层可以实现安全过滤、流控、防DDOS等一系列策略</p>\n<p>负载均衡：我们可以水平扩展后端真正提供服务的服务器数量，代理按照规则转发请求到各个服务端，使得各个服务器负载接近均衡</p>\n<h3 id=\"在mac-osx\"><a href=\"#在mac-osx\" class=\"headerlink\" title=\"在mac osx\"></a>在mac osx</h3><p>1.brew</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew list 查看brew安装的软件列表</div><div class=\"line\">brew search xx // 搜索</div><div class=\"line\">brew install xx // 安装</div><div class=\"line\">brew info xx //查看xx信息</div><div class=\"line\">brew uninstall xx //卸载</div></pre></td></tr></table></figure>\n<p>1.用brew安装nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">brew nginx</div></pre></td></tr></table></figure>\n<p>2.启动nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx</div></pre></td></tr></table></figure>\n<p>3.查看nginx的进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo ps aux | grep nginx</div></pre></td></tr></table></figure>\n<p>访问此地址查看是否启动nginx成功：<a href=\"http://localhost:8080/\">http://localhost:8080/</a></p>\n<p>4.查看nginx版本</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -v</div></pre></td></tr></table></figure>\n<p>5.停止nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s stop</div></pre></td></tr></table></figure>\n<p>6.重新加载nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">nginx -s reload</div></pre></td></tr></table></figure>\n<p>7.重启nginx</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -s stop &amp;&amp; sudo nginx</div></pre></td></tr></table></figure>\n<p>ps:如果启动或重启的时候遇到pid报错则按如下方法杀掉nginx主进程</p>\n<p>在进程列表里面找到master进程，他的编号就是主进程号了。</p>\n<p>步骤一：询nginx主进程</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef | grep nginx</div></pre></td></tr></table></figure>\n<p>步骤2：发送信号</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">从容停止：sudo kill -QUIT 主进程号</div><div class=\"line\"></div><div class=\"line\">快速停止：sudo kill -TERM 主进程号</div><div class=\"line\"></div><div class=\"line\">强制停止nginx：sudo pkill -9 nginx</div></pre></td></tr></table></figure>\n<p>8.nginx安装目录位置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/Cellar/nginx</div></pre></td></tr></table></figure>\n<p>9.nginx配置文件目录</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/usr/local/etc/nginx</div></pre></td></tr></table></figure>\n<p>10.系统host位置</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">/private/etc/host</div></pre></td></tr></table></figure>\n<h3 id=\"ubuntu系统\"><a href=\"#ubuntu系统\" class=\"headerlink\" title=\"ubuntu系统\"></a>ubuntu系统</h3><p>安装</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo apt-get install nginx</div></pre></td></tr></table></figure>\n<h3 id=\"查看nginx是否启动\"><a href=\"#查看nginx是否启动\" class=\"headerlink\" title=\"查看nginx是否启动\"></a>查看nginx是否启动</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">ps -ef|grep nginx</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"参考-amp-amp-相关链接\"><a href=\"#参考-amp-amp-相关链接\" class=\"headerlink\" title=\"参考&amp;&amp;相关链接\"></a>参考&amp;&amp;相关链接</h3><h5 id=\"官方配置文档\"><a href=\"#官方配置文档\" class=\"headerlink\" title=\"官方配置文档\"></a>官方配置文档</h5><p><a href=\"http://nginx.org/en/docs/\" target=\"_blank\">http://nginx.org/en/docs/</a></p>\n<h5 id=\"nginx配置从0开始：\"><a href=\"#nginx配置从0开始：\" class=\"headerlink\" title=\"nginx配置从0开始：\"></a>nginx配置从0开始：</h5><p><a href=\"http://www.open-open.com/lib/view/open1419826381531.html\" target=\"_blank\">http://www.open-open.com/lib/view/open1419826381531.html</a></p>\n<h5 id=\"nginx-配置-location-总结及-rewrite-规则写法：\"><a href=\"#nginx-配置-location-总结及-rewrite-规则写法：\" class=\"headerlink\" title=\"nginx 配置 location 总结及 rewrite 规则写法：\"></a>nginx 配置 location 总结及 rewrite 规则写法：</h5><p><a href=\"https://linux.cn/article-5714-1.html\" target=\"_blank\">https://linux.cn/article-5714-1.html</a></p>\n<h5 id=\"配置nginx\"><a href=\"#配置nginx\" class=\"headerlink\" title=\"配置nginx\"></a>配置nginx</h5><p><a href=\"http://arccode.net/2015/02/27/Nginx%E9%85%8D%E7%BD%AE%E5%B0%8F%E8%AE%B0/\" target=\"_blank\">http://arccode.net/2015/02/27/Nginx配置小记/</a></p>\n"},{"layout":"default","title":"服务器端搭建node环境的网站","date":"2016-10-22T16:00:00.000Z","_content":"\n## {{page.title}}\n\n手贱在网上买了个云服务器，于是想搭个node服务出来。\n\n### 第一步：nodejs的安装\n\n本来在window上和mac上玩的很开心的nodejs变得如此之艰难\n\n下面是踩坑的过程，现在是边记录边实践，最后能否成功，敬请期待！\n\n现在是2016年10月23日 周日 11：10分，make编译中...\n\n#### 通过源码编译安装\n\n首先将nodejs的源码安装包下载下来，然后解压编译\n\n``` html\n#  tar xvf node-v4.6.1.tar.gz \n#  cd node-v4.6.1 \n#  ./configure \n# make \n# make install \n# cp /usr/local/bin/node /usr/sbin/ \n\n查看当前安装的Node的版本 \n# node -v \n\nv0.10.28\n```\nmake编译需要花较长的时间\n\nmake的时候可能会报这个错误：\n\n``` html\nWARNING: failed to autodetect C++ compiler version (CXX=g++)\n```\n\n解决办法，手动编译：\n\n``` html\napt-get install build-essential\n```\n\n11:20编译结束，执行make install，执行完毕.\n\nnode -v输出版本号; 在bin目录下又node和npm两个命令；node安装完成\n\n``` html\n# node -v\nv4.6.1\n\n# cd /usr/local/bin ls\nnode npm\n```\n\n### 第二步：将本地的小网站上传到服务器上去\n\n首先确定服务器上的网站存放目录。\n\n这里我将它放到/data/htdoc/\n\n``` html\n# scp -r /Users/zsr/test ubuntu/@123.xxx.xxx.xxx:/data1/test\n```\n上传过长中出了一个错误,如果是直接上传到tmp就可以，其它的目录就会报错：\nscp permission denied\n\n网上查了下是因为权限不足，于是试了下上传到tmp目录，发现可行，确定是权限的问题之后就将自己的目录权限设置一下，就能正常上传了。\n\nps：权限问题需谨慎，这里给了最高权限。\n\n``` html\n# chmod 777 ./data1\n```\nip\n### 第三步：安装mongodb\n\n``` html\napt-get update\napt-get install mongo\n```\n\n如果不update会报如下错误：\nUnable to locate package mongo\n\n### 第四步：安装pm2\n\n``` html\nnpm install -g pm2\n```\n\n### 第五步：配置nginx解析\n\n检测nginx配置是否正确\n\n``` html\nsudo nginx -t\n```\n\n配置过程中遇到个坑，老是放回helle nginx页面\n\n解决办法是注释掉/etc/nginx/nginx.conf 里面的 include /etc/nginx/sites-enabled/* 这一行;\n\n然后增加如下nginx配置，将80端口反代理到项目端口\n\n比如我在服务端写了个简单的node程序，端口为3000\n\n配置代理如下：\n\n``` html\nserver {\n    listen 80;\n    server_name xxx.xxx.xxx.xxx;\n    location / {\n        proxy_pass http://xxx.xxx.xxx.xxx:3000;\n    }\n}\n```\n\n然后访问xxx.xxx.xxx.xxx:80即可访问到node程序了\n\n至此服务端node搭建网站告一段落，下一步就是申请域名了。\n\n\n找个时间跑个脚本将所有的域名都跑一遍，奶奶的\n\n``` javascript\nvar str = \"abcdefghijklmnopqrstuvwxyz\";\nvar arr = str.split(\"\");\nvar arr30 = \"\";\nvar i, j, k, l = 0,\n\tt = \"\";\n\nfor (i = 0; i <= arr.length; i++) {\n\tfor (j = 0; j <= arr.length; j++) {\n\t\tfor (k = 0; k <= arr.length; k++)\n\t\t\tif (l < 30) {\n\t\t\t\tl++;\n\t\t\t\tif (arr[i] && arr[j] && arr[k]) {\n\t\t\t\t\tt += \"|\" + (arr[i] + \"\" + arr[j] + \"\" + arr[k]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr30+=(\" \"+t);\n\t\t\t\tt = \"\";\n\t\t\t\tl = 0;\n\t\t\t}\n\t}\n}\nconsole.log(arr30);\n```\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/nodejs.md","raw":"---\nlayout: default\ntitle: 服务器端搭建node环境的网站\ndate: 2016-10-23\n---\n\n## {{page.title}}\n\n手贱在网上买了个云服务器，于是想搭个node服务出来。\n\n### 第一步：nodejs的安装\n\n本来在window上和mac上玩的很开心的nodejs变得如此之艰难\n\n下面是踩坑的过程，现在是边记录边实践，最后能否成功，敬请期待！\n\n现在是2016年10月23日 周日 11：10分，make编译中...\n\n#### 通过源码编译安装\n\n首先将nodejs的源码安装包下载下来，然后解压编译\n\n``` html\n#  tar xvf node-v4.6.1.tar.gz \n#  cd node-v4.6.1 \n#  ./configure \n# make \n# make install \n# cp /usr/local/bin/node /usr/sbin/ \n\n查看当前安装的Node的版本 \n# node -v \n\nv0.10.28\n```\nmake编译需要花较长的时间\n\nmake的时候可能会报这个错误：\n\n``` html\nWARNING: failed to autodetect C++ compiler version (CXX=g++)\n```\n\n解决办法，手动编译：\n\n``` html\napt-get install build-essential\n```\n\n11:20编译结束，执行make install，执行完毕.\n\nnode -v输出版本号; 在bin目录下又node和npm两个命令；node安装完成\n\n``` html\n# node -v\nv4.6.1\n\n# cd /usr/local/bin ls\nnode npm\n```\n\n### 第二步：将本地的小网站上传到服务器上去\n\n首先确定服务器上的网站存放目录。\n\n这里我将它放到/data/htdoc/\n\n``` html\n# scp -r /Users/zsr/test ubuntu/@123.xxx.xxx.xxx:/data1/test\n```\n上传过长中出了一个错误,如果是直接上传到tmp就可以，其它的目录就会报错：\nscp permission denied\n\n网上查了下是因为权限不足，于是试了下上传到tmp目录，发现可行，确定是权限的问题之后就将自己的目录权限设置一下，就能正常上传了。\n\nps：权限问题需谨慎，这里给了最高权限。\n\n``` html\n# chmod 777 ./data1\n```\nip\n### 第三步：安装mongodb\n\n``` html\napt-get update\napt-get install mongo\n```\n\n如果不update会报如下错误：\nUnable to locate package mongo\n\n### 第四步：安装pm2\n\n``` html\nnpm install -g pm2\n```\n\n### 第五步：配置nginx解析\n\n检测nginx配置是否正确\n\n``` html\nsudo nginx -t\n```\n\n配置过程中遇到个坑，老是放回helle nginx页面\n\n解决办法是注释掉/etc/nginx/nginx.conf 里面的 include /etc/nginx/sites-enabled/* 这一行;\n\n然后增加如下nginx配置，将80端口反代理到项目端口\n\n比如我在服务端写了个简单的node程序，端口为3000\n\n配置代理如下：\n\n``` html\nserver {\n    listen 80;\n    server_name xxx.xxx.xxx.xxx;\n    location / {\n        proxy_pass http://xxx.xxx.xxx.xxx:3000;\n    }\n}\n```\n\n然后访问xxx.xxx.xxx.xxx:80即可访问到node程序了\n\n至此服务端node搭建网站告一段落，下一步就是申请域名了。\n\n\n找个时间跑个脚本将所有的域名都跑一遍，奶奶的\n\n``` javascript\nvar str = \"abcdefghijklmnopqrstuvwxyz\";\nvar arr = str.split(\"\");\nvar arr30 = \"\";\nvar i, j, k, l = 0,\n\tt = \"\";\n\nfor (i = 0; i <= arr.length; i++) {\n\tfor (j = 0; j <= arr.length; j++) {\n\t\tfor (k = 0; k <= arr.length; k++)\n\t\t\tif (l < 30) {\n\t\t\t\tl++;\n\t\t\t\tif (arr[i] && arr[j] && arr[k]) {\n\t\t\t\t\tt += \"|\" + (arr[i] + \"\" + arr[j] + \"\" + arr[k]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tarr30+=(\" \"+t);\n\t\t\t\tt = \"\";\n\t\t\t\tl = 0;\n\t\t\t}\n\t}\n}\nconsole.log(arr30);\n```\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"nodejs","published":1,"updated":"2016-12-21T01:57:32.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw3z000o81qtz9qrov8q","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>手贱在网上买了个云服务器，于是想搭个node服务出来。</p>\n<h3 id=\"第一步：nodejs的安装\"><a href=\"#第一步：nodejs的安装\" class=\"headerlink\" title=\"第一步：nodejs的安装\"></a>第一步：nodejs的安装</h3><p>本来在window上和mac上玩的很开心的nodejs变得如此之艰难</p>\n<p>下面是踩坑的过程，现在是边记录边实践，最后能否成功，敬请期待！</p>\n<p>现在是2016年10月23日 周日 11：10分，make编译中…</p>\n<h4 id=\"通过源码编译安装\"><a href=\"#通过源码编译安装\" class=\"headerlink\" title=\"通过源码编译安装\"></a>通过源码编译安装</h4><p>首先将nodejs的源码安装包下载下来，然后解压编译</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#  tar xvf node-v4.6.1.tar.gz </div><div class=\"line\">#  cd node-v4.6.1 </div><div class=\"line\">#  ./configure </div><div class=\"line\"># make </div><div class=\"line\"># make install </div><div class=\"line\"># cp /usr/local/bin/node /usr/sbin/ </div><div class=\"line\"></div><div class=\"line\">查看当前安装的Node的版本 </div><div class=\"line\"># node -v </div><div class=\"line\"></div><div class=\"line\">v0.10.28</div></pre></td></tr></table></figure>\n<p>make编译需要花较长的时间</p>\n<p>make的时候可能会报这个错误：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">WARNING: failed to autodetect C++ compiler version (CXX=g++)</div></pre></td></tr></table></figure>\n<p>解决办法，手动编译：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install build-essential</div></pre></td></tr></table></figure>\n<p>11:20编译结束，执行make install，执行完毕.</p>\n<p>node -v输出版本号; 在bin目录下又node和npm两个命令；node安装完成</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># node -v</div><div class=\"line\">v4.6.1</div><div class=\"line\"></div><div class=\"line\"># cd /usr/local/bin ls</div><div class=\"line\">node npm</div></pre></td></tr></table></figure>\n<h3 id=\"第二步：将本地的小网站上传到服务器上去\"><a href=\"#第二步：将本地的小网站上传到服务器上去\" class=\"headerlink\" title=\"第二步：将本地的小网站上传到服务器上去\"></a>第二步：将本地的小网站上传到服务器上去</h3><p>首先确定服务器上的网站存放目录。</p>\n<p>这里我将它放到/data/htdoc/</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># scp -r /Users/zsr/test ubuntu/@123.xxx.xxx.xxx:/data1/test</div></pre></td></tr></table></figure>\n<p>上传过长中出了一个错误,如果是直接上传到tmp就可以，其它的目录就会报错：<br>scp permission denied</p>\n<p>网上查了下是因为权限不足，于是试了下上传到tmp目录，发现可行，确定是权限的问题之后就将自己的目录权限设置一下，就能正常上传了。</p>\n<p>ps：权限问题需谨慎，这里给了最高权限。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chmod 777 ./data1</div></pre></td></tr></table></figure>\n<p>ip</p>\n<h3 id=\"第三步：安装mongodb\"><a href=\"#第三步：安装mongodb\" class=\"headerlink\" title=\"第三步：安装mongodb\"></a>第三步：安装mongodb</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div><div class=\"line\">apt-get install mongo</div></pre></td></tr></table></figure>\n<p>如果不update会报如下错误：<br>Unable to locate package mongo</p>\n<h3 id=\"第四步：安装pm2\"><a href=\"#第四步：安装pm2\" class=\"headerlink\" title=\"第四步：安装pm2\"></a>第四步：安装pm2</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div></pre></td></tr></table></figure>\n<h3 id=\"第五步：配置nginx解析\"><a href=\"#第五步：配置nginx解析\" class=\"headerlink\" title=\"第五步：配置nginx解析\"></a>第五步：配置nginx解析</h3><p>检测nginx配置是否正确</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -t</div></pre></td></tr></table></figure>\n<p>配置过程中遇到个坑，老是放回helle nginx页面</p>\n<p>解决办法是注释掉/etc/nginx/nginx.conf 里面的 include /etc/nginx/sites-enabled/* 这一行;</p>\n<p>然后增加如下nginx配置，将80端口反代理到项目端口</p>\n<p>比如我在服务端写了个简单的node程序，端口为3000</p>\n<p>配置代理如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 80;</div><div class=\"line\">    server_name xxx.xxx.xxx.xxx;</div><div class=\"line\">    location / &#123;</div><div class=\"line\">        proxy_pass http://xxx.xxx.xxx.xxx:3000;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后访问xxx.xxx.xxx.xxx:80即可访问到node程序了</p>\n<p>至此服务端node搭建网站告一段落，下一步就是申请域名了。</p>\n<p>找个时间跑个脚本将所有的域名都跑一遍，奶奶的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> arr30 = <span class=\"string\">\"\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> i, j, k, l = <span class=\"number\">0</span>,</div><div class=\"line\">\tt = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt;= arr.length; i++) &#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt;= arr.length; j++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (k = <span class=\"number\">0</span>; k &lt;= arr.length; k++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (l &lt; <span class=\"number\">30</span>) &#123;</div><div class=\"line\">\t\t\t\tl++;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (arr[i] &amp;&amp; arr[j] &amp;&amp; arr[k]) &#123;</div><div class=\"line\">\t\t\t\t\tt += <span class=\"string\">\"|\"</span> + (arr[i] + <span class=\"string\">\"\"</span> + arr[j] + <span class=\"string\">\"\"</span> + arr[k]);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tarr30+=(<span class=\"string\">\" \"</span>+t);</div><div class=\"line\">\t\t\t\tt = <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t\t\tl = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr30);</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>手贱在网上买了个云服务器，于是想搭个node服务出来。</p>\n<h3 id=\"第一步：nodejs的安装\"><a href=\"#第一步：nodejs的安装\" class=\"headerlink\" title=\"第一步：nodejs的安装\"></a>第一步：nodejs的安装</h3><p>本来在window上和mac上玩的很开心的nodejs变得如此之艰难</p>\n<p>下面是踩坑的过程，现在是边记录边实践，最后能否成功，敬请期待！</p>\n<p>现在是2016年10月23日 周日 11：10分，make编译中…</p>\n<h4 id=\"通过源码编译安装\"><a href=\"#通过源码编译安装\" class=\"headerlink\" title=\"通过源码编译安装\"></a>通过源码编译安装</h4><p>首先将nodejs的源码安装包下载下来，然后解压编译</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">#  tar xvf node-v4.6.1.tar.gz </div><div class=\"line\">#  cd node-v4.6.1 </div><div class=\"line\">#  ./configure </div><div class=\"line\"># make </div><div class=\"line\"># make install </div><div class=\"line\"># cp /usr/local/bin/node /usr/sbin/ </div><div class=\"line\"></div><div class=\"line\">查看当前安装的Node的版本 </div><div class=\"line\"># node -v </div><div class=\"line\"></div><div class=\"line\">v0.10.28</div></pre></td></tr></table></figure>\n<p>make编译需要花较长的时间</p>\n<p>make的时候可能会报这个错误：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">WARNING: failed to autodetect C++ compiler version (CXX=g++)</div></pre></td></tr></table></figure>\n<p>解决办法，手动编译：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get install build-essential</div></pre></td></tr></table></figure>\n<p>11:20编译结束，执行make install，执行完毕.</p>\n<p>node -v输出版本号; 在bin目录下又node和npm两个命令；node安装完成</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"># node -v</div><div class=\"line\">v4.6.1</div><div class=\"line\"></div><div class=\"line\"># cd /usr/local/bin ls</div><div class=\"line\">node npm</div></pre></td></tr></table></figure>\n<h3 id=\"第二步：将本地的小网站上传到服务器上去\"><a href=\"#第二步：将本地的小网站上传到服务器上去\" class=\"headerlink\" title=\"第二步：将本地的小网站上传到服务器上去\"></a>第二步：将本地的小网站上传到服务器上去</h3><p>首先确定服务器上的网站存放目录。</p>\n<p>这里我将它放到/data/htdoc/</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># scp -r /Users/zsr/test ubuntu/@123.xxx.xxx.xxx:/data1/test</div></pre></td></tr></table></figure>\n<p>上传过长中出了一个错误,如果是直接上传到tmp就可以，其它的目录就会报错：<br>scp permission denied</p>\n<p>网上查了下是因为权限不足，于是试了下上传到tmp目录，发现可行，确定是权限的问题之后就将自己的目录权限设置一下，就能正常上传了。</p>\n<p>ps：权限问题需谨慎，这里给了最高权限。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"># chmod 777 ./data1</div></pre></td></tr></table></figure>\n<p>ip</p>\n<h3 id=\"第三步：安装mongodb\"><a href=\"#第三步：安装mongodb\" class=\"headerlink\" title=\"第三步：安装mongodb\"></a>第三步：安装mongodb</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">apt-get update</div><div class=\"line\">apt-get install mongo</div></pre></td></tr></table></figure>\n<p>如果不update会报如下错误：<br>Unable to locate package mongo</p>\n<h3 id=\"第四步：安装pm2\"><a href=\"#第四步：安装pm2\" class=\"headerlink\" title=\"第四步：安装pm2\"></a>第四步：安装pm2</h3><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">npm install -g pm2</div></pre></td></tr></table></figure>\n<h3 id=\"第五步：配置nginx解析\"><a href=\"#第五步：配置nginx解析\" class=\"headerlink\" title=\"第五步：配置nginx解析\"></a>第五步：配置nginx解析</h3><p>检测nginx配置是否正确</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">sudo nginx -t</div></pre></td></tr></table></figure>\n<p>配置过程中遇到个坑，老是放回helle nginx页面</p>\n<p>解决办法是注释掉/etc/nginx/nginx.conf 里面的 include /etc/nginx/sites-enabled/* 这一行;</p>\n<p>然后增加如下nginx配置，将80端口反代理到项目端口</p>\n<p>比如我在服务端写了个简单的node程序，端口为3000</p>\n<p>配置代理如下：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">server &#123;</div><div class=\"line\">    listen 80;</div><div class=\"line\">    server_name xxx.xxx.xxx.xxx;</div><div class=\"line\">    location / &#123;</div><div class=\"line\">        proxy_pass http://xxx.xxx.xxx.xxx:3000;</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>然后访问xxx.xxx.xxx.xxx:80即可访问到node程序了</p>\n<p>至此服务端node搭建网站告一段落，下一步就是申请域名了。</p>\n<p>找个时间跑个脚本将所有的域名都跑一遍，奶奶的</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> str = <span class=\"string\">\"abcdefghijklmnopqrstuvwxyz\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> arr = str.split(<span class=\"string\">\"\"</span>);</div><div class=\"line\"><span class=\"keyword\">var</span> arr30 = <span class=\"string\">\"\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> i, j, k, l = <span class=\"number\">0</span>,</div><div class=\"line\">\tt = <span class=\"string\">\"\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">for</span> (i = <span class=\"number\">0</span>; i &lt;= arr.length; i++) &#123;</div><div class=\"line\">\t<span class=\"keyword\">for</span> (j = <span class=\"number\">0</span>; j &lt;= arr.length; j++) &#123;</div><div class=\"line\">\t\t<span class=\"keyword\">for</span> (k = <span class=\"number\">0</span>; k &lt;= arr.length; k++)</div><div class=\"line\">\t\t\t<span class=\"keyword\">if</span> (l &lt; <span class=\"number\">30</span>) &#123;</div><div class=\"line\">\t\t\t\tl++;</div><div class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> (arr[i] &amp;&amp; arr[j] &amp;&amp; arr[k]) &#123;</div><div class=\"line\">\t\t\t\t\tt += <span class=\"string\">\"|\"</span> + (arr[i] + <span class=\"string\">\"\"</span> + arr[j] + <span class=\"string\">\"\"</span> + arr[k]);</div><div class=\"line\">\t\t\t\t&#125;</div><div class=\"line\">\t\t\t&#125; <span class=\"keyword\">else</span> &#123;</div><div class=\"line\">\t\t\t\tarr30+=(<span class=\"string\">\" \"</span>+t);</div><div class=\"line\">\t\t\t\tt = <span class=\"string\">\"\"</span>;</div><div class=\"line\">\t\t\t\tl = <span class=\"number\">0</span>;</div><div class=\"line\">\t\t\t&#125;</div><div class=\"line\">\t&#125;</div><div class=\"line\">&#125;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(arr30);</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"javascriptObject","date":"2016-10-10T16:00:00.000Z","_content":"\n## {{page.title}}\n\n《JavaScript高级程序设计学习笔记》\n\n面向对象（Object-Oriented, OO）\n\n### 理解对象\n\n1.对象\n\n``` javascript\nvar person = new Object();\n\nperson.name = \"jack\";\n\nperson.sayName = function(){  \n  return this.name;\n}\n```\n\n2.属性 \n\nECMAScript中有两种属性\n\n1）数据属性，数据属性有4个描述其行为的特性\n\n``` html\n[[Configurable]]:表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性改为访问器属性。\n\n[[Enumerable]]:能否通过for-in遍历\n\n[[Writabe]]:是否能修改属性的值\n\n[[value]]:包含这个属性的数据值。从这个位置读属性值，写属性值的时候把新的值保存在这个位置。默认为undefined\n```\n\n要修改属性的默认特性必须使用ECMAScript5的Object.defineProperty()方法。\n\n``` javascript\nvar person = {};\n\nObject.defineProperty(person, \"name\", {  \n  configurable:true, //设置false之后下次用defineProperty修改此属性就会抛错  \n  value: jack\n});\n\n```\n\n2）访问器属性\n\n访问器属性不包含数据值；它们包含一对getter和setter函数；\n\n读取访问器属性的时候会调用getter函数；写入访问器属性的时候会调用setter函数\n\n访问器属性有如下4个特性\n\n``` html\n[[Configurable]]:同上数据属性\n\n[[Enumerable]]:同上数据属性\n\n[[Get]]:在读取属性的时候调用的函数。默认undefined\n\n[[Set]]:在写入属性的时候调用的函数。默认为undefined\n```\n\n3) 访问器属性不能直接定义，必须使用Object.defineProperty()来定义\n\n``` javascript\nvar book = {\n  __year:2016,\n  edition:1\t\n};\n\nObject.defineProperty(book, \"year\", {\n  get: function() {\n    return this.__year;\n  },\n  set: function(newValue) {\n    if (newValue > 2016) {\n      this.__year  = newValue;\n      this.edition += newValue - 2016;\n    }\n  }\n});\n\nbook.year = 2017;\nconsole.log(book.edition); // 2\n```\n\n3) 定义多个属性\n\nECMAScript5定义了一个Object.defineProperties()方法。利用这个方法可以通过描述符一次定义多个属性。\n\n``` javascript\nvar book = {};\n\nObject.defineProperties(book, {\n  __year: { //数据属性\n    value:2016,\n    writable:false\n  },\n  edition: { //数据属性\n    value:1,\n    writable:true\n  },\n  year: { //访问器属性\n    get: function() {\n      return this.__year;\n    },\n    set: function(newValue) {\n      if (newValue > 2016) {\n        this.__year = newValue;\n        this.edition += newValue - 2016;\n      }\n    }\n  }\n});\n```\n\n4) 读取属性的特性\n\n使用ECMAScript5的Ojbect.getOwnPropertyDescriptor()方法，可以取得给定属性的描述符。\n\n``` javascript\n//...上面的例子\n\nvar descriptor = Object.getOwnPropertyDescriptor(book, \"__year\"); \nconsole.log(descriptor.value, descriptor.writable, descriptor.configurable, descriptor.value);\n\n```\n\n--------------------------------\n\n### 创建对象\n\n1.工厂模式\n\n2.构造函数模式\n\n3.原型模式\n\n4.组合使用构造函数模式和原型模式\n\n5.动态原型模式\n\n6.寄生构造函数模式\n\n7.稳妥构造函数模式\n\n---------------------------------\n\n### 继承\n\n许多OO语言都支持两种继承方式：\n\n``` html\n接口继承:继承方法签名\n\n实现继承:继承实际方法\n```\nJavaScript支持实现继承，且继承方式是依靠原型链实现的（es6的class类已经支持继承）\n\n1.原型链继承\n\n2.借用构造函数实现继承\n\n3.组合继承\n\n4.原型式继承\n\n5.寄生继承\n\n6.寄生组合式继承\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/object.md","raw":"---\nlayout: default\ntitle: javascriptObject\ndate: 2016-10-11\n---\n\n## {{page.title}}\n\n《JavaScript高级程序设计学习笔记》\n\n面向对象（Object-Oriented, OO）\n\n### 理解对象\n\n1.对象\n\n``` javascript\nvar person = new Object();\n\nperson.name = \"jack\";\n\nperson.sayName = function(){  \n  return this.name;\n}\n```\n\n2.属性 \n\nECMAScript中有两种属性\n\n1）数据属性，数据属性有4个描述其行为的特性\n\n``` html\n[[Configurable]]:表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性改为访问器属性。\n\n[[Enumerable]]:能否通过for-in遍历\n\n[[Writabe]]:是否能修改属性的值\n\n[[value]]:包含这个属性的数据值。从这个位置读属性值，写属性值的时候把新的值保存在这个位置。默认为undefined\n```\n\n要修改属性的默认特性必须使用ECMAScript5的Object.defineProperty()方法。\n\n``` javascript\nvar person = {};\n\nObject.defineProperty(person, \"name\", {  \n  configurable:true, //设置false之后下次用defineProperty修改此属性就会抛错  \n  value: jack\n});\n\n```\n\n2）访问器属性\n\n访问器属性不包含数据值；它们包含一对getter和setter函数；\n\n读取访问器属性的时候会调用getter函数；写入访问器属性的时候会调用setter函数\n\n访问器属性有如下4个特性\n\n``` html\n[[Configurable]]:同上数据属性\n\n[[Enumerable]]:同上数据属性\n\n[[Get]]:在读取属性的时候调用的函数。默认undefined\n\n[[Set]]:在写入属性的时候调用的函数。默认为undefined\n```\n\n3) 访问器属性不能直接定义，必须使用Object.defineProperty()来定义\n\n``` javascript\nvar book = {\n  __year:2016,\n  edition:1\t\n};\n\nObject.defineProperty(book, \"year\", {\n  get: function() {\n    return this.__year;\n  },\n  set: function(newValue) {\n    if (newValue > 2016) {\n      this.__year  = newValue;\n      this.edition += newValue - 2016;\n    }\n  }\n});\n\nbook.year = 2017;\nconsole.log(book.edition); // 2\n```\n\n3) 定义多个属性\n\nECMAScript5定义了一个Object.defineProperties()方法。利用这个方法可以通过描述符一次定义多个属性。\n\n``` javascript\nvar book = {};\n\nObject.defineProperties(book, {\n  __year: { //数据属性\n    value:2016,\n    writable:false\n  },\n  edition: { //数据属性\n    value:1,\n    writable:true\n  },\n  year: { //访问器属性\n    get: function() {\n      return this.__year;\n    },\n    set: function(newValue) {\n      if (newValue > 2016) {\n        this.__year = newValue;\n        this.edition += newValue - 2016;\n      }\n    }\n  }\n});\n```\n\n4) 读取属性的特性\n\n使用ECMAScript5的Ojbect.getOwnPropertyDescriptor()方法，可以取得给定属性的描述符。\n\n``` javascript\n//...上面的例子\n\nvar descriptor = Object.getOwnPropertyDescriptor(book, \"__year\"); \nconsole.log(descriptor.value, descriptor.writable, descriptor.configurable, descriptor.value);\n\n```\n\n--------------------------------\n\n### 创建对象\n\n1.工厂模式\n\n2.构造函数模式\n\n3.原型模式\n\n4.组合使用构造函数模式和原型模式\n\n5.动态原型模式\n\n6.寄生构造函数模式\n\n7.稳妥构造函数模式\n\n---------------------------------\n\n### 继承\n\n许多OO语言都支持两种继承方式：\n\n``` html\n接口继承:继承方法签名\n\n实现继承:继承实际方法\n```\nJavaScript支持实现继承，且继承方式是依靠原型链实现的（es6的class类已经支持继承）\n\n1.原型链继承\n\n2.借用构造函数实现继承\n\n3.组合继承\n\n4.原型式继承\n\n5.寄生继承\n\n6.寄生组合式继承\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"object","published":1,"updated":"2016-12-21T01:57:16.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw41000r81qtakltrv1f","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>《JavaScript高级程序设计学习笔记》</p>\n<p>面向对象（Object-Oriented, OO）</p>\n<h3 id=\"理解对象\"><a href=\"#理解对象\" class=\"headerlink\" title=\"理解对象\"></a>理解对象</h3><p>1.对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\"></div><div class=\"line\">person.name = <span class=\"string\">\"jack\"</span>;</div><div class=\"line\"></div><div class=\"line\">person.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  </div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2.属性 </p>\n<p>ECMAScript中有两种属性</p>\n<p>1）数据属性，数据属性有4个描述其行为的特性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[Configurable]]:表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性改为访问器属性。</div><div class=\"line\"></div><div class=\"line\">[[Enumerable]]:能否通过for-in遍历</div><div class=\"line\"></div><div class=\"line\">[[Writabe]]:是否能修改属性的值</div><div class=\"line\"></div><div class=\"line\">[[value]]:包含这个属性的数据值。从这个位置读属性值，写属性值的时候把新的值保存在这个位置。默认为undefined</div></pre></td></tr></table></figure>\n<p>要修改属性的默认特性必须使用ECMAScript5的Object.defineProperty()方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> person = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(person, <span class=\"string\">\"name\"</span>, &#123;  </div><div class=\"line\">  <span class=\"attr\">configurable</span>:<span class=\"literal\">true</span>, <span class=\"comment\">//设置false之后下次用defineProperty修改此属性就会抛错  </span></div><div class=\"line\">  value: jack</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2）访问器属性</p>\n<p>访问器属性不包含数据值；它们包含一对getter和setter函数；</p>\n<p>读取访问器属性的时候会调用getter函数；写入访问器属性的时候会调用setter函数</p>\n<p>访问器属性有如下4个特性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[Configurable]]:同上数据属性</div><div class=\"line\"></div><div class=\"line\">[[Enumerable]]:同上数据属性</div><div class=\"line\"></div><div class=\"line\">[[Get]]:在读取属性的时候调用的函数。默认undefined</div><div class=\"line\"></div><div class=\"line\">[[Set]]:在写入属性的时候调用的函数。默认为undefined</div></pre></td></tr></table></figure>\n<p>3) 访问器属性不能直接定义，必须使用Object.defineProperty()来定义</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">  <span class=\"attr\">__year</span>:<span class=\"number\">2016</span>,</div><div class=\"line\">  <span class=\"attr\">edition</span>:<span class=\"number\">1</span>\t</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book, <span class=\"string\">\"year\"</span>, &#123;</div><div class=\"line\">  <span class=\"attr\">get</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.__year;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2016</span>) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.__year  = newValue;</div><div class=\"line\">      <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2016</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">book.year = <span class=\"number\">2017</span>;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(book.edition); <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n<p>3) 定义多个属性</p>\n<p>ECMAScript5定义了一个Object.defineProperties()方法。利用这个方法可以通过描述符一次定义多个属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</div><div class=\"line\">  <span class=\"attr\">__year</span>: &#123; <span class=\"comment\">//数据属性</span></div><div class=\"line\">    value:<span class=\"number\">2016</span>,</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">false</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">edition</span>: &#123; <span class=\"comment\">//数据属性</span></div><div class=\"line\">    value:<span class=\"number\">1</span>,</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">true</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">year</span>: &#123; <span class=\"comment\">//访问器属性</span></div><div class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.__year;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2016</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.__year = newValue;</div><div class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2016</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>4) 读取属性的特性</p>\n<p>使用ECMAScript5的Ojbect.getOwnPropertyDescriptor()方法，可以取得给定属性的描述符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//...上面的例子</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"__year\"</span>); </div><div class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.value, descriptor.writable, descriptor.configurable, descriptor.value);</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>1.工厂模式</p>\n<p>2.构造函数模式</p>\n<p>3.原型模式</p>\n<p>4.组合使用构造函数模式和原型模式</p>\n<p>5.动态原型模式</p>\n<p>6.寄生构造函数模式</p>\n<p>7.稳妥构造函数模式</p>\n<hr>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>许多OO语言都支持两种继承方式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">接口继承:继承方法签名</div><div class=\"line\"></div><div class=\"line\">实现继承:继承实际方法</div></pre></td></tr></table></figure>\n<p>JavaScript支持实现继承，且继承方式是依靠原型链实现的（es6的class类已经支持继承）</p>\n<p>1.原型链继承</p>\n<p>2.借用构造函数实现继承</p>\n<p>3.组合继承</p>\n<p>4.原型式继承</p>\n<p>5.寄生继承</p>\n<p>6.寄生组合式继承</p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>《JavaScript高级程序设计学习笔记》</p>\n<p>面向对象（Object-Oriented, OO）</p>\n<h3 id=\"理解对象\"><a href=\"#理解对象\" class=\"headerlink\" title=\"理解对象\"></a>理解对象</h3><p>1.对象</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> person = <span class=\"keyword\">new</span> <span class=\"built_in\">Object</span>();</div><div class=\"line\"></div><div class=\"line\">person.name = <span class=\"string\">\"jack\"</span>;</div><div class=\"line\"></div><div class=\"line\">person.sayName = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;  </div><div class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.name;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>2.属性 </p>\n<p>ECMAScript中有两种属性</p>\n<p>1）数据属性，数据属性有4个描述其行为的特性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[Configurable]]:表示能否通过delete删除属性从而重新定义属性，能否修改属性的特性，或者能否把属性改为访问器属性。</div><div class=\"line\"></div><div class=\"line\">[[Enumerable]]:能否通过for-in遍历</div><div class=\"line\"></div><div class=\"line\">[[Writabe]]:是否能修改属性的值</div><div class=\"line\"></div><div class=\"line\">[[value]]:包含这个属性的数据值。从这个位置读属性值，写属性值的时候把新的值保存在这个位置。默认为undefined</div></pre></td></tr></table></figure>\n<p>要修改属性的默认特性必须使用ECMAScript5的Object.defineProperty()方法。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> person = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(person, <span class=\"string\">\"name\"</span>, &#123;  </div><div class=\"line\">  <span class=\"attr\">configurable</span>:<span class=\"literal\">true</span>, <span class=\"comment\">//设置false之后下次用defineProperty修改此属性就会抛错  </span></div><div class=\"line\">  value: jack</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>2）访问器属性</p>\n<p>访问器属性不包含数据值；它们包含一对getter和setter函数；</p>\n<p>读取访问器属性的时候会调用getter函数；写入访问器属性的时候会调用setter函数</p>\n<p>访问器属性有如下4个特性</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">[[Configurable]]:同上数据属性</div><div class=\"line\"></div><div class=\"line\">[[Enumerable]]:同上数据属性</div><div class=\"line\"></div><div class=\"line\">[[Get]]:在读取属性的时候调用的函数。默认undefined</div><div class=\"line\"></div><div class=\"line\">[[Set]]:在写入属性的时候调用的函数。默认为undefined</div></pre></td></tr></table></figure>\n<p>3) 访问器属性不能直接定义，必须使用Object.defineProperty()来定义</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;</div><div class=\"line\">  <span class=\"attr\">__year</span>:<span class=\"number\">2016</span>,</div><div class=\"line\">  <span class=\"attr\">edition</span>:<span class=\"number\">1</span>\t</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperty(book, <span class=\"string\">\"year\"</span>, &#123;</div><div class=\"line\">  <span class=\"attr\">get</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.__year;</div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2016</span>) &#123;</div><div class=\"line\">      <span class=\"keyword\">this</span>.__year  = newValue;</div><div class=\"line\">      <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2016</span>;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">book.year = <span class=\"number\">2017</span>;</div><div class=\"line\"><span class=\"built_in\">console</span>.log(book.edition); <span class=\"comment\">// 2</span></div></pre></td></tr></table></figure>\n<p>3) 定义多个属性</p>\n<p>ECMAScript5定义了一个Object.defineProperties()方法。利用这个方法可以通过描述符一次定义多个属性。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">var</span> book = &#123;&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">Object</span>.defineProperties(book, &#123;</div><div class=\"line\">  <span class=\"attr\">__year</span>: &#123; <span class=\"comment\">//数据属性</span></div><div class=\"line\">    value:<span class=\"number\">2016</span>,</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">false</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">edition</span>: &#123; <span class=\"comment\">//数据属性</span></div><div class=\"line\">    value:<span class=\"number\">1</span>,</div><div class=\"line\">    <span class=\"attr\">writable</span>:<span class=\"literal\">true</span></div><div class=\"line\">  &#125;,</div><div class=\"line\">  <span class=\"attr\">year</span>: &#123; <span class=\"comment\">//访问器属性</span></div><div class=\"line\">    get: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.__year;</div><div class=\"line\">    &#125;,</div><div class=\"line\">    <span class=\"attr\">set</span>: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">newValue</span>) </span>&#123;</div><div class=\"line\">      <span class=\"keyword\">if</span> (newValue &gt; <span class=\"number\">2016</span>) &#123;</div><div class=\"line\">        <span class=\"keyword\">this</span>.__year = newValue;</div><div class=\"line\">        <span class=\"keyword\">this</span>.edition += newValue - <span class=\"number\">2016</span>;</div><div class=\"line\">      &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>4) 读取属性的特性</p>\n<p>使用ECMAScript5的Ojbect.getOwnPropertyDescriptor()方法，可以取得给定属性的描述符。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\">//...上面的例子</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">var</span> descriptor = <span class=\"built_in\">Object</span>.getOwnPropertyDescriptor(book, <span class=\"string\">\"__year\"</span>); </div><div class=\"line\"><span class=\"built_in\">console</span>.log(descriptor.value, descriptor.writable, descriptor.configurable, descriptor.value);</div></pre></td></tr></table></figure>\n<hr>\n<h3 id=\"创建对象\"><a href=\"#创建对象\" class=\"headerlink\" title=\"创建对象\"></a>创建对象</h3><p>1.工厂模式</p>\n<p>2.构造函数模式</p>\n<p>3.原型模式</p>\n<p>4.组合使用构造函数模式和原型模式</p>\n<p>5.动态原型模式</p>\n<p>6.寄生构造函数模式</p>\n<p>7.稳妥构造函数模式</p>\n<hr>\n<h3 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h3><p>许多OO语言都支持两种继承方式：</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">接口继承:继承方法签名</div><div class=\"line\"></div><div class=\"line\">实现继承:继承实际方法</div></pre></td></tr></table></figure>\n<p>JavaScript支持实现继承，且继承方式是依靠原型链实现的（es6的class类已经支持继承）</p>\n<p>1.原型链继承</p>\n<p>2.借用构造函数实现继承</p>\n<p>3.组合继承</p>\n<p>4.原型式继承</p>\n<p>5.寄生继承</p>\n<p>6.寄生组合式继承</p>\n"},{"layout":"default","title":"nodeAndPm2","date":"2016-03-28T16:00:00.000Z","_content":"\n## {{page.title}}\n\n如果是用npm start\n\n切换方式为：\n\n```\n\nset NODE_ENV=production&& npm start\n\nset port=端口号\n\n*linux 使用 export代替set\n\nexport -p 列出当前的所有环境变量\n\n```\n\n## pm2\n\n切换方式为：\n\n```\n\npm2 start app.json --env production\n\npm2 restart app.json --env production\n\n```\n\n如果使用了pm2，app.json\n\neg:\n\n```\n\n{\n\t\"apps\":[{\n\t\t\"name\":\"appName\",\n\t\t\"script\":\"bin/www\",\n\t\t\"log_date_format\":\"YYYY-MM-DD HH:mm:SS\",\n\t\t\"merge_logs\":true,\n\t\t\"log_file\":\"../logpath/file.log\",\n\t\t\"error_file\":\"../logpath/err.log\",\n\t\t\"out_file\":\"../logpath/out.log\",\n\t\t\"pid_file\":\"../logpath/file.pid\",\n\t\t\"exec_mode\":\"fork_mode\",\n\t\t\"watch\":true,\n\t\t\"env\":{\n\t\t\t\"NODE_ENV\":\"development\",\n\t\t\t\"PORT\":80\n\t\t},\n\t\t\"env_test\":{\n\t\t\t\"NODE_ENV\":\"test\",\n\t\t},\n\t\t\"env_production\":{\n\t\t\t\"NODE_ENV\":\"production\",\n\t\t\t\"PORT\":80\n\t\t}\n\t}]\n}\n\n```\n\n启动示例为：pm2 start app.json --env test\n\n\n\npm2传送门：\n\n[https://github.com/Unitech/pm2](https://github.com/Unitech/pm2){:target=\"_blank\"}  \n\nnodejs传送门：\n\n[https://nodejs.org/dist/latest-v5.x/docs/api/](https://nodejs.org/dist/latest-v5.x/docs/api/){:target=\"_blank\"}  \n\nnodejs中文传送门：\n\n[http://nodeapi.ucdok.com/#/api/](http://nodeapi.ucdok.com/#/api/){:target=\"_blank\"}  \n\n\n","source":"_posts/pm2.md","raw":"---\nlayout: default\ntitle: nodeAndPm2\ndate: 2016-03-29\n---\n\n## {{page.title}}\n\n如果是用npm start\n\n切换方式为：\n\n```\n\nset NODE_ENV=production&& npm start\n\nset port=端口号\n\n*linux 使用 export代替set\n\nexport -p 列出当前的所有环境变量\n\n```\n\n## pm2\n\n切换方式为：\n\n```\n\npm2 start app.json --env production\n\npm2 restart app.json --env production\n\n```\n\n如果使用了pm2，app.json\n\neg:\n\n```\n\n{\n\t\"apps\":[{\n\t\t\"name\":\"appName\",\n\t\t\"script\":\"bin/www\",\n\t\t\"log_date_format\":\"YYYY-MM-DD HH:mm:SS\",\n\t\t\"merge_logs\":true,\n\t\t\"log_file\":\"../logpath/file.log\",\n\t\t\"error_file\":\"../logpath/err.log\",\n\t\t\"out_file\":\"../logpath/out.log\",\n\t\t\"pid_file\":\"../logpath/file.pid\",\n\t\t\"exec_mode\":\"fork_mode\",\n\t\t\"watch\":true,\n\t\t\"env\":{\n\t\t\t\"NODE_ENV\":\"development\",\n\t\t\t\"PORT\":80\n\t\t},\n\t\t\"env_test\":{\n\t\t\t\"NODE_ENV\":\"test\",\n\t\t},\n\t\t\"env_production\":{\n\t\t\t\"NODE_ENV\":\"production\",\n\t\t\t\"PORT\":80\n\t\t}\n\t}]\n}\n\n```\n\n启动示例为：pm2 start app.json --env test\n\n\n\npm2传送门：\n\n[https://github.com/Unitech/pm2](https://github.com/Unitech/pm2){:target=\"_blank\"}  \n\nnodejs传送门：\n\n[https://nodejs.org/dist/latest-v5.x/docs/api/](https://nodejs.org/dist/latest-v5.x/docs/api/){:target=\"_blank\"}  \n\nnodejs中文传送门：\n\n[http://nodeapi.ucdok.com/#/api/](http://nodeapi.ucdok.com/#/api/){:target=\"_blank\"}  \n\n\n","slug":"pm2","published":1,"updated":"2016-12-21T01:54:53.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw42000t81qtnw9032vz","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>如果是用npm start</p>\n<p>切换方式为：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> NODE_ENV=production&amp;&amp; npm <span class=\"comment\">start</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"comment\">port=</span>端口号</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">*linux 使用 export代替set</span></div><div class=\"line\"></div><div class=\"line\">export <span class=\"comment\">-p</span> 列出当前的所有环境变量</div></pre></td></tr></table></figure>\n<h2 id=\"pm2\"><a href=\"#pm2\" class=\"headerlink\" title=\"pm2\"></a>pm2</h2><p>切换方式为：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">pm2 start app<span class=\"selector-class\">.json</span> --env production</div><div class=\"line\"></div><div class=\"line\">pm2 restart app<span class=\"selector-class\">.json</span> --env production</div></pre></td></tr></table></figure>\n<p>如果使用了pm2，app.json</p>\n<p>eg:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"apps\"</span>:[&#123;</div><div class=\"line\">\t\t<span class=\"attr\">\"name\"</span>:<span class=\"string\">\"appName\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"script\"</span>:<span class=\"string\">\"bin/www\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"log_date_format\"</span>:<span class=\"string\">\"YYYY-MM-DD HH:mm:SS\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"merge_logs\"</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"log_file\"</span>:<span class=\"string\">\"../logpath/file.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"error_file\"</span>:<span class=\"string\">\"../logpath/err.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"out_file\"</span>:<span class=\"string\">\"../logpath/out.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"pid_file\"</span>:<span class=\"string\">\"../logpath/file.pid\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"exec_mode\"</span>:<span class=\"string\">\"fork_mode\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"watch\"</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"env\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"development\"</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">\"PORT\"</span>:<span class=\"number\">80</span></div><div class=\"line\">\t\t&#125;,</div><div class=\"line\">\t\t<span class=\"attr\">\"env_test\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"test\"</span>,</div><div class=\"line\">\t\t&#125;,</div><div class=\"line\">\t\t<span class=\"attr\">\"env_production\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"production\"</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">\"PORT\"</span>:<span class=\"number\">80</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>启动示例为：pm2 start app.json –env test</p>\n<p>pm2传送门：</p>\n<p><a href=\"https://github.com/Unitech/pm2\" target=\"_blank\" rel=\"external\">https://github.com/Unitech/pm2</a>{:target=”_blank”}  </p>\n<p>nodejs传送门：</p>\n<p><a href=\"https://nodejs.org/dist/latest-v5.x/docs/api/\" target=\"_blank\" rel=\"external\">https://nodejs.org/dist/latest-v5.x/docs/api/</a>{:target=”_blank”}  </p>\n<p>nodejs中文传送门：</p>\n<p><a href=\"http://nodeapi.ucdok.com/#/api/\" target=\"_blank\" rel=\"external\">http://nodeapi.ucdok.com/#/api/</a>{:target=”_blank”}  </p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>如果是用npm start</p>\n<p>切换方式为：</p>\n<figure class=\"highlight gams\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> NODE_ENV=production&amp;&amp; npm <span class=\"comment\">start</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">set</span> <span class=\"comment\">port=</span>端口号</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">*linux 使用 export代替set</span></div><div class=\"line\"></div><div class=\"line\">export <span class=\"comment\">-p</span> 列出当前的所有环境变量</div></pre></td></tr></table></figure>\n<h2 id=\"pm2\"><a href=\"#pm2\" class=\"headerlink\" title=\"pm2\"></a>pm2</h2><p>切换方式为：</p>\n<figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">pm2 start app<span class=\"selector-class\">.json</span> --env production</div><div class=\"line\"></div><div class=\"line\">pm2 restart app<span class=\"selector-class\">.json</span> --env production</div></pre></td></tr></table></figure>\n<p>如果使用了pm2，app.json</p>\n<p>eg:</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\">&#123;</div><div class=\"line\">\t<span class=\"attr\">\"apps\"</span>:[&#123;</div><div class=\"line\">\t\t<span class=\"attr\">\"name\"</span>:<span class=\"string\">\"appName\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"script\"</span>:<span class=\"string\">\"bin/www\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"log_date_format\"</span>:<span class=\"string\">\"YYYY-MM-DD HH:mm:SS\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"merge_logs\"</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"log_file\"</span>:<span class=\"string\">\"../logpath/file.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"error_file\"</span>:<span class=\"string\">\"../logpath/err.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"out_file\"</span>:<span class=\"string\">\"../logpath/out.log\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"pid_file\"</span>:<span class=\"string\">\"../logpath/file.pid\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"exec_mode\"</span>:<span class=\"string\">\"fork_mode\"</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"watch\"</span>:<span class=\"literal\">true</span>,</div><div class=\"line\">\t\t<span class=\"attr\">\"env\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"development\"</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">\"PORT\"</span>:<span class=\"number\">80</span></div><div class=\"line\">\t\t&#125;,</div><div class=\"line\">\t\t<span class=\"attr\">\"env_test\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"test\"</span>,</div><div class=\"line\">\t\t&#125;,</div><div class=\"line\">\t\t<span class=\"attr\">\"env_production\"</span>:&#123;</div><div class=\"line\">\t\t\t<span class=\"attr\">\"NODE_ENV\"</span>:<span class=\"string\">\"production\"</span>,</div><div class=\"line\">\t\t\t<span class=\"attr\">\"PORT\"</span>:<span class=\"number\">80</span></div><div class=\"line\">\t\t&#125;</div><div class=\"line\">\t&#125;]</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>启动示例为：pm2 start app.json –env test</p>\n<p>pm2传送门：</p>\n<p><a href=\"https://github.com/Unitech/pm2\">https://github.com/Unitech/pm2</a>{:target=”_blank”}  </p>\n<p>nodejs传送门：</p>\n<p><a href=\"https://nodejs.org/dist/latest-v5.x/docs/api/\">https://nodejs.org/dist/latest-v5.x/docs/api/</a>{:target=”_blank”}  </p>\n<p>nodejs中文传送门：</p>\n<p><a href=\"http://nodeapi.ucdok.com/#/api/\">http://nodeapi.ucdok.com/#/api/</a>{:target=”_blank”}  </p>\n"},{"layout":"default","title":"sublimeText3Learn","date":"2016-04-11T16:00:00.000Z","_content":"\n*下列快捷键验证使用环境为mac，如果是win环境不支持，可以将commond键换成ctl试试\n\n\n## {{page.title}}\n\n### 选择类\n\n```\ncommand+shift+ [ || ] —— 切换当前在sublime中tab打开的文件\n\nctl+k+(f0-f9) —— 折叠、取消折叠\n\nctl+d —— 选择当前选中元素同样的字符\n\nctl+l —— 选中当前行\n\nctl+shift+l —— 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 \n\nctl+shift+m —— 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。\n\nctl+m —— 光标移动至括号内结束或开始的位置。\n\ncommand+enter —— 在下一行插入新行，即使当前光标不在行尾\n\ncommand+shift+enter —— 在上一行插入新行，即使当前光标不在行首\n\ncommand+左（右） —— 移动光标到行头（行尾）\n\ncommand+shift+左（右） —— 移动光标到行头（行尾）并选中\n```\n\n### 编辑类\n\n\n```\ncommand+j —— 合并选中的多行为一行，不选择则默认当前行和下一行\n\ncommand+shift+d —— 复制光标所在整行，插入到下一行。\n\nTab —— 向右缩进。\n\nShift+Tab —— 向左缩进。\n\n\nctl+k —— 从当前光标删除到行尾\n\nctl+shift+k —— 删除整行\n\ncommand+/ —— 注释单行\n\ncommand+z —— 撤销\n\ncommand+y —— 恢复撤销\n\nctl+t —— 交换光标左右的字符\n\ncommand+k+b —— 显示隐藏侧边栏\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/sublime-text.md","raw":"---\nlayout: default\ntitle: sublimeText3Learn\ndate: 2016-04-12\n---\n\n*下列快捷键验证使用环境为mac，如果是win环境不支持，可以将commond键换成ctl试试\n\n\n## {{page.title}}\n\n### 选择类\n\n```\ncommand+shift+ [ || ] —— 切换当前在sublime中tab打开的文件\n\nctl+k+(f0-f9) —— 折叠、取消折叠\n\nctl+d —— 选择当前选中元素同样的字符\n\nctl+l —— 选中当前行\n\nctl+shift+l —— 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 \n\nctl+shift+m —— 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。\n\nctl+m —— 光标移动至括号内结束或开始的位置。\n\ncommand+enter —— 在下一行插入新行，即使当前光标不在行尾\n\ncommand+shift+enter —— 在上一行插入新行，即使当前光标不在行首\n\ncommand+左（右） —— 移动光标到行头（行尾）\n\ncommand+shift+左（右） —— 移动光标到行头（行尾）并选中\n```\n\n### 编辑类\n\n\n```\ncommand+j —— 合并选中的多行为一行，不选择则默认当前行和下一行\n\ncommand+shift+d —— 复制光标所在整行，插入到下一行。\n\nTab —— 向右缩进。\n\nShift+Tab —— 向左缩进。\n\n\nctl+k —— 从当前光标删除到行尾\n\nctl+shift+k —— 删除整行\n\ncommand+/ —— 注释单行\n\ncommand+z —— 撤销\n\ncommand+y —— 恢复撤销\n\nctl+t —— 交换光标左右的字符\n\ncommand+k+b —— 显示隐藏侧边栏\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"sublime-text","published":1,"updated":"2016-12-21T01:54:47.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw44000u81qtd7xeumc8","content":"<p>*下列快捷键验证使用环境为mac，如果是win环境不支持，可以将commond键换成ctl试试</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"选择类\"><a href=\"#选择类\" class=\"headerlink\" title=\"选择类\"></a>选择类</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+ [ || ] —— 切换当前在sublime中tab打开的文件</div><div class=\"line\"></div><div class=\"line\">ctl+k+(f0<span class=\"_\">-f</span>9) —— 折叠、取消折叠</div><div class=\"line\"></div><div class=\"line\">ctl+d —— 选择当前选中元素同样的字符</div><div class=\"line\"></div><div class=\"line\">ctl+l —— 选中当前行</div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"built_in\">shift</span>+l —— 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 </div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"built_in\">shift</span>+m —— 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</div><div class=\"line\"></div><div class=\"line\">ctl+m —— 光标移动至括号内结束或开始的位置。</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+enter —— 在下一行插入新行，即使当前光标不在行尾</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+enter —— 在上一行插入新行，即使当前光标不在行首</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+左（右） —— 移动光标到行头（行尾）</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+左（右） —— 移动光标到行头（行尾）并选中</div></pre></td></tr></table></figure>\n<h3 id=\"编辑类\"><a href=\"#编辑类\" class=\"headerlink\" title=\"编辑类\"></a>编辑类</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">j</span> —— 合并选中的多行为一行，不选择则默认当前行和下一行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">shift</span>+<span class=\"title\">d</span> —— 复制光标所在整行，插入到下一行。</div><div class=\"line\"></div><div class=\"line\">Tab —— 向右缩进。</div><div class=\"line\"></div><div class=\"line\">Shift+Tab —— 向左缩进。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ctl+k —— 从当前光标删除到行尾</div><div class=\"line\"></div><div class=\"line\">ctl+shift+k —— 删除整行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+/ —— 注释单行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">z</span> —— 撤销</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">y</span> —— 恢复撤销</div><div class=\"line\"></div><div class=\"line\">ctl+t —— 交换光标左右的字符</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">k</span>+<span class=\"title\">b</span> —— 显示隐藏侧边栏</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<p>*下列快捷键验证使用环境为mac，如果是win环境不支持，可以将commond键换成ctl试试</p>\n<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"选择类\"><a href=\"#选择类\" class=\"headerlink\" title=\"选择类\"></a>选择类</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+ [ || ] —— 切换当前在sublime中tab打开的文件</div><div class=\"line\"></div><div class=\"line\">ctl+k+(f0<span class=\"_\">-f</span>9) —— 折叠、取消折叠</div><div class=\"line\"></div><div class=\"line\">ctl+d —— 选择当前选中元素同样的字符</div><div class=\"line\"></div><div class=\"line\">ctl+l —— 选中当前行</div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"built_in\">shift</span>+l —— 先选中多行，再按下快捷键，会在每行行尾插入光标，即可同时编辑这些行。 </div><div class=\"line\"></div><div class=\"line\">ctl+<span class=\"built_in\">shift</span>+m —— 选择括号内的内容（继续选择父括号）。举个栗子：快速选中删除函数中的代码，重写函数体代码或重写括号内里的内容。</div><div class=\"line\"></div><div class=\"line\">ctl+m —— 光标移动至括号内结束或开始的位置。</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+enter —— 在下一行插入新行，即使当前光标不在行尾</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+enter —— 在上一行插入新行，即使当前光标不在行首</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+左（右） —— 移动光标到行头（行尾）</div><div class=\"line\"></div><div class=\"line\"><span class=\"built_in\">command</span>+<span class=\"built_in\">shift</span>+左（右） —— 移动光标到行头（行尾）并选中</div></pre></td></tr></table></figure>\n<h3 id=\"编辑类\"><a href=\"#编辑类\" class=\"headerlink\" title=\"编辑类\"></a>编辑类</h3><figure class=\"highlight livecodeserver\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">j</span> —— 合并选中的多行为一行，不选择则默认当前行和下一行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">shift</span>+<span class=\"title\">d</span> —— 复制光标所在整行，插入到下一行。</div><div class=\"line\"></div><div class=\"line\">Tab —— 向右缩进。</div><div class=\"line\"></div><div class=\"line\">Shift+Tab —— 向左缩进。</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\">ctl+k —— 从当前光标删除到行尾</div><div class=\"line\"></div><div class=\"line\">ctl+shift+k —— 删除整行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+/ —— 注释单行</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">z</span> —— 撤销</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">y</span> —— 恢复撤销</div><div class=\"line\"></div><div class=\"line\">ctl+t —— 交换光标左右的字符</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">command</span>+<span class=\"title\">k</span>+<span class=\"title\">b</span> —— 显示隐藏侧边栏</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"reactLearn","date":"2016-09-24T16:00:00.000Z","_content":"\n## {{page.title}}\n\n### Flux\n\nFlux将应用分为4个部分\n\n``` html\nView 视图\n\nAction 行为\n\nDispatcher 分发器\n\nStore 数据层，用于存放应用状态，一旦发生变动，就提醒views更新页面\n```\n\nFlux最大的特点就是单项数据流动\n\n``` html\n1.用户访问View\n\n2.View发出用户的Action\n\n3.Dispather接收到用户的Action，要求Store进行相应更新\n\n4.Store更新之后，发出一个change事件\n\n5.View接收到change事件之后更新页面\n```\n如图所示：（图片来源:http://www.ruanyifeng.com/）\n\n<img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016011503.png\" style=\"width:100%;border-radius:8px;\" alt=\"\">\n\n### Redux\n\n只有遇到React解决不了的问题，你才需要Redux\n\n如果UI层非常简单，没有很多交互，Redux就不是必要的\n\n#### Redux设计思想\n\n``` html\n1.web应用是一个状态机，视图与状态是一一对应的\n\n2.所有的状态保存在一个对象里\n```\n\n#### 基本概念和API\n\n##### 1.Store\n\n保存数据的地方，可以将其看做是一个容器。整个应用只能有一个Store\n\n``` javascript\nimport {createStore} from \"redux\";\n\nconst store = createStore(fn);\n```\n\n##### 2.State\n\n保存所有的数据，如果想得到某个时点的数据，就要对Store生成快照。这种时点的数据集合就叫做State\n\n``` javascript\nimport {createStore} from \"redux\";\n\nconst store = createStore(fn);\n\nconst state = store.getState();\n```\n\nRedux规定，一个State对应一个View。只要State相同，View就相同。知道State就能知道View是什么样，反之亦然。\n\n##### 3.Action\n\nAction为View发出的通知，表示State将要发生变化\n\nAction描述当前发生的事情。改变State的唯一办法就是通过Action将数据运送到Store\n\n``` javascript\nconst action = {\n    type: \"ADD_TODO\", // Action的名称\n    payload: \"LEARN Redux\" // Action携带的字符串信息\n};\n```\n\n#### 4.Action Creater\n\n定义一个函数，用来自动生成Action，这个函数就叫做Action Creator\n\n``` javascript\nconst ADD_TODO = \"添加 TODO\";\n\nfunction addToDo(text) {\n    return {\n        type: ADD_TODO,\n        text\n    }\n}\n\nconst action = addToDo(Learn Redux);\n```\n\n#### 5.store.dispatch()\n\nstore.dispatch()是View唯一发出Action的方法\n\n``` javascript\nimport {createStore} form \"redux\";\n\nconst store = createStore(fn);\n\nstore.dispatch({\n    type: \"ADD_TODO\",\n    payload: \"Learn Redux\",\n});\n```\nstore.dispatch接受一个Action对象作为参数，将它发送出去\n\n结合Action Creater\n\n``` javascript\nstore.dispatch(addToDo(\"Learn Redux\"));\n```\n\n#### 6.Reducer\n\nStore收到一个Action之后必须给出一个新的State，这样View才会发生变化。这种State的计算过程就叫做Reducer\n\nReducer是一个函数，它接受Action和当前的State作为参数，返回一个新的State\n\n``` javascript\nconst Reducer = function(state, action){\n    //...\n    return new_state;\n}\n```\n\n#### 7.纯函数\n\nReducer最重要的特点是它是一个纯函数\n\n#### 8.store.subscribe()\n\nStore允许使用Store.subscribe方法设置监听函数，一旦State发生变化就自动执行这个函数\n\n``` javascript\nimport {createStore} from \"redux\";\nconst store = createStore(reducer);\n\nstore.subscribe(listener);\n```\n\n解除监听，store.subscribe方法返回一个函数，调用这个函数即可解除监听\n\n``` javascript\nconst unsubscribe = store.subscribe(() => \n    console.log(store.getState());\n);\nunsubscribe();\n```\n\n### Store的实现\n\nStore提供了三个方法\n\n``` javascript\nstore.getState();\n\nstore.dispatch();\n\nstore.subscribe();\n```\n\n``` javascript\nimport {createStore} from \"redux\";\nlet {subscribe, dispatch, getState} = createStore(reducer);\n```\n\n### Reducer拆分\n\nReducer负责生成State，由于一个项目只有一个State，导致这个State会非常庞大，因此需要拆分\n\nRedux提供了一个combineReducers方法。用这个方法可以将各个子Reducer合并成一个大的Reducer\n\n``` javascript\nimport {combineReducers} form \"redux\";\n\nconst chatReducer = combineReducers(){\n    chatLog,\n    statusMessage,\n    userName\n};\n\nexport default todoApp;\n```\n\n可以将所有的子Reducer放在一个文件里面，然后统一引入\n\n``` javascript\nimport {combineReducers} form \"redux\";\nimport * as reducers from \"./reducers\";\n\nconst reducer = combineReducers(reducers); \n```\n\n\n### 工作流程\n\n如图所示：（图片来源:http://www.ruanyifeng.com/）\n\n<img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091802.jpg\" style=\"width:100%;border-radius:8px;\" alt=\"\">\n\n首先：用户发出action\n\n``` javascript\nstore.dispatch(actioin);\n```\n\n然后：Store自动调用Reducer，并传入两个参数（当前State和Action）。Reducer会返回新的State\n\n``` javascript\nlet nextState = todoApp(previousState, action);\n```\n\n一旦State出现变化，Store调用监听函数\n\n``` javascript\nstore.subscribe(listener);\n```\nlistener可以通过store.getState()获取当前状态。\n\n``` javascript\nfunction listener(){\n    let newState = store.getState();\n    component.setState(newState);\n}\n```\n\n\n---------------------------------------\n\n#### babel官网\n<a href=\"https://babeljs.io/\" target=\"_blank\">https://babeljs.io/</a>\n\n\n#### react官网\n<a href=\"https://facebook.github.io/react/\" target=\"_blank\">https://facebook.github.io/react/</a>\n\n\n#### redux中文文档\n<a href=\"http://cn.redux.js.org/\" target=\"_blank\">http://cn.redux.js.org/</a>\n\n\n#### redux介绍（segmentfault）\n<a href=\"https://segmentfault.com/a/1190000003503338?_ea=323420\" target=\"_blank\">https://segmentfault.com/a/1190000003503338?_ea=323420</a>\n\n\n#### react入门实践\n<a href=\"http://www.jianshu.com/p/808bb43b3744\" target=\"_blank\">http://www.jianshu.com/p/808bb43b3744</a>\n\n\n#### 阮一峰react系列教程\n<a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" >http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html</a>\n\n\n\n","source":"_posts/react.md","raw":"---\nlayout: default\ntitle: reactLearn\ndate: 2016-09-25\n---\n\n## {{page.title}}\n\n### Flux\n\nFlux将应用分为4个部分\n\n``` html\nView 视图\n\nAction 行为\n\nDispatcher 分发器\n\nStore 数据层，用于存放应用状态，一旦发生变动，就提醒views更新页面\n```\n\nFlux最大的特点就是单项数据流动\n\n``` html\n1.用户访问View\n\n2.View发出用户的Action\n\n3.Dispather接收到用户的Action，要求Store进行相应更新\n\n4.Store更新之后，发出一个change事件\n\n5.View接收到change事件之后更新页面\n```\n如图所示：（图片来源:http://www.ruanyifeng.com/）\n\n<img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016011503.png\" style=\"width:100%;border-radius:8px;\" alt=\"\">\n\n### Redux\n\n只有遇到React解决不了的问题，你才需要Redux\n\n如果UI层非常简单，没有很多交互，Redux就不是必要的\n\n#### Redux设计思想\n\n``` html\n1.web应用是一个状态机，视图与状态是一一对应的\n\n2.所有的状态保存在一个对象里\n```\n\n#### 基本概念和API\n\n##### 1.Store\n\n保存数据的地方，可以将其看做是一个容器。整个应用只能有一个Store\n\n``` javascript\nimport {createStore} from \"redux\";\n\nconst store = createStore(fn);\n```\n\n##### 2.State\n\n保存所有的数据，如果想得到某个时点的数据，就要对Store生成快照。这种时点的数据集合就叫做State\n\n``` javascript\nimport {createStore} from \"redux\";\n\nconst store = createStore(fn);\n\nconst state = store.getState();\n```\n\nRedux规定，一个State对应一个View。只要State相同，View就相同。知道State就能知道View是什么样，反之亦然。\n\n##### 3.Action\n\nAction为View发出的通知，表示State将要发生变化\n\nAction描述当前发生的事情。改变State的唯一办法就是通过Action将数据运送到Store\n\n``` javascript\nconst action = {\n    type: \"ADD_TODO\", // Action的名称\n    payload: \"LEARN Redux\" // Action携带的字符串信息\n};\n```\n\n#### 4.Action Creater\n\n定义一个函数，用来自动生成Action，这个函数就叫做Action Creator\n\n``` javascript\nconst ADD_TODO = \"添加 TODO\";\n\nfunction addToDo(text) {\n    return {\n        type: ADD_TODO,\n        text\n    }\n}\n\nconst action = addToDo(Learn Redux);\n```\n\n#### 5.store.dispatch()\n\nstore.dispatch()是View唯一发出Action的方法\n\n``` javascript\nimport {createStore} form \"redux\";\n\nconst store = createStore(fn);\n\nstore.dispatch({\n    type: \"ADD_TODO\",\n    payload: \"Learn Redux\",\n});\n```\nstore.dispatch接受一个Action对象作为参数，将它发送出去\n\n结合Action Creater\n\n``` javascript\nstore.dispatch(addToDo(\"Learn Redux\"));\n```\n\n#### 6.Reducer\n\nStore收到一个Action之后必须给出一个新的State，这样View才会发生变化。这种State的计算过程就叫做Reducer\n\nReducer是一个函数，它接受Action和当前的State作为参数，返回一个新的State\n\n``` javascript\nconst Reducer = function(state, action){\n    //...\n    return new_state;\n}\n```\n\n#### 7.纯函数\n\nReducer最重要的特点是它是一个纯函数\n\n#### 8.store.subscribe()\n\nStore允许使用Store.subscribe方法设置监听函数，一旦State发生变化就自动执行这个函数\n\n``` javascript\nimport {createStore} from \"redux\";\nconst store = createStore(reducer);\n\nstore.subscribe(listener);\n```\n\n解除监听，store.subscribe方法返回一个函数，调用这个函数即可解除监听\n\n``` javascript\nconst unsubscribe = store.subscribe(() => \n    console.log(store.getState());\n);\nunsubscribe();\n```\n\n### Store的实现\n\nStore提供了三个方法\n\n``` javascript\nstore.getState();\n\nstore.dispatch();\n\nstore.subscribe();\n```\n\n``` javascript\nimport {createStore} from \"redux\";\nlet {subscribe, dispatch, getState} = createStore(reducer);\n```\n\n### Reducer拆分\n\nReducer负责生成State，由于一个项目只有一个State，导致这个State会非常庞大，因此需要拆分\n\nRedux提供了一个combineReducers方法。用这个方法可以将各个子Reducer合并成一个大的Reducer\n\n``` javascript\nimport {combineReducers} form \"redux\";\n\nconst chatReducer = combineReducers(){\n    chatLog,\n    statusMessage,\n    userName\n};\n\nexport default todoApp;\n```\n\n可以将所有的子Reducer放在一个文件里面，然后统一引入\n\n``` javascript\nimport {combineReducers} form \"redux\";\nimport * as reducers from \"./reducers\";\n\nconst reducer = combineReducers(reducers); \n```\n\n\n### 工作流程\n\n如图所示：（图片来源:http://www.ruanyifeng.com/）\n\n<img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091802.jpg\" style=\"width:100%;border-radius:8px;\" alt=\"\">\n\n首先：用户发出action\n\n``` javascript\nstore.dispatch(actioin);\n```\n\n然后：Store自动调用Reducer，并传入两个参数（当前State和Action）。Reducer会返回新的State\n\n``` javascript\nlet nextState = todoApp(previousState, action);\n```\n\n一旦State出现变化，Store调用监听函数\n\n``` javascript\nstore.subscribe(listener);\n```\nlistener可以通过store.getState()获取当前状态。\n\n``` javascript\nfunction listener(){\n    let newState = store.getState();\n    component.setState(newState);\n}\n```\n\n\n---------------------------------------\n\n#### babel官网\n<a href=\"https://babeljs.io/\" target=\"_blank\">https://babeljs.io/</a>\n\n\n#### react官网\n<a href=\"https://facebook.github.io/react/\" target=\"_blank\">https://facebook.github.io/react/</a>\n\n\n#### redux中文文档\n<a href=\"http://cn.redux.js.org/\" target=\"_blank\">http://cn.redux.js.org/</a>\n\n\n#### redux介绍（segmentfault）\n<a href=\"https://segmentfault.com/a/1190000003503338?_ea=323420\" target=\"_blank\">https://segmentfault.com/a/1190000003503338?_ea=323420</a>\n\n\n#### react入门实践\n<a href=\"http://www.jianshu.com/p/808bb43b3744\" target=\"_blank\">http://www.jianshu.com/p/808bb43b3744</a>\n\n\n#### 阮一峰react系列教程\n<a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" >http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html</a>\n\n\n\n","slug":"react","published":1,"updated":"2016-12-21T01:56:39.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw46000v81qt1aszsu9f","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"Flux\"><a href=\"#Flux\" class=\"headerlink\" title=\"Flux\"></a>Flux</h3><p>Flux将应用分为4个部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">View 视图</div><div class=\"line\"></div><div class=\"line\">Action 行为</div><div class=\"line\"></div><div class=\"line\">Dispatcher 分发器</div><div class=\"line\"></div><div class=\"line\">Store 数据层，用于存放应用状态，一旦发生变动，就提醒views更新页面</div></pre></td></tr></table></figure>\n<p>Flux最大的特点就是单项数据流动</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.用户访问View</div><div class=\"line\"></div><div class=\"line\">2.View发出用户的Action</div><div class=\"line\"></div><div class=\"line\">3.Dispather接收到用户的Action，要求Store进行相应更新</div><div class=\"line\"></div><div class=\"line\">4.Store更新之后，发出一个change事件</div><div class=\"line\"></div><div class=\"line\">5.View接收到change事件之后更新页面</div></pre></td></tr></table></figure>\n<p>如图所示：（图片来源:<a href=\"http://www.ruanyifeng.com/）\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/）</a></p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016011503.png\" style=\"width:100%;border-radius:8px;\" alt=\"\"></p>\n<h3 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h3><p>只有遇到React解决不了的问题，你才需要Redux</p>\n<p>如果UI层非常简单，没有很多交互，Redux就不是必要的</p>\n<h4 id=\"Redux设计思想\"><a href=\"#Redux设计思想\" class=\"headerlink\" title=\"Redux设计思想\"></a>Redux设计思想</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.web应用是一个状态机，视图与状态是一一对应的</div><div class=\"line\"></div><div class=\"line\">2.所有的状态保存在一个对象里</div></pre></td></tr></table></figure>\n<h4 id=\"基本概念和API\"><a href=\"#基本概念和API\" class=\"headerlink\" title=\"基本概念和API\"></a>基本概念和API</h4><h5 id=\"1-Store\"><a href=\"#1-Store\" class=\"headerlink\" title=\"1.Store\"></a>1.Store</h5><p>保存数据的地方，可以将其看做是一个容器。整个应用只能有一个Store</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div></pre></td></tr></table></figure>\n<h5 id=\"2-State\"><a href=\"#2-State\" class=\"headerlink\" title=\"2.State\"></a>2.State</h5><p>保存所有的数据，如果想得到某个时点的数据，就要对Store生成快照。这种时点的数据集合就叫做State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> state = store.getState();</div></pre></td></tr></table></figure>\n<p>Redux规定，一个State对应一个View。只要State相同，View就相同。知道State就能知道View是什么样，反之亦然。</p>\n<h5 id=\"3-Action\"><a href=\"#3-Action\" class=\"headerlink\" title=\"3.Action\"></a>3.Action</h5><p>Action为View发出的通知，表示State将要发生变化</p>\n<p>Action描述当前发生的事情。改变State的唯一办法就是通过Action将数据运送到Store</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> action = &#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"ADD_TODO\"</span>, <span class=\"comment\">// Action的名称</span></div><div class=\"line\">    payload: <span class=\"string\">\"LEARN Redux\"</span> <span class=\"comment\">// Action携带的字符串信息</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h4 id=\"4-Action-Creater\"><a href=\"#4-Action-Creater\" class=\"headerlink\" title=\"4.Action Creater\"></a>4.Action Creater</h4><p>定义一个函数，用来自动生成Action，这个函数就叫做Action Creator</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> ADD_TODO = <span class=\"string\">\"添加 TODO\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addToDo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: ADD_TODO,</div><div class=\"line\">        text</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> action = addToDo(Learn Redux);</div></pre></td></tr></table></figure>\n<h4 id=\"5-store-dispatch\"><a href=\"#5-store-dispatch\" class=\"headerlink\" title=\"5.store.dispatch()\"></a>5.store.dispatch()</h4><p>store.dispatch()是View唯一发出Action的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div><div class=\"line\"></div><div class=\"line\">store.dispatch(&#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"ADD_TODO\"</span>,</div><div class=\"line\">    <span class=\"attr\">payload</span>: <span class=\"string\">\"Learn Redux\"</span>,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>store.dispatch接受一个Action对象作为参数，将它发送出去</p>\n<p>结合Action Creater</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.dispatch(addToDo(<span class=\"string\">\"Learn Redux\"</span>));</div></pre></td></tr></table></figure>\n<h4 id=\"6-Reducer\"><a href=\"#6-Reducer\" class=\"headerlink\" title=\"6.Reducer\"></a>6.Reducer</h4><p>Store收到一个Action之后必须给出一个新的State，这样View才会发生变化。这种State的计算过程就叫做Reducer</p>\n<p>Reducer是一个函数，它接受Action和当前的State作为参数，返回一个新的State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> Reducer = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">state, action</span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">//...</span></div><div class=\"line\">    <span class=\"keyword\">return</span> new_state;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"7-纯函数\"><a href=\"#7-纯函数\" class=\"headerlink\" title=\"7.纯函数\"></a>7.纯函数</h4><p>Reducer最重要的特点是它是一个纯函数</p>\n<h4 id=\"8-store-subscribe\"><a href=\"#8-store-subscribe\" class=\"headerlink\" title=\"8.store.subscribe()\"></a>8.store.subscribe()</h4><p>Store允许使用Store.subscribe方法设置监听函数，一旦State发生变化就自动执行这个函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer);</div><div class=\"line\"></div><div class=\"line\">store.subscribe(listener);</div></pre></td></tr></table></figure>\n<p>解除监听，store.subscribe方法返回一个函数，调用这个函数即可解除监听</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> unsubscribe = store.subscribe(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> </div><div class=\"line\">    <span class=\"built_in\">console</span>.log(store.getState());</div><div class=\"line\">);</div><div class=\"line\">unsubscribe();</div></pre></td></tr></table></figure>\n<h3 id=\"Store的实现\"><a href=\"#Store的实现\" class=\"headerlink\" title=\"Store的实现\"></a>Store的实现</h3><p>Store提供了三个方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.getState();</div><div class=\"line\"></div><div class=\"line\">store.dispatch();</div><div class=\"line\"></div><div class=\"line\">store.subscribe();</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">let</span> &#123;subscribe, dispatch, getState&#125; = createStore(reducer);</div></pre></td></tr></table></figure>\n<h3 id=\"Reducer拆分\"><a href=\"#Reducer拆分\" class=\"headerlink\" title=\"Reducer拆分\"></a>Reducer拆分</h3><p>Reducer负责生成State，由于一个项目只有一个State，导致这个State会非常庞大，因此需要拆分</p>\n<p>Redux提供了一个combineReducers方法。用这个方法可以将各个子Reducer合并成一个大的Reducer</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;combineReducers&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> chatReducer = combineReducers()&#123;</div><div class=\"line\">    chatLog,</div><div class=\"line\">    statusMessage,</div><div class=\"line\">    userName</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> todoApp;</div></pre></td></tr></table></figure>\n<p>可以将所有的子Reducer放在一个文件里面，然后统一引入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;combineReducers&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> reducers <span class=\"keyword\">from</span> <span class=\"string\">\"./reducers\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> reducer = combineReducers(reducers);</div></pre></td></tr></table></figure>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><p>如图所示：（图片来源:<a href=\"http://www.ruanyifeng.com/）\" target=\"_blank\" rel=\"external\">http://www.ruanyifeng.com/）</a></p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091802.jpg\" style=\"width:100%;border-radius:8px;\" alt=\"\"></p>\n<p>首先：用户发出action</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.dispatch(actioin);</div></pre></td></tr></table></figure>\n<p>然后：Store自动调用Reducer，并传入两个参数（当前State和Action）。Reducer会返回新的State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> nextState = todoApp(previousState, action);</div></pre></td></tr></table></figure>\n<p>一旦State出现变化，Store调用监听函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.subscribe(listener);</div></pre></td></tr></table></figure>\n<p>listener可以通过store.getState()获取当前状态。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listener</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> newState = store.getState();</div><div class=\"line\">    component.setState(newState);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"babel官网\"><a href=\"#babel官网\" class=\"headerlink\" title=\"babel官网\"></a>babel官网</h4><p><a href=\"https://babeljs.io/\" target=\"_blank\">https://babeljs.io/</a></p>\n<h4 id=\"react官网\"><a href=\"#react官网\" class=\"headerlink\" title=\"react官网\"></a>react官网</h4><p><a href=\"https://facebook.github.io/react/\" target=\"_blank\">https://facebook.github.io/react/</a></p>\n<h4 id=\"redux中文文档\"><a href=\"#redux中文文档\" class=\"headerlink\" title=\"redux中文文档\"></a>redux中文文档</h4><p><a href=\"http://cn.redux.js.org/\" target=\"_blank\">http://cn.redux.js.org/</a></p>\n<h4 id=\"redux介绍（segmentfault）\"><a href=\"#redux介绍（segmentfault）\" class=\"headerlink\" title=\"redux介绍（segmentfault）\"></a>redux介绍（segmentfault）</h4><p><a href=\"https://segmentfault.com/a/1190000003503338?_ea=323420\" target=\"_blank\">https://segmentfault.com/a/1190000003503338?_ea=323420</a></p>\n<h4 id=\"react入门实践\"><a href=\"#react入门实践\" class=\"headerlink\" title=\"react入门实践\"></a>react入门实践</h4><p><a href=\"http://www.jianshu.com/p/808bb43b3744\" target=\"_blank\">http://www.jianshu.com/p/808bb43b3744</a></p>\n<h4 id=\"阮一峰react系列教程\"><a href=\"#阮一峰react系列教程\" class=\"headerlink\" title=\"阮一峰react系列教程\"></a>阮一峰react系列教程</h4><p><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\">http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html</a></p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h3 id=\"Flux\"><a href=\"#Flux\" class=\"headerlink\" title=\"Flux\"></a>Flux</h3><p>Flux将应用分为4个部分</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">View 视图</div><div class=\"line\"></div><div class=\"line\">Action 行为</div><div class=\"line\"></div><div class=\"line\">Dispatcher 分发器</div><div class=\"line\"></div><div class=\"line\">Store 数据层，用于存放应用状态，一旦发生变动，就提醒views更新页面</div></pre></td></tr></table></figure>\n<p>Flux最大的特点就是单项数据流动</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.用户访问View</div><div class=\"line\"></div><div class=\"line\">2.View发出用户的Action</div><div class=\"line\"></div><div class=\"line\">3.Dispather接收到用户的Action，要求Store进行相应更新</div><div class=\"line\"></div><div class=\"line\">4.Store更新之后，发出一个change事件</div><div class=\"line\"></div><div class=\"line\">5.View接收到change事件之后更新页面</div></pre></td></tr></table></figure>\n<p>如图所示：（图片来源:<a href=\"http://www.ruanyifeng.com/）\">http://www.ruanyifeng.com/）</a></p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016011503.png\" style=\"width:100%;border-radius:8px;\" alt=\"\"></p>\n<h3 id=\"Redux\"><a href=\"#Redux\" class=\"headerlink\" title=\"Redux\"></a>Redux</h3><p>只有遇到React解决不了的问题，你才需要Redux</p>\n<p>如果UI层非常简单，没有很多交互，Redux就不是必要的</p>\n<h4 id=\"Redux设计思想\"><a href=\"#Redux设计思想\" class=\"headerlink\" title=\"Redux设计思想\"></a>Redux设计思想</h4><figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">1.web应用是一个状态机，视图与状态是一一对应的</div><div class=\"line\"></div><div class=\"line\">2.所有的状态保存在一个对象里</div></pre></td></tr></table></figure>\n<h4 id=\"基本概念和API\"><a href=\"#基本概念和API\" class=\"headerlink\" title=\"基本概念和API\"></a>基本概念和API</h4><h5 id=\"1-Store\"><a href=\"#1-Store\" class=\"headerlink\" title=\"1.Store\"></a>1.Store</h5><p>保存数据的地方，可以将其看做是一个容器。整个应用只能有一个Store</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div></pre></td></tr></table></figure>\n<h5 id=\"2-State\"><a href=\"#2-State\" class=\"headerlink\" title=\"2.State\"></a>2.State</h5><p>保存所有的数据，如果想得到某个时点的数据，就要对Store生成快照。这种时点的数据集合就叫做State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> state = store.getState();</div></pre></td></tr></table></figure>\n<p>Redux规定，一个State对应一个View。只要State相同，View就相同。知道State就能知道View是什么样，反之亦然。</p>\n<h5 id=\"3-Action\"><a href=\"#3-Action\" class=\"headerlink\" title=\"3.Action\"></a>3.Action</h5><p>Action为View发出的通知，表示State将要发生变化</p>\n<p>Action描述当前发生的事情。改变State的唯一办法就是通过Action将数据运送到Store</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> action = &#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"ADD_TODO\"</span>, <span class=\"comment\">// Action的名称</span></div><div class=\"line\">    payload: <span class=\"string\">\"LEARN Redux\"</span> <span class=\"comment\">// Action携带的字符串信息</span></div><div class=\"line\">&#125;;</div></pre></td></tr></table></figure>\n<h4 id=\"4-Action-Creater\"><a href=\"#4-Action-Creater\" class=\"headerlink\" title=\"4.Action Creater\"></a>4.Action Creater</h4><p>定义一个函数，用来自动生成Action，这个函数就叫做Action Creator</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> ADD_TODO = <span class=\"string\">\"添加 TODO\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">addToDo</span>(<span class=\"params\">text</span>) </span>&#123;</div><div class=\"line\">    <span class=\"keyword\">return</span> &#123;</div><div class=\"line\">        <span class=\"attr\">type</span>: ADD_TODO,</div><div class=\"line\">        text</div><div class=\"line\">    &#125;</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> action = addToDo(Learn Redux);</div></pre></td></tr></table></figure>\n<h4 id=\"5-store-dispatch\"><a href=\"#5-store-dispatch\" class=\"headerlink\" title=\"5.store.dispatch()\"></a>5.store.dispatch()</h4><p>store.dispatch()是View唯一发出Action的方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(fn);</div><div class=\"line\"></div><div class=\"line\">store.dispatch(&#123;</div><div class=\"line\">    <span class=\"attr\">type</span>: <span class=\"string\">\"ADD_TODO\"</span>,</div><div class=\"line\">    <span class=\"attr\">payload</span>: <span class=\"string\">\"Learn Redux\"</span>,</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>store.dispatch接受一个Action对象作为参数，将它发送出去</p>\n<p>结合Action Creater</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.dispatch(addToDo(<span class=\"string\">\"Learn Redux\"</span>));</div></pre></td></tr></table></figure>\n<h4 id=\"6-Reducer\"><a href=\"#6-Reducer\" class=\"headerlink\" title=\"6.Reducer\"></a>6.Reducer</h4><p>Store收到一个Action之后必须给出一个新的State，这样View才会发生变化。这种State的计算过程就叫做Reducer</p>\n<p>Reducer是一个函数，它接受Action和当前的State作为参数，返回一个新的State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> Reducer = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">state, action</span>)</span>&#123;</div><div class=\"line\">    <span class=\"comment\">//...</span></div><div class=\"line\">    <span class=\"keyword\">return</span> new_state;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h4 id=\"7-纯函数\"><a href=\"#7-纯函数\" class=\"headerlink\" title=\"7.纯函数\"></a>7.纯函数</h4><p>Reducer最重要的特点是它是一个纯函数</p>\n<h4 id=\"8-store-subscribe\"><a href=\"#8-store-subscribe\" class=\"headerlink\" title=\"8.store.subscribe()\"></a>8.store.subscribe()</h4><p>Store允许使用Store.subscribe方法设置监听函数，一旦State发生变化就自动执行这个函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">const</span> store = createStore(reducer);</div><div class=\"line\"></div><div class=\"line\">store.subscribe(listener);</div></pre></td></tr></table></figure>\n<p>解除监听，store.subscribe方法返回一个函数，调用这个函数即可解除监听</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> unsubscribe = store.subscribe(<span class=\"function\"><span class=\"params\">()</span> =&gt;</span> </div><div class=\"line\">    <span class=\"built_in\">console</span>.log(store.getState());</div><div class=\"line\">);</div><div class=\"line\">unsubscribe();</div></pre></td></tr></table></figure>\n<h3 id=\"Store的实现\"><a href=\"#Store的实现\" class=\"headerlink\" title=\"Store的实现\"></a>Store的实现</h3><p>Store提供了三个方法</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.getState();</div><div class=\"line\"></div><div class=\"line\">store.dispatch();</div><div class=\"line\"></div><div class=\"line\">store.subscribe();</div></pre></td></tr></table></figure>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;createStore&#125; <span class=\"keyword\">from</span> <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">let</span> &#123;subscribe, dispatch, getState&#125; = createStore(reducer);</div></pre></td></tr></table></figure>\n<h3 id=\"Reducer拆分\"><a href=\"#Reducer拆分\" class=\"headerlink\" title=\"Reducer拆分\"></a>Reducer拆分</h3><p>Reducer负责生成State，由于一个项目只有一个State，导致这个State会非常庞大，因此需要拆分</p>\n<p>Redux提供了一个combineReducers方法。用这个方法可以将各个子Reducer合并成一个大的Reducer</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;combineReducers&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> chatReducer = combineReducers()&#123;</div><div class=\"line\">    chatLog,</div><div class=\"line\">    statusMessage,</div><div class=\"line\">    userName</div><div class=\"line\">&#125;;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">default</span> todoApp;</div></pre></td></tr></table></figure>\n<p>可以将所有的子Reducer放在一个文件里面，然后统一引入</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> &#123;combineReducers&#125; form <span class=\"string\">\"redux\"</span>;</div><div class=\"line\"><span class=\"keyword\">import</span> * <span class=\"keyword\">as</span> reducers <span class=\"keyword\">from</span> <span class=\"string\">\"./reducers\"</span>;</div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">const</span> reducer = combineReducers(reducers);</div></pre></td></tr></table></figure>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><p>如图所示：（图片来源:<a href=\"http://www.ruanyifeng.com/）\">http://www.ruanyifeng.com/）</a></p>\n<p><img src=\"http://www.ruanyifeng.com/blogimg/asset/2016/bg2016091802.jpg\" style=\"width:100%;border-radius:8px;\" alt=\"\"></p>\n<p>首先：用户发出action</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.dispatch(actioin);</div></pre></td></tr></table></figure>\n<p>然后：Store自动调用Reducer，并传入两个参数（当前State和Action）。Reducer会返回新的State</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">let</span> nextState = todoApp(previousState, action);</div></pre></td></tr></table></figure>\n<p>一旦State出现变化，Store调用监听函数</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">store.subscribe(listener);</div></pre></td></tr></table></figure>\n<p>listener可以通过store.getState()获取当前状态。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">listener</span>(<span class=\"params\"></span>)</span>&#123;</div><div class=\"line\">    <span class=\"keyword\">let</span> newState = store.getState();</div><div class=\"line\">    component.setState(newState);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<hr>\n<h4 id=\"babel官网\"><a href=\"#babel官网\" class=\"headerlink\" title=\"babel官网\"></a>babel官网</h4><p><a href=\"https://babeljs.io/\" target=\"_blank\">https://babeljs.io/</a></p>\n<h4 id=\"react官网\"><a href=\"#react官网\" class=\"headerlink\" title=\"react官网\"></a>react官网</h4><p><a href=\"https://facebook.github.io/react/\" target=\"_blank\">https://facebook.github.io/react/</a></p>\n<h4 id=\"redux中文文档\"><a href=\"#redux中文文档\" class=\"headerlink\" title=\"redux中文文档\"></a>redux中文文档</h4><p><a href=\"http://cn.redux.js.org/\" target=\"_blank\">http://cn.redux.js.org/</a></p>\n<h4 id=\"redux介绍（segmentfault）\"><a href=\"#redux介绍（segmentfault）\" class=\"headerlink\" title=\"redux介绍（segmentfault）\"></a>redux介绍（segmentfault）</h4><p><a href=\"https://segmentfault.com/a/1190000003503338?_ea=323420\" target=\"_blank\">https://segmentfault.com/a/1190000003503338?_ea=323420</a></p>\n<h4 id=\"react入门实践\"><a href=\"#react入门实践\" class=\"headerlink\" title=\"react入门实践\"></a>react入门实践</h4><p><a href=\"http://www.jianshu.com/p/808bb43b3744\" target=\"_blank\">http://www.jianshu.com/p/808bb43b3744</a></p>\n<h4 id=\"阮一峰react系列教程\"><a href=\"#阮一峰react系列教程\" class=\"headerlink\" title=\"阮一峰react系列教程\"></a>阮一峰react系列教程</h4><p><a href=\"http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html\" target=\"_blank\" >http://www.ruanyifeng.com/blog/2016/09/react-technology-stack.html</a></p>\n"},{"layout":"default","title":"videoAndAudio","date":"2016-09-12T16:00:00.000Z","_content":"\n## {{page.title}}\n\n#### 我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\n\n```\nhtml\n\n容器格式\n\n视频编解码器\n\n音频编解码器\n```\n\n#### 容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\n\n```\nhtml\n\nOgg容器（.ogv）\n\nMPEG4-容器（.mp4）\n\nWebm容器（.webm）\n\nMatroska容器（.mkv）\n```\n\n#### 再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\n\n```\nhtml\n\nH.264（AVC Advanced Video Codec）\n\nVP8\n\nOgg Theora\n\n注意：AVC就是H.264。\n```\n\n#### 音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\n\n```\n\nhtml\n\nAAC（Advanced Audio Coding）\n\nMPEG-3\n\nOgg Vorbis\n```\n\n\n","source":"_posts/video-audio.md","raw":"\n---\nlayout: default\ntitle: videoAndAudio\ndate: 2016-09-13\n---\n\n## {{page.title}}\n\n#### 我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\n\n```\nhtml\n\n容器格式\n\n视频编解码器\n\n音频编解码器\n```\n\n#### 容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\n\n```\nhtml\n\nOgg容器（.ogv）\n\nMPEG4-容器（.mp4）\n\nWebm容器（.webm）\n\nMatroska容器（.mkv）\n```\n\n#### 再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\n\n```\nhtml\n\nH.264（AVC Advanced Video Codec）\n\nVP8\n\nOgg Theora\n\n注意：AVC就是H.264。\n```\n\n#### 音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\n\n```\n\nhtml\n\nAAC（Advanced Audio Coding）\n\nMPEG-3\n\nOgg Vorbis\n```\n\n\n","slug":"video-audio","published":1,"updated":"2016-12-21T08:00:13.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw48000w81qtxa48za7c","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h4 id=\"我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\"><a href=\"#我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\" class=\"headerlink\" title=\"我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\"></a>我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\">容器格式</div><div class=\"line\"></div><div class=\"line\">视频编解码器</div><div class=\"line\"></div><div class=\"line\">音频编解码器</div></pre></td></tr></table></figure>\n<h4 id=\"容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\"><a href=\"#容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\" class=\"headerlink\" title=\"容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\"></a>容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Ogg</span>容器（<span class=\"selector-class\">.ogv</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">MPEG4-</span>容器（<span class=\"selector-class\">.mp4</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Webm</span>容器（<span class=\"selector-class\">.webm</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Matroska</span>容器（<span class=\"selector-class\">.mkv</span>）</div></pre></td></tr></table></figure>\n<h4 id=\"再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\"><a href=\"#再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\" class=\"headerlink\" title=\"再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\"></a>再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">H</span><span class=\"selector-class\">.264</span>（<span class=\"selector-tag\">AVC</span> <span class=\"selector-tag\">Advanced</span> <span class=\"selector-tag\">Video</span> <span class=\"selector-tag\">Codec</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">VP8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Ogg</span> <span class=\"selector-tag\">Theora</span></div><div class=\"line\"></div><div class=\"line\">注意：<span class=\"selector-tag\">AVC</span>就是<span class=\"selector-tag\">H</span><span class=\"selector-class\">.264</span>。</div></pre></td></tr></table></figure>\n<h4 id=\"音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\"><a href=\"#音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\" class=\"headerlink\" title=\"音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\"></a>音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\">AAC（Advanced Audio Coding）</div><div class=\"line\"></div><div class=\"line\">MPEG-<span class=\"number\">3</span></div><div class=\"line\"></div><div class=\"line\">Ogg Vorbis</div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><h4 id=\"我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\"><a href=\"#我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\" class=\"headerlink\" title=\"我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式\"></a>我们平时说的mp4到底是什么？其实对于一个视频有如下三种格式</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\">容器格式</div><div class=\"line\"></div><div class=\"line\">视频编解码器</div><div class=\"line\"></div><div class=\"line\">音频编解码器</div></pre></td></tr></table></figure>\n<h4 id=\"容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\"><a href=\"#容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\" class=\"headerlink\" title=\"容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。\"></a>容器格式规定了一个视屏文件的视频编码器，音频编码器，字幕，缩略图等信息的格式，常用的视频格式如下，括号中是对应的文件后缀名。</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Ogg</span>容器（<span class=\"selector-class\">.ogv</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">MPEG4-</span>容器（<span class=\"selector-class\">.mp4</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Webm</span>容器（<span class=\"selector-class\">.webm</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Matroska</span>容器（<span class=\"selector-class\">.mkv</span>）</div></pre></td></tr></table></figure>\n<h4 id=\"再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\"><a href=\"#再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\" class=\"headerlink\" title=\"再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：\"></a>再来说说视频编解码器，视频编解码器规定了压缩视频和播放视频时使用的算法，常用的视频编码如下：</h4><figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">H</span><span class=\"selector-class\">.264</span>（<span class=\"selector-tag\">AVC</span> <span class=\"selector-tag\">Advanced</span> <span class=\"selector-tag\">Video</span> <span class=\"selector-tag\">Codec</span>）</div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">VP8</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">Ogg</span> <span class=\"selector-tag\">Theora</span></div><div class=\"line\"></div><div class=\"line\">注意：<span class=\"selector-tag\">AVC</span>就是<span class=\"selector-tag\">H</span><span class=\"selector-class\">.264</span>。</div></pre></td></tr></table></figure>\n<h4 id=\"音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\"><a href=\"#音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\" class=\"headerlink\" title=\"音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：\"></a>音频编解码器和视屏编解码器类似，规定了音频的压缩和播放的算法，常用的音频编码如下：</h4><figure class=\"highlight stylus\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"><span class=\"selector-tag\">html</span></div><div class=\"line\"></div><div class=\"line\">AAC（Advanced Audio Coding）</div><div class=\"line\"></div><div class=\"line\">MPEG-<span class=\"number\">3</span></div><div class=\"line\"></div><div class=\"line\">Ogg Vorbis</div></pre></td></tr></table></figure>\n"},{"layout":"default","title":"webpack学习","date":"2016-12-25T16:00:00.000Z","_content":"\n## {{page.title}}\n\n最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。\nwebpack是一个前端资源加载以及打包工具。只需要简单的配置即可实现前端各种工程化的操作。\nwebpack还可以与gulp等其它工程化工具结合使用。\n\n\n### webpack的loader：\n\n处理样式，转成css，如：less-loader, sass-loader\n\n图片处理，如: url-loader, file-loader。两个都必须用上。否则超过大小限制的图片无法生成到目标文件夹中\n\n处理js，将es6或更高级的代码转成es5的代码。如： babel-loader，babel-preset-es2015，babel-preset-react\n\n将js模块暴露到全局，如果expose-loader\n\n### webpack的plugin\n\n代码热替换, HotModuleReplacementPlugin\n\n生成html文件，HtmlWebpackPlugin\n\n将css成生文件，而非内联，ExtractTextPlugin\n\n报错但不退出webpack进程，NoErrorsPlugin\n\n代码丑化，UglifyJsPlugin，开发过程中不建议打开\n\n多个 html共用一个js文件(chunk)，可用CommonsChunkPlugin\n\n清理文件夹，Clean\n\n调用模块的别名ProvidePlugin，例如想在js中用$，如果通过webpack加载，需要将$与jQuery对应起来\n\n\n通过DefinePlugin可以定义一些全局的变量，我们可以在模块当中直接使用这些变量，无需作任何声明\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/webpack.md","raw":"---\nlayout: default\ntitle: webpack学习\ndate: 2016-12-26\n---\n\n## {{page.title}}\n\n最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。\nwebpack是一个前端资源加载以及打包工具。只需要简单的配置即可实现前端各种工程化的操作。\nwebpack还可以与gulp等其它工程化工具结合使用。\n\n\n### webpack的loader：\n\n处理样式，转成css，如：less-loader, sass-loader\n\n图片处理，如: url-loader, file-loader。两个都必须用上。否则超过大小限制的图片无法生成到目标文件夹中\n\n处理js，将es6或更高级的代码转成es5的代码。如： babel-loader，babel-preset-es2015，babel-preset-react\n\n将js模块暴露到全局，如果expose-loader\n\n### webpack的plugin\n\n代码热替换, HotModuleReplacementPlugin\n\n生成html文件，HtmlWebpackPlugin\n\n将css成生文件，而非内联，ExtractTextPlugin\n\n报错但不退出webpack进程，NoErrorsPlugin\n\n代码丑化，UglifyJsPlugin，开发过程中不建议打开\n\n多个 html共用一个js文件(chunk)，可用CommonsChunkPlugin\n\n清理文件夹，Clean\n\n调用模块的别名ProvidePlugin，例如想在js中用$，如果通过webpack加载，需要将$与jQuery对应起来\n\n\n通过DefinePlugin可以定义一些全局的变量，我们可以在模块当中直接使用这些变量，无需作任何声明\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"webpack","published":1,"updated":"2016-12-28T13:37:14.000Z","comments":1,"photos":[],"link":"","_id":"cixbbxw49000x81qthifor4we","content":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。<br>webpack是一个前端资源加载以及打包工具。只需要简单的配置即可实现前端各种工程化的操作。<br>webpack还可以与gulp等其它工程化工具结合使用。</p>\n<h3 id=\"webpack的loader：\"><a href=\"#webpack的loader：\" class=\"headerlink\" title=\"webpack的loader：\"></a>webpack的loader：</h3><p>处理样式，转成css，如：less-loader, sass-loader</p>\n<p>图片处理，如: url-loader, file-loader。两个都必须用上。否则超过大小限制的图片无法生成到目标文件夹中</p>\n<p>处理js，将es6或更高级的代码转成es5的代码。如： babel-loader，babel-preset-es2015，babel-preset-react</p>\n<p>将js模块暴露到全局，如果expose-loader</p>\n<h3 id=\"webpack的plugin\"><a href=\"#webpack的plugin\" class=\"headerlink\" title=\"webpack的plugin\"></a>webpack的plugin</h3><p>代码热替换, HotModuleReplacementPlugin</p>\n<p>生成html文件，HtmlWebpackPlugin</p>\n<p>将css成生文件，而非内联，ExtractTextPlugin</p>\n<p>报错但不退出webpack进程，NoErrorsPlugin</p>\n<p>代码丑化，UglifyJsPlugin，开发过程中不建议打开</p>\n<p>多个 html共用一个js文件(chunk)，可用CommonsChunkPlugin</p>\n<p>清理文件夹，Clean</p>\n<p>调用模块的别名ProvidePlugin，例如想在js中用$，如果通过webpack加载，需要将$与jQuery对应起来</p>\n<p>通过DefinePlugin可以定义一些全局的变量，我们可以在模块当中直接使用这些变量，无需作任何声明</p>\n","excerpt":"","more":"<h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"\"></a></h2><p>最近准备入手小游戏，队友们的技术栈用到了gulp+webpack+es6，这里学习一下这些技术。<br>webpack是一个前端资源加载以及打包工具。只需要简单的配置即可实现前端各种工程化的操作。<br>webpack还可以与gulp等其它工程化工具结合使用。</p>\n<h3 id=\"webpack的loader：\"><a href=\"#webpack的loader：\" class=\"headerlink\" title=\"webpack的loader：\"></a>webpack的loader：</h3><p>处理样式，转成css，如：less-loader, sass-loader</p>\n<p>图片处理，如: url-loader, file-loader。两个都必须用上。否则超过大小限制的图片无法生成到目标文件夹中</p>\n<p>处理js，将es6或更高级的代码转成es5的代码。如： babel-loader，babel-preset-es2015，babel-preset-react</p>\n<p>将js模块暴露到全局，如果expose-loader</p>\n<h3 id=\"webpack的plugin\"><a href=\"#webpack的plugin\" class=\"headerlink\" title=\"webpack的plugin\"></a>webpack的plugin</h3><p>代码热替换, HotModuleReplacementPlugin</p>\n<p>生成html文件，HtmlWebpackPlugin</p>\n<p>将css成生文件，而非内联，ExtractTextPlugin</p>\n<p>报错但不退出webpack进程，NoErrorsPlugin</p>\n<p>代码丑化，UglifyJsPlugin，开发过程中不建议打开</p>\n<p>多个 html共用一个js文件(chunk)，可用CommonsChunkPlugin</p>\n<p>清理文件夹，Clean</p>\n<p>调用模块的别名ProvidePlugin，例如想在js中用$，如果通过webpack加载，需要将$与jQuery对应起来</p>\n<p>通过DefinePlugin可以定义一些全局的变量，我们可以在模块当中直接使用这些变量，无需作任何声明</p>\n"},{"layout":"default","title":"vim入门","_content":"\n### 普通模式\n\n``` shell\ngg 回到最前一行\n\nG 回到最后一行\n\nnG 跳到第n行 （n为int数值）\n\nctl+b 向上滚动一页\n\nctl+f 向下滚动一页\n\ndd 删除一行\n```\n\n### 插入模式\n\n``` shell\n\n```\n\n\n\n\n\n\n\n\n\n","source":"_posts/vim.md","raw":"---\nlayout: default\ntitle: vim入门\ncategory: 工具\ntag: vim\n---\n\n### 普通模式\n\n``` shell\ngg 回到最前一行\n\nG 回到最后一行\n\nnG 跳到第n行 （n为int数值）\n\nctl+b 向上滚动一页\n\nctl+f 向下滚动一页\n\ndd 删除一行\n```\n\n### 插入模式\n\n``` shell\n\n```\n\n\n\n\n\n\n\n\n\n","slug":"vim","published":1,"date":"2016-12-31T07:07:02.000Z","updated":"2016-12-31T07:15:02.000Z","_id":"cixcvy2rb000mb9qtquj71604","comments":1,"photos":[],"link":"","content":"<h3 id=\"普通模式\"><a href=\"#普通模式\" class=\"headerlink\" title=\"普通模式\"></a>普通模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">gg 回到最前一行</div><div class=\"line\"></div><div class=\"line\">G 回到最后一行</div><div class=\"line\"></div><div class=\"line\">nG 跳到第n行 （n为int数值）</div><div class=\"line\"></div><div class=\"line\">ctl+b 向上滚动一页</div><div class=\"line\"></div><div class=\"line\">ctl+f 向下滚动一页</div><div class=\"line\"></div><div class=\"line\">dd 删除一行</div></pre></td></tr></table></figure>\n<h3 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n","excerpt":"","more":"<h3 id=\"普通模式\"><a href=\"#普通模式\" class=\"headerlink\" title=\"普通模式\"></a>普通模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div></pre></td><td class=\"code\"><pre><div class=\"line\">gg 回到最前一行</div><div class=\"line\"></div><div class=\"line\">G 回到最后一行</div><div class=\"line\"></div><div class=\"line\">nG 跳到第n行 （n为int数值）</div><div class=\"line\"></div><div class=\"line\">ctl+b 向上滚动一页</div><div class=\"line\"></div><div class=\"line\">ctl+f 向下滚动一页</div><div class=\"line\"></div><div class=\"line\">dd 删除一行</div></pre></td></tr></table></figure>\n<h3 id=\"插入模式\"><a href=\"#插入模式\" class=\"headerlink\" title=\"插入模式\"></a>插入模式</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"></div><div class=\"line\"></div></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciwhfxa5o0000l9qt4z0ls976","category_id":"ciwhfxa5w0002l9qt7c2qaylh","_id":"ciwhfxa6a000bl9qtgcit1783"},{"post_id":"ciwhfxa630005l9qtf1wm06ts","category_id":"ciwhfxa6b000cl9qta1n44pdq","_id":"ciwhfxa6h000nl9qt56amidrn"},{"post_id":"ciwhfzr1v000ul9qt9p609xlh","category_id":"ciwhfzr1x000vl9qtjevblq78","_id":"ciwhfzr1y000yl9qtie45tmfc"},{"post_id":"ciwhg5uik000zl9qtbzburyd1","category_id":"ciwhfzr1x000vl9qtjevblq78","_id":"ciwhg606i0011l9qtjsyzs3o1"},{"post_id":"ciwhi31ji0016l9qthsibee0u","category_id":"ciwhfzr1x000vl9qtjevblq78","_id":"ciwhi3ejy0018l9qtiry925ed"},{"post_id":"cixbbxw2o000081qt27jiksx4","category_id":"ciwhfzr1x000vl9qtjevblq78","_id":"cixbbxw31000381qte5hv6zin"},{"post_id":"cixbbxw3f000a81qt28hiqjum","category_id":"ciwhfxa6b000cl9qta1n44pdq","_id":"cixbbxw3q000e81qtl1z2n9p3"},{"post_id":"cixbbxw3o000d81qtgc5tz8fq","category_id":"ciwhfxa5w0002l9qt7c2qaylh","_id":"cixbbxw3t000i81qtslk172jq"},{"post_id":"cixbbxw3t000j81qtx0ru3qnz","category_id":"cixbc0jp8001281qtqamuf2mt","_id":"cixbc0jp9001381qttlx23ium"},{"post_id":"cixbbxw3r000h81qt2v5rossw","category_id":"cixbc0jp8001281qtqamuf2mt","_id":"cixbd2j3p0001b9qtoaywon2m"},{"post_id":"cixbbxw3j000b81qt68e4khvz","category_id":"cixbd3gsr0002b9qt7bc6v2rr","_id":"cixbd3gss0004b9qt65bo6d98"},{"post_id":"cixbbxw36000781qtuij62czq","category_id":"cixbd3gsr0002b9qt7bc6v2rr","_id":"cixbd6l3y000ab9qth0sq5ui8"},{"post_id":"cixbbxw3w000l81qtlh6y1l0t","category_id":"cixbc0jp8001281qtqamuf2mt","_id":"cixbd8mh4000db9qtbh4isqct"},{"post_id":"cixbbxw3q000f81qtko6u7fgs","category_id":"ciwhfxa6b000cl9qta1n44pdq","_id":"cixbd9no1000hb9qt9x6p0yj5"},{"post_id":"cixbbxw2y000281qt0g7tmpin","category_id":"ciwhfzr1x000vl9qtjevblq78","_id":"cixbdb4u2000kb9qtzk5s0aet"},{"post_id":"cixcvy2rb000mb9qtquj71604","category_id":"ciwhfxa6b000cl9qta1n44pdq","_id":"cixcvzhre000qb9qtun2b4i9p"},{"post_id":"cixbbxw3y000m81qtttkhyksx","category_id":"cixd0jf4g0000wwqtu1k6ev0d","_id":"cixd0jf4i0001wwqtiz9dnezk"}],"PostTag":[{"post_id":"ciwhfxa5o0000l9qt4z0ls976","tag_id":"ciwhfxa5z0003l9qt3sm0ztey","_id":"ciwhfxa680009l9qtvwucg5gc"},{"post_id":"ciwhfxa630005l9qtf1wm06ts","tag_id":"ciwhfxa6d000hl9qtq9x7e4qf","_id":"ciwhfxa6g000ml9qtj0iu9svp"},{"post_id":"ciwhfzr1v000ul9qt9p609xlh","tag_id":"ciwhfzr1y000wl9qts9p0l01p","_id":"ciwhfzr1y000xl9qt53atto7d"},{"post_id":"ciwhg5uik000zl9qtbzburyd1","tag_id":"ciwhg6ur00014l9qtyl34eof8","_id":"ciwhg6ur00015l9qt86hmgqgt"},{"post_id":"ciwhi31ji0016l9qthsibee0u","tag_id":"ciwhi3imi0019l9qtse8svjam","_id":"ciwhi3imi001al9qt6tuwx0wr"},{"post_id":"cixbbxw2o000081qt27jiksx4","tag_id":"ciwhfzr1y000wl9qts9p0l01p","_id":"cixbbxw2y000181qt1serpkcr"},{"post_id":"cixbbxw3f000a81qt28hiqjum","tag_id":"ciwhfxa6c000dl9qtmppvxu01","_id":"cixbbxw3o000c81qt9mh9w6ue"},{"post_id":"cixbbxw3o000d81qtgc5tz8fq","tag_id":"ciwhfxa660008l9qt9vf798zg","_id":"cixbbxw3r000g81qto9g7lr67"},{"post_id":"cixbbxw3w000l81qtlh6y1l0t","tag_id":"ciwhfxa6j000pl9qtnq9ynzgs","_id":"cixbbxw3z000n81qt7filuith"},{"post_id":"cixbbxw3y000m81qtttkhyksx","tag_id":"ciwhfxa6f000ll9qt0tks1mrr","_id":"cixbbxw41000q81qtauqlm8at"},{"post_id":"cixbbxw3t000j81qtx0ru3qnz","tag_id":"cixbc0caf000z81qtrqituey3","_id":"cixbc0cai001081qt3rrfnv9w"},{"post_id":"cixbbxw3r000h81qt2v5rossw","tag_id":"cixbc0caf000z81qtrqituey3","_id":"cixbd2j3o0000b9qtjah3b9xn"},{"post_id":"cixbbxw3j000b81qt68e4khvz","tag_id":"cixbd3no70007b9qtqwpaoqld","_id":"cixbd3no80008b9qtyzu2j3hc"},{"post_id":"cixbbxw36000781qtuij62czq","tag_id":"cixbd6l3x0009b9qtrlwq3rhg","_id":"cixbd6l3y000bb9qtk51l4c4q"},{"post_id":"cixbbxw3q000f81qtko6u7fgs","tag_id":"cixbd9no0000gb9qtdx0nr9i5","_id":"cixbd9no2000ib9qtivzh6wc8"},{"post_id":"cixbbxw2y000281qt0g7tmpin","tag_id":"cixbdb4u0000jb9qtsjkvoqlw","_id":"cixbdb4u3000lb9qtf0p6po7i"},{"post_id":"cixcvy2rb000mb9qtquj71604","tag_id":"cixcvzhrc000pb9qtgudo8ucd","_id":"cixcvzhri000rb9qt7o3kqqi3"}],"Tag":[{"name":"其他","_id":"ciwhfxa5z0003l9qt3sm0ztey"},{"name":"hexo使用指南","_id":"ciwhfxa660008l9qt9vf798zg"},{"name":"git命令行","_id":"ciwhfxa6c000dl9qtmppvxu01"},{"name":"macTerminal","_id":"ciwhfxa6d000hl9qtq9x7e4qf"},{"name":"nginx","_id":"ciwhfxa6f000ll9qt0tks1mrr"},{"name":"mysql","_id":"ciwhfxa6j000pl9qtnq9ynzgs"},{"name":"js ajax","_id":"ciwhfzr1y000wl9qts9p0l01p"},{"name":"js ajax cors 跨域","_id":"ciwhg6r0h0012l9qtcpw2m6cu"},{"name":"js ajax cors 跨域请求","_id":"ciwhg6ur00014l9qtyl34eof8"},{"name":"js ajax cors web安全 跨域请求","_id":"ciwhi3imi0019l9qtse8svjam"},{"name":"linux","_id":"cixbc0caf000z81qtrqituey3"},{"name":"http2","_id":"cixbd3kxg0005b9qtasati3fl"},{"name":"http","_id":"cixbd3no70007b9qtqwpaoqld"},{"name":"dns","_id":"cixbd6l3x0009b9qtrlwq3rhg"},{"name":"gulp","_id":"cixbd9no0000gb9qtdx0nr9i5"},{"name":"js","_id":"cixbdb4u0000jb9qtsjkvoqlw"},{"name":"vim","_id":"cixcvzhrc000pb9qtgudo8ucd"}]}}